   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"openserial.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	chTemplate_default:
  45 0030 05       		.byte	5
  46 0031 06       		.byte	6
  47 0032 0C       		.byte	12
  48 0033 07       		.byte	7
  49 0034 0F       		.byte	15
  50 0035 04       		.byte	4
  51 0036 0E       		.byte	14
  52 0037 0B       		.byte	11
  53 0038 08       		.byte	8
  54 0039 00       		.byte	0
  55 003a 01       		.byte	1
  56 003b 02       		.byte	2
  57 003c 0D       		.byte	13
  58 003d 03       		.byte	3
  59 003e 09       		.byte	9
  60 003f 0A       		.byte	10
  61              		.align	2
  64              	ebIEsBytestream:
  65 0040 1A       		.byte	26
  66 0041 88       		.byte	-120
  67 0042 06       		.byte	6
  68 0043 1A       		.byte	26
  69 0044 00       		.byte	0
  70 0045 00       		.byte	0
  71 0046 00       		.byte	0
  72 0047 00       		.byte	0
  73 0048 00       		.byte	0
  74 0049 00       		.byte	0
  75 004a 01       		.byte	1
  76 004b 1C       		.byte	28
  77 004c 00       		.byte	0
  78 004d 01       		.byte	1
  79 004e C8       		.byte	-56
  80 004f 00       		.byte	0
  81 0050 0A       		.byte	10
  82 0051 1B       		.byte	27
  83 0052 01       		.byte	1
  84 0053 00       		.byte	0
  85 0054 0D       		.byte	13
  86 0055 00       		.byte	0
  87 0056 01       		.byte	1
  88 0057 00       		.byte	0
  89 0058 00       		.byte	0
  90 0059 00       		.byte	0
  91 005a 00       		.byte	0
  92 005b 0F       		.byte	15
  93              		.align	2
  96              	all_routers_multicast:
  97 005c FF       		.byte	-1
  98 005d 02       		.byte	2
  99 005e 00       		.byte	0
 100 005f 00       		.byte	0
 101 0060 00       		.byte	0
 102 0061 00       		.byte	0
 103 0062 00       		.byte	0
 104 0063 00       		.byte	0
 105 0064 00       		.byte	0
 106 0065 00       		.byte	0
 107 0066 00       		.byte	0
 108 0067 00       		.byte	0
 109 0068 00       		.byte	0
 110 0069 00       		.byte	0
 111 006a 00       		.byte	0
 112 006b 1A       		.byte	26
 113              		.align	2
 116              	linklocalprefix:
 117 006c FE       		.byte	-2
 118 006d 80       		.byte	-128
 119 006e 00       		.byte	0
 120 006f 00       		.byte	0
 121 0070 00       		.byte	0
 122 0071 00       		.byte	0
 123 0072 00       		.byte	0
 124 0073 00       		.byte	0
 125              		.align	2
 128              	fcstab:
 129 0074 0000     		.short	0
 130 0076 8911     		.short	4489
 131 0078 1223     		.short	8978
 132 007a 9B32     		.short	12955
 133 007c 2446     		.short	17956
 134 007e AD57     		.short	22445
 135 0080 3665     		.short	25910
 136 0082 BF74     		.short	29887
 137 0084 488C     		.short	-29624
 138 0086 C19D     		.short	-25151
 139 0088 5AAF     		.short	-20646
 140 008a D3BE     		.short	-16685
 141 008c 6CCA     		.short	-13716
 142 008e E5DB     		.short	-9243
 143 0090 7EE9     		.short	-5762
 144 0092 F7F8     		.short	-1801
 145 0094 8110     		.short	4225
 146 0096 0801     		.short	264
 147 0098 9333     		.short	13203
 148 009a 1A22     		.short	8730
 149 009c A556     		.short	22181
 150 009e 2C47     		.short	18220
 151 00a0 B775     		.short	30135
 152 00a2 3E64     		.short	25662
 153 00a4 C99C     		.short	-25399
 154 00a6 408D     		.short	-29376
 155 00a8 DBBF     		.short	-16421
 156 00aa 52AE     		.short	-20910
 157 00ac EDDA     		.short	-9491
 158 00ae 64CB     		.short	-13468
 159 00b0 FFF9     		.short	-1537
 160 00b2 76E8     		.short	-6026
 161 00b4 0221     		.short	8450
 162 00b6 8B30     		.short	12427
 163 00b8 1002     		.short	528
 164 00ba 9913     		.short	5017
 165 00bc 2667     		.short	26406
 166 00be AF76     		.short	30383
 167 00c0 3444     		.short	17460
 168 00c2 BD55     		.short	21949
 169 00c4 4AAD     		.short	-21174
 170 00c6 C3BC     		.short	-17213
 171 00c8 588E     		.short	-29096
 172 00ca D19F     		.short	-24623
 173 00cc 6EEB     		.short	-5266
 174 00ce E7FA     		.short	-1305
 175 00d0 7CC8     		.short	-14212
 176 00d2 F5D9     		.short	-9739
 177 00d4 8331     		.short	12675
 178 00d6 0A20     		.short	8202
 179 00d8 9112     		.short	4753
 180 00da 1803     		.short	792
 181 00dc A777     		.short	30631
 182 00de 2E66     		.short	26158
 183 00e0 B554     		.short	21685
 184 00e2 3C45     		.short	17724
 185 00e4 CBBD     		.short	-16949
 186 00e6 42AC     		.short	-21438
 187 00e8 D99E     		.short	-24871
 188 00ea 508F     		.short	-28848
 189 00ec EFFB     		.short	-1041
 190 00ee 66EA     		.short	-5530
 191 00f0 FDD8     		.short	-9987
 192 00f2 74C9     		.short	-13964
 193 00f4 0442     		.short	16900
 194 00f6 8D53     		.short	21389
 195 00f8 1661     		.short	24854
 196 00fa 9F70     		.short	28831
 197 00fc 2004     		.short	1056
 198 00fe A915     		.short	5545
 199 0100 3227     		.short	10034
 200 0102 BB36     		.short	14011
 201 0104 4CCE     		.short	-12724
 202 0106 C5DF     		.short	-8251
 203 0108 5EED     		.short	-4770
 204 010a D7FC     		.short	-809
 205 010c 6888     		.short	-30616
 206 010e E199     		.short	-26143
 207 0110 7AAB     		.short	-21638
 208 0112 F3BA     		.short	-17677
 209 0114 8552     		.short	21125
 210 0116 0C43     		.short	17164
 211 0118 9771     		.short	29079
 212 011a 1E60     		.short	24606
 213 011c A114     		.short	5281
 214 011e 2805     		.short	1320
 215 0120 B337     		.short	14259
 216 0122 3A26     		.short	9786
 217 0124 CDDE     		.short	-8499
 218 0126 44CF     		.short	-12476
 219 0128 DFFD     		.short	-545
 220 012a 56EC     		.short	-5034
 221 012c E998     		.short	-26391
 222 012e 6089     		.short	-30368
 223 0130 FBBB     		.short	-17413
 224 0132 72AA     		.short	-21902
 225 0134 0663     		.short	25350
 226 0136 8F72     		.short	29327
 227 0138 1440     		.short	16404
 228 013a 9D51     		.short	20893
 229 013c 2225     		.short	9506
 230 013e AB34     		.short	13483
 231 0140 3006     		.short	1584
 232 0142 B917     		.short	6073
 233 0144 4EEF     		.short	-4274
 234 0146 C7FE     		.short	-313
 235 0148 5CCC     		.short	-13220
 236 014a D5DD     		.short	-8747
 237 014c 6AA9     		.short	-22166
 238 014e E3B8     		.short	-18205
 239 0150 788A     		.short	-30088
 240 0152 F19B     		.short	-25615
 241 0154 8773     		.short	29575
 242 0156 0E62     		.short	25102
 243 0158 9550     		.short	20629
 244 015a 1C41     		.short	16668
 245 015c A335     		.short	13731
 246 015e 2A24     		.short	9258
 247 0160 B116     		.short	5809
 248 0162 3807     		.short	1848
 249 0164 CFFF     		.short	-49
 250 0166 46EE     		.short	-4538
 251 0168 DDDC     		.short	-8995
 252 016a 54CD     		.short	-12972
 253 016c EBB9     		.short	-17941
 254 016e 62A8     		.short	-22430
 255 0170 F99A     		.short	-25863
 256 0172 708B     		.short	-29840
 257 0174 0884     		.short	-31736
 258 0176 8195     		.short	-27263
 259 0178 1AA7     		.short	-22758
 260 017a 93B6     		.short	-18797
 261 017c 2CC2     		.short	-15828
 262 017e A5D3     		.short	-11355
 263 0180 3EE1     		.short	-7874
 264 0182 B7F0     		.short	-3913
 265 0184 4008     		.short	2112
 266 0186 C919     		.short	6601
 267 0188 522B     		.short	11090
 268 018a DB3A     		.short	15067
 269 018c 644E     		.short	20068
 270 018e ED5F     		.short	24557
 271 0190 766D     		.short	28022
 272 0192 FF7C     		.short	31999
 273 0194 8994     		.short	-27511
 274 0196 0085     		.short	-31488
 275 0198 9BB7     		.short	-18533
 276 019a 12A6     		.short	-23022
 277 019c ADD2     		.short	-11603
 278 019e 24C3     		.short	-15580
 279 01a0 BFF1     		.short	-3649
 280 01a2 36E0     		.short	-8138
 281 01a4 C118     		.short	6337
 282 01a6 4809     		.short	2376
 283 01a8 D33B     		.short	15315
 284 01aa 5A2A     		.short	10842
 285 01ac E55E     		.short	24293
 286 01ae 6C4F     		.short	20332
 287 01b0 F77D     		.short	32247
 288 01b2 7E6C     		.short	27774
 289 01b4 0AA5     		.short	-23286
 290 01b6 83B4     		.short	-19325
 291 01b8 1886     		.short	-31208
 292 01ba 9197     		.short	-26735
 293 01bc 2EE3     		.short	-7378
 294 01be A7F2     		.short	-3417
 295 01c0 3CC0     		.short	-16324
 296 01c2 B5D1     		.short	-11851
 297 01c4 4229     		.short	10562
 298 01c6 CB38     		.short	14539
 299 01c8 500A     		.short	2640
 300 01ca D91B     		.short	7129
 301 01cc 666F     		.short	28518
 302 01ce EF7E     		.short	32495
 303 01d0 744C     		.short	19572
 304 01d2 FD5D     		.short	24061
 305 01d4 8BB5     		.short	-19061
 306 01d6 02A4     		.short	-23550
 307 01d8 9996     		.short	-26983
 308 01da 1087     		.short	-30960
 309 01dc AFF3     		.short	-3153
 310 01de 26E2     		.short	-7642
 311 01e0 BDD0     		.short	-12099
 312 01e2 34C1     		.short	-16076
 313 01e4 C339     		.short	14787
 314 01e6 4A28     		.short	10314
 315 01e8 D11A     		.short	6865
 316 01ea 580B     		.short	2904
 317 01ec E77F     		.short	32743
 318 01ee 6E6E     		.short	28270
 319 01f0 F55C     		.short	23797
 320 01f2 7C4D     		.short	19836
 321 01f4 0CC6     		.short	-14836
 322 01f6 85D7     		.short	-10363
 323 01f8 1EE5     		.short	-6882
 324 01fa 97F4     		.short	-2921
 325 01fc 2880     		.short	-32728
 326 01fe A191     		.short	-28255
 327 0200 3AA3     		.short	-23750
 328 0202 B3B2     		.short	-19789
 329 0204 444A     		.short	19012
 330 0206 CD5B     		.short	23501
 331 0208 5669     		.short	26966
 332 020a DF78     		.short	30943
 333 020c 600C     		.short	3168
 334 020e E91D     		.short	7657
 335 0210 722F     		.short	12146
 336 0212 FB3E     		.short	16123
 337 0214 8DD6     		.short	-10611
 338 0216 04C7     		.short	-14588
 339 0218 9FF5     		.short	-2657
 340 021a 16E4     		.short	-7146
 341 021c A990     		.short	-28503
 342 021e 2081     		.short	-32480
 343 0220 BBB3     		.short	-19525
 344 0222 32A2     		.short	-24014
 345 0224 C55A     		.short	23237
 346 0226 4C4B     		.short	19276
 347 0228 D779     		.short	31191
 348 022a 5E68     		.short	26718
 349 022c E11C     		.short	7393
 350 022e 680D     		.short	3432
 351 0230 F33F     		.short	16371
 352 0232 7A2E     		.short	11898
 353 0234 0EE7     		.short	-6386
 354 0236 87F6     		.short	-2425
 355 0238 1CC4     		.short	-15332
 356 023a 95D5     		.short	-10859
 357 023c 2AA1     		.short	-24278
 358 023e A3B0     		.short	-20317
 359 0240 3882     		.short	-32200
 360 0242 B193     		.short	-27727
 361 0244 466B     		.short	27462
 362 0246 CF7A     		.short	31439
 363 0248 5448     		.short	18516
 364 024a DD59     		.short	23005
 365 024c 622D     		.short	11618
 366 024e EB3C     		.short	15595
 367 0250 700E     		.short	3696
 368 0252 F91F     		.short	8185
 369 0254 8FF7     		.short	-2161
 370 0256 06E6     		.short	-6650
 371 0258 9DD4     		.short	-11107
 372 025a 14C5     		.short	-15084
 373 025c ABB1     		.short	-20053
 374 025e 22A0     		.short	-24542
 375 0260 B992     		.short	-27975
 376 0262 3083     		.short	-31952
 377 0264 C77B     		.short	31687
 378 0266 4E6A     		.short	27214
 379 0268 D558     		.short	22741
 380 026a 5C49     		.short	18780
 381 026c E33D     		.short	15843
 382 026e 6A2C     		.short	11370
 383 0270 F11E     		.short	7921
 384 0272 780F     		.short	3960
 385              		.comm	openserial_vars,1252,4
 386              		.text
 387              		.align	1
 388              		.global	openserial_init
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu softvfp
 394              	openserial_init:
 395              	.LFB3:
 396              		.file 1 "build\\openmote-cc2538_armgcc\\drivers\\common\\openserial.c"
   1:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
   2:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Definition of the "openserial" driver.
   3:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
   4:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \author Fabien Chraim <chraim@eecs.berkeley.edu>, March 2012.
   5:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \author Thomas Watteyne <thomas.watteyne@inria.fr>, August 2016.
   6:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
   7:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include <stdio.h>
   8:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include <stdarg.h>
   9:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include <string.h>
  10:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  11:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "opendefs.h"
  12:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openserial.h"
  13:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "scheduler.h"
  14:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "IEEE802154E.h"
  15:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "neighbors.h"
  16:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "sixtop.h"
  17:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "icmpv6echo.h"
  18:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "idmanager.h"
  19:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openqueue.h"
  20:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openbridge.h"
  21:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "leds.h"
  22:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "schedule.h"
  23:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "uart.h"
  24:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "opentimers.h"
  25:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openhdlc.h"
  26:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "schedule.h"
  27:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "icmpv6rpl.h"
  28:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "icmpv6echo.h"
  29:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "msf.h"
  30:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "debugpins.h"
  31:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  32:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== variables =======================================
  33:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  34:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** openserial_vars_t openserial_vars;
  35:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  36:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** enum{
  37:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     TYPE_STR = 0,       //subtype for the printf message
  38:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     TYPE_INT = 1
  39:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** };
  40:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  41:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #define DEBUGPRINT_PERIOD 100 // in ms
  42:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  43:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== prototypes ======================================
  44:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  45:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  46:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // printing
  47:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printInfoErrorCritical(
  48:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     char             severity,
  49:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          calling_component,
  50:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          error_code,
  51:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg1,
  52:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg2
  53:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** );
  54:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  55:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // command handlers
  56:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleRxFrame(void);
  57:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleEcho(uint8_t* but, uint8_t bufLen);
  58:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_get6pInfo(uint8_t commandId, uint8_t* code,uint8_t* cellOptions,uint8_t* numCells,c
  59:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleCommands(void);
  60:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  61:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // misc
  62:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_debugPrint_timer_cb(opentimers_id_t id);
  63:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_board_reset_cb(opentimers_id_t id);
  64:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  65:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // HDLC output
  66:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void outputHdlcOpen(void);
  67:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void outputHdlcWrite(uint8_t b);
  68:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void outputHdlcClose(void);
  69:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  70:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // HDLC input
  71:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void inputHdlcOpen(void);
  72:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void inputHdlcWrite(uint8_t b);
  73:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void inputHdlcClose(void);
  74:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  75:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // task
  76:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printWrongCRCInput(void);
  77:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printInputBufferOverflow(void);
  78:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  79:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== public ==========================================
  80:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  81:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== admin
  82:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  83:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_init(void) {
 397              		.loc 1 83 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 82B0     		sub	sp, sp, #8
 406              		.cfi_def_cfa_offset 16
 407 0004 02AF     		add	r7, sp, #8
 408              		.cfi_def_cfa 7, 8
  84:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // reset variable
  85:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memset(&openserial_vars,0,sizeof(openserial_vars_t));
 409              		.loc 1 85 0
 410 0006 40F2E442 		movw	r2, #1252
 411 000a 0021     		movs	r1, #0
 412 000c 2248     		ldr	r0, .L2
 413 000e FFF7FEFF 		bl	memset
  86:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  87:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // admin
  88:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fInhibited         = FALSE;
 414              		.loc 1 88 0
 415 0012 214B     		ldr	r3, .L2
 416 0014 0022     		movs	r2, #0
 417 0016 1A70     		strb	r2, [r3]
  89:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.ctsStateChanged    = FALSE;
 418              		.loc 1 89 0
 419 0018 1F4B     		ldr	r3, .L2
 420 001a 0022     		movs	r2, #0
 421 001c 5A70     		strb	r2, [r3, #1]
  90:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.debugPrintCounter  = 0;
 422              		.loc 1 90 0
 423 001e 1E4B     		ldr	r3, .L2
 424 0020 0022     		movs	r2, #0
 425 0022 9A70     		strb	r2, [r3, #2]
  91:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  92:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // input
  93:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcBusyReceiving  = FALSE;
 426              		.loc 1 93 0
 427 0024 1C4B     		ldr	r3, .L2
 428 0026 0022     		movs	r2, #0
 429 0028 83F8D420 		strb	r2, [r3, #212]
  94:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcInputEscaping  = FALSE;
 430              		.loc 1 94 0
 431 002c 1A4B     		ldr	r3, .L2
 432 002e 0022     		movs	r2, #0
 433 0030 83F8D820 		strb	r2, [r3, #216]
  95:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.inputBufFillLevel  = 0;
 434              		.loc 1 95 0
 435 0034 184B     		ldr	r3, .L2
 436 0036 0022     		movs	r2, #0
 437 0038 83F8D220 		strb	r2, [r3, #210]
  96:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  97:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // ouput
  98:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBufIdxR      = 0;
 438              		.loc 1 98 0
 439 003c 164B     		ldr	r3, .L2
 440 003e 0022     		movs	r2, #0
 441 0040 A3F8DC24 		strh	r2, [r3, #1244]	@ movhi
  99:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBufIdxW      = 0;
 442              		.loc 1 99 0
 443 0044 144B     		ldr	r3, .L2
 444 0046 0022     		movs	r2, #0
 445 0048 A3F8DA24 		strh	r2, [r3, #1242]	@ movhi
 100:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fBusyFlushing      = FALSE;
 446              		.loc 1 100 0
 447 004c 124B     		ldr	r3, .L2
 448 004e 0022     		movs	r2, #0
 449 0050 83F8DE24 		strb	r2, [r3, #1246]
 101:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 102:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.reset_timerId      = opentimers_create(TIMER_GENERAL_PURPOSE, TASKPRIO_OPENSERI
 450              		.loc 1 102 0
 451 0054 0E21     		movs	r1, #14
 452 0056 FF20     		movs	r0, #255
 453 0058 FFF7FEFF 		bl	opentimers_create
 454 005c 0346     		mov	r3, r0
 455 005e 1A46     		mov	r2, r3
 456 0060 0D4B     		ldr	r3, .L2
 457 0062 1A72     		strb	r2, [r3, #8]
 103:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.debugPrint_timerId = opentimers_create(TIMER_GENERAL_PURPOSE, TASKPRIO_OPENSERI
 458              		.loc 1 103 0
 459 0064 0E21     		movs	r1, #14
 460 0066 FF20     		movs	r0, #255
 461 0068 FFF7FEFF 		bl	opentimers_create
 462 006c 0346     		mov	r3, r0
 463 006e 1A46     		mov	r2, r3
 464 0070 094B     		ldr	r3, .L2
 465 0072 5A72     		strb	r2, [r3, #9]
 104:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     opentimers_scheduleIn(
 466              		.loc 1 104 0
 467 0074 084B     		ldr	r3, .L2
 468 0076 587A     		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 469 0078 084B     		ldr	r3, .L2+4
 470 007a 0093     		str	r3, [sp]
 471 007c 0023     		movs	r3, #0
 472 007e 0022     		movs	r2, #0
 473 0080 6421     		movs	r1, #100
 474 0082 FFF7FEFF 		bl	opentimers_scheduleIn
 105:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.debugPrint_timerId,
 106:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         DEBUGPRINT_PERIOD,
 107:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         TIME_MS,
 108:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         TIMER_PERIODIC,
 109:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_debugPrint_timer_cb
 110:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 111:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 112:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // UART
 113:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uart_setCallbacks(
 475              		.loc 1 113 0
 476 0086 0649     		ldr	r1, .L2+8
 477 0088 0648     		ldr	r0, .L2+12
 478 008a FFF7FEFF 		bl	uart_setCallbacks
 114:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         isr_openserial_tx,
 115:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         isr_openserial_rx
 116:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 117:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uart_enableInterrupts();
 479              		.loc 1 117 0
 480 008e FFF7FEFF 		bl	uart_enableInterrupts
 118:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 481              		.loc 1 118 0
 482 0092 00BF     		nop
 483 0094 BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 0096 80BD     		pop	{r7, pc}
 487              	.L3:
 488              		.align	2
 489              	.L2:
 490 0098 00000000 		.word	openserial_vars
 491 009c 00000000 		.word	openserial_debugPrint_timer_cb
 492 00a0 00000000 		.word	isr_openserial_rx
 493 00a4 00000000 		.word	isr_openserial_tx
 494              		.cfi_endproc
 495              	.LFE3:
 497              		.align	1
 498              		.global	openserial_register
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu softvfp
 504              	openserial_register:
 505              	.LFB4:
 119:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 120:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_register(openserial_rsvpt* rsvp) {
 506              		.loc 1 120 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 00a8 80B4     		push	{r7}
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 00aa 83B0     		sub	sp, sp, #12
 515              		.cfi_def_cfa_offset 16
 516 00ac 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 518 00ae 7860     		str	r0, [r7, #4]
 121:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // FIXME: register multiple commands (linked list)
 122:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.registeredCmd = rsvp;
 519              		.loc 1 122 0
 520 00b0 034A     		ldr	r2, .L5
 521 00b2 7B68     		ldr	r3, [r7, #4]
 522 00b4 5360     		str	r3, [r2, #4]
 123:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 523              		.loc 1 123 0
 524 00b6 00BF     		nop
 525 00b8 0C37     		adds	r7, r7, #12
 526              		.cfi_def_cfa_offset 4
 527 00ba BD46     		mov	sp, r7
 528              		.cfi_def_cfa_register 13
 529              		@ sp needed
 530 00bc 80BC     		pop	{r7}
 531              		.cfi_restore 7
 532              		.cfi_def_cfa_offset 0
 533 00be 7047     		bx	lr
 534              	.L6:
 535              		.align	2
 536              	.L5:
 537 00c0 00000000 		.word	openserial_vars
 538              		.cfi_endproc
 539              	.LFE4:
 541              		.align	1
 542              		.global	openserial_printStatus
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu softvfp
 548              	openserial_printStatus:
 549              	.LFB5:
 124:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 125:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== transmitting
 126:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 127:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printStatus(
 128:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             statusElement,
 129:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t*            buffer,
 130:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             length
 131:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 550              		.loc 1 131 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 16
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 00c4 80B5     		push	{r7, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 00c6 84B0     		sub	sp, sp, #16
 559              		.cfi_def_cfa_offset 24
 560 00c8 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 562 00ca 0346     		mov	r3, r0
 563 00cc 3960     		str	r1, [r7]
 564 00ce FB71     		strb	r3, [r7, #7]
 565 00d0 1346     		mov	r3, r2
 566 00d2 BB71     		strb	r3, [r7, #6]
 132:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t i;
 133:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 134:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 567              		.loc 1 134 0
 568 00d4 FFF7FEFF 		bl	outputHdlcOpen
 135:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_STATUS);
 569              		.loc 1 135 0
 570 00d8 5320     		movs	r0, #83
 571 00da FFF7FEFF 		bl	outputHdlcWrite
 136:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 572              		.loc 1 136 0
 573 00de 0120     		movs	r0, #1
 574 00e0 FFF7FEFF 		bl	idmanager_getMyID
 575 00e4 0346     		mov	r3, r0
 576 00e6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 577 00e8 1846     		mov	r0, r3
 578 00ea FFF7FEFF 		bl	outputHdlcWrite
 137:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 579              		.loc 1 137 0
 580 00ee 0120     		movs	r0, #1
 581 00f0 FFF7FEFF 		bl	idmanager_getMyID
 582 00f4 0346     		mov	r3, r0
 583 00f6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 584 00f8 1846     		mov	r0, r3
 585 00fa FFF7FEFF 		bl	outputHdlcWrite
 138:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(statusElement);
 586              		.loc 1 138 0
 587 00fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 588 0100 1846     		mov	r0, r3
 589 0102 FFF7FEFF 		bl	outputHdlcWrite
 139:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 590              		.loc 1 139 0
 591 0106 0023     		movs	r3, #0
 592 0108 FB73     		strb	r3, [r7, #15]
 593 010a 09E0     		b	.L8
 594              	.L9:
 140:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 595              		.loc 1 140 0 discriminator 3
 596 010c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597 010e 3A68     		ldr	r2, [r7]
 598 0110 1344     		add	r3, r3, r2
 599 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600 0114 1846     		mov	r0, r3
 601 0116 FFF7FEFF 		bl	outputHdlcWrite
 139:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 602              		.loc 1 139 0 discriminator 3
 603 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 604 011c 0133     		adds	r3, r3, #1
 605 011e FB73     		strb	r3, [r7, #15]
 606              	.L8:
 139:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 607              		.loc 1 139 0 is_stmt 0 discriminator 1
 608 0120 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 609 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 610 0124 9A42     		cmp	r2, r3
 611 0126 F1D3     		bcc	.L9
 141:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 142:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 612              		.loc 1 142 0 is_stmt 1
 613 0128 FFF7FEFF 		bl	outputHdlcClose
 143:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 144:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 145:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 614              		.loc 1 145 0
 615 012c FFF7FEFF 		bl	openserial_flush
 146:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 147:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 616              		.loc 1 147 0
 617 0130 0023     		movs	r3, #0
 148:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 618              		.loc 1 148 0
 619 0132 1846     		mov	r0, r3
 620 0134 1037     		adds	r7, r7, #16
 621              		.cfi_def_cfa_offset 8
 622 0136 BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0138 80BD     		pop	{r7, pc}
 626              		.cfi_endproc
 627              	.LFE5:
 629              		.align	1
 630              		.global	openserial_printInfo
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu softvfp
 636              	openserial_printInfo:
 637              	.LFB6:
 149:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 150:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printInfo(
 151:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 152:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 153:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 154:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 155:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 638              		.loc 1 155 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 013a 90B5     		push	{r4, r7, lr}
 643              		.cfi_def_cfa_offset 12
 644              		.cfi_offset 4, -12
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 647 013c 85B0     		sub	sp, sp, #20
 648              		.cfi_def_cfa_offset 32
 649 013e 02AF     		add	r7, sp, #8
 650              		.cfi_def_cfa 7, 24
 651 0140 0446     		mov	r4, r0
 652 0142 0846     		mov	r0, r1
 653 0144 1146     		mov	r1, r2
 654 0146 1A46     		mov	r2, r3
 655 0148 2346     		mov	r3, r4
 656 014a FB71     		strb	r3, [r7, #7]
 657 014c 0346     		mov	r3, r0
 658 014e BB71     		strb	r3, [r7, #6]
 659 0150 0B46     		mov	r3, r1	@ movhi
 660 0152 BB80     		strh	r3, [r7, #4]	@ movhi
 661 0154 1346     		mov	r3, r2	@ movhi
 662 0156 7B80     		strh	r3, [r7, #2]	@ movhi
 156:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 663              		.loc 1 156 0
 664 0158 B888     		ldrh	r0, [r7, #4]
 665 015a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 666 015c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 667 015e 7B88     		ldrh	r3, [r7, #2]
 668 0160 0093     		str	r3, [sp]
 669 0162 0346     		mov	r3, r0
 670 0164 4920     		movs	r0, #73
 671 0166 FFF7FEFF 		bl	openserial_printInfoErrorCritical
 672 016a 0346     		mov	r3, r0
 157:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_INFO,
 158:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 159:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 160:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 161:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 162:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 163:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 164:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 165:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 673              		.loc 1 165 0
 674 016c 1846     		mov	r0, r3
 675 016e 0C37     		adds	r7, r7, #12
 676              		.cfi_def_cfa_offset 12
 677 0170 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0172 90BD     		pop	{r4, r7, pc}
 681              		.cfi_endproc
 682              	.LFE6:
 684              		.align	1
 685              		.global	openserial_printError
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu softvfp
 691              	openserial_printError:
 692              	.LFB7:
 166:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 167:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printError(
 168:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 169:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 170:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 171:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 172:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 693              		.loc 1 172 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0174 90B5     		push	{r4, r7, lr}
 698              		.cfi_def_cfa_offset 12
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0176 85B0     		sub	sp, sp, #20
 703              		.cfi_def_cfa_offset 32
 704 0178 02AF     		add	r7, sp, #8
 705              		.cfi_def_cfa 7, 24
 706 017a 0446     		mov	r4, r0
 707 017c 0846     		mov	r0, r1
 708 017e 1146     		mov	r1, r2
 709 0180 1A46     		mov	r2, r3
 710 0182 2346     		mov	r3, r4
 711 0184 FB71     		strb	r3, [r7, #7]
 712 0186 0346     		mov	r3, r0
 713 0188 BB71     		strb	r3, [r7, #6]
 714 018a 0B46     		mov	r3, r1	@ movhi
 715 018c BB80     		strh	r3, [r7, #4]	@ movhi
 716 018e 1346     		mov	r3, r2	@ movhi
 717 0190 7B80     		strh	r3, [r7, #2]	@ movhi
 173:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // toggle error LED
 174:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     leds_error_toggle();
 718              		.loc 1 174 0
 719 0192 FFF7FEFF 		bl	leds_error_toggle
 175:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 176:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 720              		.loc 1 176 0
 721 0196 B888     		ldrh	r0, [r7, #4]
 722 0198 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 723 019a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 724 019c 7B88     		ldrh	r3, [r7, #2]
 725 019e 0093     		str	r3, [sp]
 726 01a0 0346     		mov	r3, r0
 727 01a2 4520     		movs	r0, #69
 728 01a4 FFF7FEFF 		bl	openserial_printInfoErrorCritical
 729 01a8 0346     		mov	r3, r0
 177:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_ERROR,
 178:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 179:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 180:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 181:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 182:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 183:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 184:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 185:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 730              		.loc 1 185 0
 731 01aa 1846     		mov	r0, r3
 732 01ac 0C37     		adds	r7, r7, #12
 733              		.cfi_def_cfa_offset 12
 734 01ae BD46     		mov	sp, r7
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 01b0 90BD     		pop	{r4, r7, pc}
 738              		.cfi_endproc
 739              	.LFE7:
 741              		.align	1
 742              		.global	new_openserial_printError
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu softvfp
 748              	new_openserial_printError:
 749              	.LFB8:
 186:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 187:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t new_openserial_printError(
 188:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 189:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 190:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 191:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 192:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 750              		.loc 1 192 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 01b2 90B5     		push	{r4, r7, lr}
 755              		.cfi_def_cfa_offset 12
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 7, -8
 758              		.cfi_offset 14, -4
 759 01b4 85B0     		sub	sp, sp, #20
 760              		.cfi_def_cfa_offset 32
 761 01b6 02AF     		add	r7, sp, #8
 762              		.cfi_def_cfa 7, 24
 763 01b8 0446     		mov	r4, r0
 764 01ba 0846     		mov	r0, r1
 765 01bc 1146     		mov	r1, r2
 766 01be 1A46     		mov	r2, r3
 767 01c0 2346     		mov	r3, r4
 768 01c2 FB71     		strb	r3, [r7, #7]
 769 01c4 0346     		mov	r3, r0
 770 01c6 BB71     		strb	r3, [r7, #6]
 771 01c8 0B46     		mov	r3, r1	@ movhi
 772 01ca BB80     		strh	r3, [r7, #4]	@ movhi
 773 01cc 1346     		mov	r3, r2	@ movhi
 774 01ce 7B80     		strh	r3, [r7, #2]	@ movhi
 193:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // toggle error LED
 194:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     leds_error_toggle();
 775              		.loc 1 194 0
 776 01d0 FFF7FEFF 		bl	leds_error_toggle
 195:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 196:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 777              		.loc 1 196 0
 778 01d4 B888     		ldrh	r0, [r7, #4]
 779 01d6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 780 01d8 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 781 01da 7B88     		ldrh	r3, [r7, #2]
 782 01dc 0093     		str	r3, [sp]
 783 01de 0346     		mov	r3, r0
 784 01e0 4520     		movs	r0, #69
 785 01e2 FFF7FEFF 		bl	openserial_printInfoErrorCritical
 786 01e6 0346     		mov	r3, r0
 197:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_ERROR,
 198:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 199:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 200:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 201:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 202:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 203:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 204:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 205:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 787              		.loc 1 205 0
 788 01e8 1846     		mov	r0, r3
 789 01ea 0C37     		adds	r7, r7, #12
 790              		.cfi_def_cfa_offset 12
 791 01ec BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 01ee 90BD     		pop	{r4, r7, pc}
 795              		.cfi_endproc
 796              	.LFE8:
 798              		.align	1
 799              		.global	openserial_printCritical
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu softvfp
 805              	openserial_printCritical:
 806              	.LFB9:
 206:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 207:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printCritical(
 208:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 209:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 210:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 211:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 212:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 807              		.loc 1 212 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 16
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811 01f0 90B5     		push	{r4, r7, lr}
 812              		.cfi_def_cfa_offset 12
 813              		.cfi_offset 4, -12
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 01f2 87B0     		sub	sp, sp, #28
 817              		.cfi_def_cfa_offset 40
 818 01f4 02AF     		add	r7, sp, #8
 819              		.cfi_def_cfa 7, 32
 820 01f6 0446     		mov	r4, r0
 821 01f8 0846     		mov	r0, r1
 822 01fa 1146     		mov	r1, r2
 823 01fc 1A46     		mov	r2, r3
 824 01fe 2346     		mov	r3, r4
 825 0200 FB71     		strb	r3, [r7, #7]
 826 0202 0346     		mov	r3, r0
 827 0204 BB71     		strb	r3, [r7, #6]
 828 0206 0B46     		mov	r3, r1	@ movhi
 829 0208 BB80     		strh	r3, [r7, #4]	@ movhi
 830 020a 1346     		mov	r3, r2	@ movhi
 831 020c 7B80     		strh	r3, [r7, #2]	@ movhi
 213:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint32_t         reference;
 214:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 215:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // blink error LED, this is serious
 216:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     leds_error_blink();
 832              		.loc 1 216 0
 833 020e FFF7FEFF 		bl	leds_error_blink
 217:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 218:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // schedule for the mote to reboot in 10s
 219:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     reference = opentimers_getValue();
 834              		.loc 1 219 0
 835 0212 FFF7FEFF 		bl	opentimers_getValue
 836 0216 F860     		str	r0, [r7, #12]
 220:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     opentimers_scheduleAbsolute(
 837              		.loc 1 220 0
 838 0218 0B4B     		ldr	r3, .L19
 839 021a 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 840 021c 0B4B     		ldr	r3, .L19+4
 841 021e 0093     		str	r3, [sp]
 842 0220 0023     		movs	r3, #0
 843 0222 FA68     		ldr	r2, [r7, #12]
 844 0224 42F21071 		movw	r1, #10000
 845 0228 FFF7FEFF 		bl	opentimers_scheduleAbsolute
 221:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.reset_timerId,  // timerId
 222:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         10000,                          // duration
 223:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         reference,                      // reference
 224:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         TIME_MS,                        // timetype
 225:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_board_reset_cb       // callback
 226:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 227:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 228:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 846              		.loc 1 228 0
 847 022c B888     		ldrh	r0, [r7, #4]
 848 022e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 849 0230 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 850 0232 7B88     		ldrh	r3, [r7, #2]
 851 0234 0093     		str	r3, [sp]
 852 0236 0346     		mov	r3, r0
 853 0238 4320     		movs	r0, #67
 854 023a FFF7FEFF 		bl	openserial_printInfoErrorCritical
 855 023e 0346     		mov	r3, r0
 229:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_CRITICAL,
 230:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 231:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 232:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 233:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 234:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 235:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 236:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 237:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 856              		.loc 1 237 0
 857 0240 1846     		mov	r0, r3
 858 0242 1437     		adds	r7, r7, #20
 859              		.cfi_def_cfa_offset 12
 860 0244 BD46     		mov	sp, r7
 861              		.cfi_def_cfa_register 13
 862              		@ sp needed
 863 0246 90BD     		pop	{r4, r7, pc}
 864              	.L20:
 865              		.align	2
 866              	.L19:
 867 0248 00000000 		.word	openserial_vars
 868 024c 00000000 		.word	openserial_board_reset_cb
 869              		.cfi_endproc
 870              	.LFE9:
 872              		.align	1
 873              		.global	openserial_printData
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu softvfp
 879              	openserial_printData:
 880              	.LFB10:
 238:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 239:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printData(uint8_t* buffer, uint8_t length) {
 881              		.loc 1 239 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 16
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885 0250 80B5     		push	{r7, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0252 84B0     		sub	sp, sp, #16
 890              		.cfi_def_cfa_offset 24
 891 0254 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
 893 0256 7860     		str	r0, [r7, #4]
 894 0258 0B46     		mov	r3, r1
 895 025a FB70     		strb	r3, [r7, #3]
 240:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 241:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  asn[5];
 242:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 243:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // retrieve ASN
 244:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ieee154e_getAsn(asn);
 896              		.loc 1 244 0
 897 025c 07F10803 		add	r3, r7, #8
 898 0260 1846     		mov	r0, r3
 899 0262 FFF7FEFF 		bl	ieee154e_getAsn
 245:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 246:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 900              		.loc 1 246 0
 901 0266 FFF7FEFF 		bl	outputHdlcOpen
 247:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_DATA);
 902              		.loc 1 247 0
 903 026a 4420     		movs	r0, #68
 904 026c FFF7FEFF 		bl	outputHdlcWrite
 248:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 905              		.loc 1 248 0
 906 0270 0120     		movs	r0, #1
 907 0272 FFF7FEFF 		bl	idmanager_getMyID
 908 0276 0346     		mov	r3, r0
 909 0278 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 910 027a 1846     		mov	r0, r3
 911 027c FFF7FEFF 		bl	outputHdlcWrite
 249:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 912              		.loc 1 249 0
 913 0280 0120     		movs	r0, #1
 914 0282 FFF7FEFF 		bl	idmanager_getMyID
 915 0286 0346     		mov	r3, r0
 916 0288 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 917 028a 1846     		mov	r0, r3
 918 028c FFF7FEFF 		bl	outputHdlcWrite
 250:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[0]);
 919              		.loc 1 250 0
 920 0290 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 921 0292 1846     		mov	r0, r3
 922 0294 FFF7FEFF 		bl	outputHdlcWrite
 251:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[1]);
 923              		.loc 1 251 0
 924 0298 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 925 029a 1846     		mov	r0, r3
 926 029c FFF7FEFF 		bl	outputHdlcWrite
 252:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[2]);
 927              		.loc 1 252 0
 928 02a0 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 929 02a2 1846     		mov	r0, r3
 930 02a4 FFF7FEFF 		bl	outputHdlcWrite
 253:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[3]);
 931              		.loc 1 253 0
 932 02a8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 933 02aa 1846     		mov	r0, r3
 934 02ac FFF7FEFF 		bl	outputHdlcWrite
 254:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[4]);
 935              		.loc 1 254 0
 936 02b0 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 937 02b2 1846     		mov	r0, r3
 938 02b4 FFF7FEFF 		bl	outputHdlcWrite
 255:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 939              		.loc 1 255 0
 940 02b8 0023     		movs	r3, #0
 941 02ba FB73     		strb	r3, [r7, #15]
 942 02bc 09E0     		b	.L22
 943              	.L23:
 256:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 944              		.loc 1 256 0 discriminator 3
 945 02be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 946 02c0 7A68     		ldr	r2, [r7, #4]
 947 02c2 1344     		add	r3, r3, r2
 948 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 02c6 1846     		mov	r0, r3
 950 02c8 FFF7FEFF 		bl	outputHdlcWrite
 255:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 951              		.loc 1 255 0 discriminator 3
 952 02cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 953 02ce 0133     		adds	r3, r3, #1
 954 02d0 FB73     		strb	r3, [r7, #15]
 955              	.L22:
 255:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 956              		.loc 1 255 0 is_stmt 0 discriminator 1
 957 02d2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 958 02d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 959 02d6 9A42     		cmp	r2, r3
 960 02d8 F1D3     		bcc	.L23
 257:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 258:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 961              		.loc 1 258 0 is_stmt 1
 962 02da FFF7FEFF 		bl	outputHdlcClose
 259:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 260:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 261:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 963              		.loc 1 261 0
 964 02de FFF7FEFF 		bl	openserial_flush
 262:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 263:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 965              		.loc 1 263 0
 966 02e2 0023     		movs	r3, #0
 264:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 967              		.loc 1 264 0
 968 02e4 1846     		mov	r0, r3
 969 02e6 1037     		adds	r7, r7, #16
 970              		.cfi_def_cfa_offset 8
 971 02e8 BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 02ea 80BD     		pop	{r7, pc}
 975              		.cfi_endproc
 976              	.LFE10:
 978              		.align	1
 979              		.global	openserial_printSniffedPacket
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu softvfp
 985              	openserial_printSniffedPacket:
 986              	.LFB11:
 265:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 266:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 267:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 268:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printSniffedPacket(uint8_t* buffer, uint8_t length, uint8_t channel) {
 987              		.loc 1 268 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 16
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991 02ec 80B5     		push	{r7, lr}
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 02ee 84B0     		sub	sp, sp, #16
 996              		.cfi_def_cfa_offset 24
 997 02f0 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 02f2 7860     		str	r0, [r7, #4]
 1000 02f4 0B46     		mov	r3, r1
 1001 02f6 FB70     		strb	r3, [r7, #3]
 1002 02f8 1346     		mov	r3, r2
 1003 02fa BB70     		strb	r3, [r7, #2]
 269:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 270:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 271:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1004              		.loc 1 271 0
 1005 02fc FFF7FEFF 		bl	outputHdlcOpen
 272:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_SNIFFED_PACKET);
 1006              		.loc 1 272 0
 1007 0300 5020     		movs	r0, #80
 1008 0302 FFF7FEFF 		bl	outputHdlcWrite
 273:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 1009              		.loc 1 273 0
 1010 0306 0120     		movs	r0, #1
 1011 0308 FFF7FEFF 		bl	idmanager_getMyID
 1012 030c 0346     		mov	r3, r0
 1013 030e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1014 0310 1846     		mov	r0, r3
 1015 0312 FFF7FEFF 		bl	outputHdlcWrite
 274:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 1016              		.loc 1 274 0
 1017 0316 0120     		movs	r0, #1
 1018 0318 FFF7FEFF 		bl	idmanager_getMyID
 1019 031c 0346     		mov	r3, r0
 1020 031e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1021 0320 1846     		mov	r0, r3
 1022 0322 FFF7FEFF 		bl	outputHdlcWrite
 275:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 1023              		.loc 1 275 0
 1024 0326 0023     		movs	r3, #0
 1025 0328 FB73     		strb	r3, [r7, #15]
 1026 032a 09E0     		b	.L26
 1027              	.L27:
 276:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****        outputHdlcWrite(buffer[i]);
 1028              		.loc 1 276 0 discriminator 3
 1029 032c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1030 032e 7A68     		ldr	r2, [r7, #4]
 1031 0330 1344     		add	r3, r3, r2
 1032 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1033 0334 1846     		mov	r0, r3
 1034 0336 FFF7FEFF 		bl	outputHdlcWrite
 275:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 1035              		.loc 1 275 0 discriminator 3
 1036 033a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1037 033c 0133     		adds	r3, r3, #1
 1038 033e FB73     		strb	r3, [r7, #15]
 1039              	.L26:
 275:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 1040              		.loc 1 275 0 is_stmt 0 discriminator 1
 1041 0340 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1042 0342 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1043 0344 9A42     		cmp	r2, r3
 1044 0346 F1D3     		bcc	.L27
 277:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 278:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(channel);
 1045              		.loc 1 278 0 is_stmt 1
 1046 0348 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1047 034a 1846     		mov	r0, r3
 1048 034c FFF7FEFF 		bl	outputHdlcWrite
 279:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1049              		.loc 1 279 0
 1050 0350 FFF7FEFF 		bl	outputHdlcClose
 280:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 281:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 282:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1051              		.loc 1 282 0
 1052 0354 FFF7FEFF 		bl	openserial_flush
 283:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 284:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 1053              		.loc 1 284 0
 1054 0358 0023     		movs	r3, #0
 285:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1055              		.loc 1 285 0
 1056 035a 1846     		mov	r0, r3
 1057 035c 1037     		adds	r7, r7, #16
 1058              		.cfi_def_cfa_offset 8
 1059 035e BD46     		mov	sp, r7
 1060              		.cfi_def_cfa_register 13
 1061              		@ sp needed
 1062 0360 80BD     		pop	{r7, pc}
 1063              		.cfi_endproc
 1064              	.LFE11:
 1066              		.align	1
 1067              		.global	openserial_print_uint32_t
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu softvfp
 1073              	openserial_print_uint32_t:
 1074              	.LFB12:
 286:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 287:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_print_uint32_t(uint32_t value) {
 1075              		.loc 1 287 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 16
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0362 80B5     		push	{r7, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0364 84B0     		sub	sp, sp, #16
 1084              		.cfi_def_cfa_offset 24
 1085 0366 00AF     		add	r7, sp, #0
 1086              		.cfi_def_cfa_register 7
 1087 0368 7860     		str	r0, [r7, #4]
 288:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef OPENSERIAL_PRINTF
 289:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 290:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  pvalue[4];
 291:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 292:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1088              		.loc 1 292 0
 1089 036a FFF7FEFF 		bl	outputHdlcOpen
 293:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_PRINTF);
 1090              		.loc 1 293 0
 1091 036e 4620     		movs	r0, #70
 1092 0370 FFF7FEFF 		bl	outputHdlcWrite
 294:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(TYPE_INT);
 1093              		.loc 1 294 0
 1094 0374 0120     		movs	r0, #1
 1095 0376 FFF7FEFF 		bl	outputHdlcWrite
 295:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memcpy(pvalue, &value, 4);
 1096              		.loc 1 295 0
 1097 037a 7B68     		ldr	r3, [r7, #4]
 1098 037c BB60     		str	r3, [r7, #8]
 296:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<4;i++) {
 1099              		.loc 1 296 0
 1100 037e 0023     		movs	r3, #0
 1101 0380 FB73     		strb	r3, [r7, #15]
 1102 0382 0BE0     		b	.L30
 1103              	.L31:
 297:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(pvalue[i]);
 1104              		.loc 1 297 0 discriminator 3
 1105 0384 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1106 0386 07F11002 		add	r2, r7, #16
 1107 038a 1344     		add	r3, r3, r2
 1108 038c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1109 0390 1846     		mov	r0, r3
 1110 0392 FFF7FEFF 		bl	outputHdlcWrite
 296:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<4;i++) {
 1111              		.loc 1 296 0 discriminator 3
 1112 0396 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1113 0398 0133     		adds	r3, r3, #1
 1114 039a FB73     		strb	r3, [r7, #15]
 1115              	.L30:
 296:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<4;i++) {
 1116              		.loc 1 296 0 is_stmt 0 discriminator 1
 1117 039c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1118 039e 032B     		cmp	r3, #3
 1119 03a0 F0D9     		bls	.L31
 298:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 299:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1120              		.loc 1 299 0 is_stmt 1
 1121 03a2 FFF7FEFF 		bl	outputHdlcClose
 300:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 301:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 302:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1122              		.loc 1 302 0
 1123 03a6 FFF7FEFF 		bl	openserial_flush
 303:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 304:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 1124              		.loc 1 304 0
 1125 03aa 0023     		movs	r3, #0
 305:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1126              		.loc 1 305 0
 1127 03ac 1846     		mov	r0, r3
 1128 03ae 1037     		adds	r7, r7, #16
 1129              		.cfi_def_cfa_offset 8
 1130 03b0 BD46     		mov	sp, r7
 1131              		.cfi_def_cfa_register 13
 1132              		@ sp needed
 1133 03b2 80BD     		pop	{r7, pc}
 1134              		.cfi_endproc
 1135              	.LFE12:
 1137              		.align	1
 1138              		.global	openserial_print_str
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu softvfp
 1144              	openserial_print_str:
 1145              	.LFB13:
 306:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 307:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_print_str(char* buffer, uint8_t length) {
 1146              		.loc 1 307 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 16
 1149              		@ frame_needed = 1, uses_anonymous_args = 0
 1150 03b4 80B5     		push	{r7, lr}
 1151              		.cfi_def_cfa_offset 8
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154 03b6 84B0     		sub	sp, sp, #16
 1155              		.cfi_def_cfa_offset 24
 1156 03b8 00AF     		add	r7, sp, #0
 1157              		.cfi_def_cfa_register 7
 1158 03ba 7860     		str	r0, [r7, #4]
 1159 03bc 0B46     		mov	r3, r1
 1160 03be FB70     		strb	r3, [r7, #3]
 308:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef OPENSERIAL_PRINTF
 309:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 310:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  asn[5];
 311:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 312:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // retrieve ASN
 313:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ieee154e_getAsn(asn);
 1161              		.loc 1 313 0
 1162 03c0 07F10803 		add	r3, r7, #8
 1163 03c4 1846     		mov	r0, r3
 1164 03c6 FFF7FEFF 		bl	ieee154e_getAsn
 314:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 315:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1165              		.loc 1 315 0
 1166 03ca FFF7FEFF 		bl	outputHdlcOpen
 316:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_PRINTF);
 1167              		.loc 1 316 0
 1168 03ce 4620     		movs	r0, #70
 1169 03d0 FFF7FEFF 		bl	outputHdlcWrite
 317:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(TYPE_STR);
 1170              		.loc 1 317 0
 1171 03d4 0020     		movs	r0, #0
 1172 03d6 FFF7FEFF 		bl	outputHdlcWrite
 318:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 1173              		.loc 1 318 0
 1174 03da 0120     		movs	r0, #1
 1175 03dc FFF7FEFF 		bl	idmanager_getMyID
 1176 03e0 0346     		mov	r3, r0
 1177 03e2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1178 03e4 1846     		mov	r0, r3
 1179 03e6 FFF7FEFF 		bl	outputHdlcWrite
 319:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 1180              		.loc 1 319 0
 1181 03ea 0120     		movs	r0, #1
 1182 03ec FFF7FEFF 		bl	idmanager_getMyID
 1183 03f0 0346     		mov	r3, r0
 1184 03f2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1185 03f4 1846     		mov	r0, r3
 1186 03f6 FFF7FEFF 		bl	outputHdlcWrite
 320:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for(i=0; i<5;i++) {
 1187              		.loc 1 320 0
 1188 03fa 0023     		movs	r3, #0
 1189 03fc FB73     		strb	r3, [r7, #15]
 1190 03fe 0BE0     		b	.L34
 1191              	.L35:
 321:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(asn[i]);
 1192              		.loc 1 321 0 discriminator 3
 1193 0400 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1194 0402 07F11002 		add	r2, r7, #16
 1195 0406 1344     		add	r3, r3, r2
 1196 0408 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1197 040c 1846     		mov	r0, r3
 1198 040e FFF7FEFF 		bl	outputHdlcWrite
 320:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for(i=0; i<5;i++) {
 1199              		.loc 1 320 0 discriminator 3
 1200 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1201 0414 0133     		adds	r3, r3, #1
 1202 0416 FB73     		strb	r3, [r7, #15]
 1203              	.L34:
 320:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for(i=0; i<5;i++) {
 1204              		.loc 1 320 0 is_stmt 0 discriminator 1
 1205 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1206 041a 042B     		cmp	r3, #4
 1207 041c F0D9     		bls	.L35
 322:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 323:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 1208              		.loc 1 323 0 is_stmt 1
 1209 041e 0023     		movs	r3, #0
 1210 0420 FB73     		strb	r3, [r7, #15]
 1211 0422 09E0     		b	.L36
 1212              	.L37:
 324:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 1213              		.loc 1 324 0 discriminator 3
 1214 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1215 0426 7A68     		ldr	r2, [r7, #4]
 1216 0428 1344     		add	r3, r3, r2
 1217 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1218 042c 1846     		mov	r0, r3
 1219 042e FFF7FEFF 		bl	outputHdlcWrite
 323:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 1220              		.loc 1 323 0 discriminator 3
 1221 0432 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1222 0434 0133     		adds	r3, r3, #1
 1223 0436 FB73     		strb	r3, [r7, #15]
 1224              	.L36:
 323:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 1225              		.loc 1 323 0 is_stmt 0 discriminator 1
 1226 0438 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1227 043a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1228 043c 9A42     		cmp	r2, r3
 1229 043e F1D3     		bcc	.L37
 325:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 326:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1230              		.loc 1 326 0 is_stmt 1
 1231 0440 FFF7FEFF 		bl	outputHdlcClose
 327:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 328:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 329:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1232              		.loc 1 329 0
 1233 0444 FFF7FEFF 		bl	openserial_flush
 330:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 331:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    return E_SUCCESS;
 1234              		.loc 1 331 0
 1235 0448 0023     		movs	r3, #0
 332:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1236              		.loc 1 332 0
 1237 044a 1846     		mov	r0, r3
 1238 044c 1037     		adds	r7, r7, #16
 1239              		.cfi_def_cfa_offset 8
 1240 044e BD46     		mov	sp, r7
 1241              		.cfi_def_cfa_register 13
 1242              		@ sp needed
 1243 0450 80BD     		pop	{r7, pc}
 1244              		.cfi_endproc
 1245              	.LFE13:
 1247              		.align	1
 1248              		.global	task_openserial_debugPrint
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu softvfp
 1254              	task_openserial_debugPrint:
 1255              	.LFB14:
 333:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 334:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== retrieving inputBuffer
 335:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 336:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_openserial_debugPrint(void) {
 1256              		.loc 1 336 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260 0452 80B5     		push	{r7, lr}
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0454 82B0     		sub	sp, sp, #8
 1265              		.cfi_def_cfa_offset 16
 1266 0456 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 337:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t debugPrintCounter;
 338:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 339:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 340:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 341:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1268              		.loc 1 341 0
 1269 0458 FFF7FEFF 		bl	IntMasterDisable
 342:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     debugPrintCounter = openserial_vars.debugPrintCounter;
 1270              		.loc 1 342 0
 1271 045c 4A4B     		ldr	r3, .L71
 1272 045e 9B78     		ldrb	r3, [r3, #2]
 1273 0460 FB71     		strb	r3, [r7, #7]
 343:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1274              		.loc 1 343 0
 1275 0462 FFF7FEFF 		bl	IntMasterEnable
 344:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 345:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 346:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.outputBufIdxW!=openserial_vars.outputBufIdxR) {
 1276              		.loc 1 346 0
 1277 0466 484B     		ldr	r3, .L71
 1278 0468 B3F8DA24 		ldrh	r2, [r3, #1242]
 1279 046c 464B     		ldr	r3, .L71
 1280 046e B3F8DC34 		ldrh	r3, [r3, #1244]
 1281 0472 9A42     		cmp	r2, r3
 1282 0474 40F08480 		bne	.L58
 347:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 348:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 349:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 350:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     debugPrintCounter++;
 1283              		.loc 1 350 0
 1284 0478 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1285 047a 0133     		adds	r3, r3, #1
 1286 047c FB71     		strb	r3, [r7, #7]
 351:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (debugPrintCounter==STATUS_MAX) {
 1287              		.loc 1 351 0
 1288 047e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1289 0480 0C2B     		cmp	r3, #12
 1290 0482 01D1     		bne	.L42
 352:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****        debugPrintCounter = 0;
 1291              		.loc 1 352 0
 1292 0484 0023     		movs	r3, #0
 1293 0486 FB71     		strb	r3, [r7, #7]
 1294              	.L42:
 353:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 354:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 355:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     switch (debugPrintCounter) {
 1295              		.loc 1 355 0
 1296 0488 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1297 048a 0B2B     		cmp	r3, #11
 1298 048c 56D8     		bhi	.L43
 1299 048e 01A2     		adr	r2, .L45
 1300 0490 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1301              		.p2align 2
 1302              	.L45:
 1303 0494 C5040000 		.word	.L44+1
 1304 0498 CF040000 		.word	.L46+1
 1305 049c D9040000 		.word	.L47+1
 1306 04a0 E3040000 		.word	.L48+1
 1307 04a4 ED040000 		.word	.L49+1
 1308 04a8 F7040000 		.word	.L50+1
 1309 04ac 01050000 		.word	.L51+1
 1310 04b0 0B050000 		.word	.L52+1
 1311 04b4 15050000 		.word	.L53+1
 1312 04b8 1F050000 		.word	.L54+1
 1313 04bc 29050000 		.word	.L55+1
 1314 04c0 33050000 		.word	.L56+1
 1315              		.p2align 1
 1316              	.L44:
 356:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_ISSYNC:
 357:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_isSync()==TRUE) {
 1317              		.loc 1 357 0
 1318 04c4 FFF7FEFF 		bl	debugPrint_isSync
 1319 04c8 0346     		mov	r3, r0
 1320 04ca 002B     		cmp	r3, #0
 1321 04cc 39D1     		bne	.L59
 1322              	.L46:
 358:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 359:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 360:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_ID:
 361:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_id()==TRUE) {
 1323              		.loc 1 361 0
 1324 04ce FFF7FEFF 		bl	debugPrint_id
 1325 04d2 0346     		mov	r3, r0
 1326 04d4 002B     		cmp	r3, #0
 1327 04d6 36D1     		bne	.L60
 1328              	.L47:
 362:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                break;
 363:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 364:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_DAGRANK:
 365:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_myDAGrank()==TRUE) {
 1329              		.loc 1 365 0
 1330 04d8 FFF7FEFF 		bl	debugPrint_myDAGrank
 1331 04dc 0346     		mov	r3, r0
 1332 04de 002B     		cmp	r3, #0
 1333 04e0 33D1     		bne	.L61
 1334              	.L48:
 366:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 367:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 368:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_OUTBUFFERINDEXES:
 369:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_outBufferIndexes()==TRUE) {
 1335              		.loc 1 369 0
 1336 04e2 FFF7FEFF 		bl	debugPrint_outBufferIndexes
 1337 04e6 0346     		mov	r3, r0
 1338 04e8 002B     		cmp	r3, #0
 1339 04ea 30D1     		bne	.L62
 1340              	.L49:
 370:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 371:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 372:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_ASN:
 373:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_asn()==TRUE) {
 1341              		.loc 1 373 0
 1342 04ec FFF7FEFF 		bl	debugPrint_asn
 1343 04f0 0346     		mov	r3, r0
 1344 04f2 002B     		cmp	r3, #0
 1345 04f4 2DD1     		bne	.L63
 1346              	.L50:
 374:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 375:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 376:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_MACSTATS:
 377:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_macStats()==TRUE) {
 1347              		.loc 1 377 0
 1348 04f6 FFF7FEFF 		bl	debugPrint_macStats
 1349 04fa 0346     		mov	r3, r0
 1350 04fc 002B     		cmp	r3, #0
 1351 04fe 2AD1     		bne	.L64
 1352              	.L51:
 378:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 379:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 380:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_SCHEDULE:
 381:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if(debugPrint_schedule()==TRUE) {
 1353              		.loc 1 381 0
 1354 0500 FFF7FEFF 		bl	debugPrint_schedule
 1355 0504 0346     		mov	r3, r0
 1356 0506 002B     		cmp	r3, #0
 1357 0508 27D1     		bne	.L65
 1358              	.L52:
 382:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 383:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 384:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_BACKOFF:
 385:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if(debugPrint_backoff()==TRUE) {
 1359              		.loc 1 385 0
 1360 050a FFF7FEFF 		bl	debugPrint_backoff
 1361 050e 0346     		mov	r3, r0
 1362 0510 002B     		cmp	r3, #0
 1363 0512 24D1     		bne	.L66
 1364              	.L53:
 386:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 387:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 388:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_QUEUE:
 389:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if(debugPrint_queue()==TRUE) {
 1365              		.loc 1 389 0
 1366 0514 FFF7FEFF 		bl	debugPrint_queue
 1367 0518 0346     		mov	r3, r0
 1368 051a 002B     		cmp	r3, #0
 1369 051c 21D1     		bne	.L67
 1370              	.L54:
 390:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 391:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 392:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_NEIGHBORS:
 393:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_neighbors()==TRUE) {
 1371              		.loc 1 393 0
 1372 051e FFF7FEFF 		bl	debugPrint_neighbors
 1373 0522 0346     		mov	r3, r0
 1374 0524 002B     		cmp	r3, #0
 1375 0526 1ED1     		bne	.L68
 1376              	.L55:
 394:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 395:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 396:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_KAPERIOD:
 397:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_kaPeriod()==TRUE) {
 1377              		.loc 1 397 0
 1378 0528 FFF7FEFF 		bl	debugPrint_kaPeriod
 1379 052c 0346     		mov	r3, r0
 1380 052e 002B     		cmp	r3, #0
 1381 0530 1BD1     		bne	.L69
 1382              	.L56:
 398:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 399:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 400:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_JOINED:
 401:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_joined()==TRUE) {
 1383              		.loc 1 401 0
 1384 0532 FFF7FEFF 		bl	debugPrint_joined
 1385 0536 0346     		mov	r3, r0
 1386 0538 002B     		cmp	r3, #0
 1387 053a 18D1     		bne	.L70
 1388              	.L43:
 402:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 403:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 404:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         default:
 405:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             debugPrintCounter=0;
 1389              		.loc 1 405 0
 1390 053c 0023     		movs	r3, #0
 1391 053e FB71     		strb	r3, [r7, #7]
 1392 0540 16E0     		b	.L57
 1393              	.L59:
 358:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1394              		.loc 1 358 0
 1395 0542 00BF     		nop
 1396 0544 14E0     		b	.L57
 1397              	.L60:
 362:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1398              		.loc 1 362 0
 1399 0546 00BF     		nop
 1400 0548 12E0     		b	.L57
 1401              	.L61:
 366:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1402              		.loc 1 366 0
 1403 054a 00BF     		nop
 1404 054c 10E0     		b	.L57
 1405              	.L62:
 370:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1406              		.loc 1 370 0
 1407 054e 00BF     		nop
 1408 0550 0EE0     		b	.L57
 1409              	.L63:
 374:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1410              		.loc 1 374 0
 1411 0552 00BF     		nop
 1412 0554 0CE0     		b	.L57
 1413              	.L64:
 378:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1414              		.loc 1 378 0
 1415 0556 00BF     		nop
 1416 0558 0AE0     		b	.L57
 1417              	.L65:
 382:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1418              		.loc 1 382 0
 1419 055a 00BF     		nop
 1420 055c 08E0     		b	.L57
 1421              	.L66:
 386:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1422              		.loc 1 386 0
 1423 055e 00BF     		nop
 1424 0560 06E0     		b	.L57
 1425              	.L67:
 390:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1426              		.loc 1 390 0
 1427 0562 00BF     		nop
 1428 0564 04E0     		b	.L57
 1429              	.L68:
 394:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1430              		.loc 1 394 0
 1431 0566 00BF     		nop
 1432 0568 02E0     		b	.L57
 1433              	.L69:
 398:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1434              		.loc 1 398 0
 1435 056a 00BF     		nop
 1436 056c 00E0     		b	.L57
 1437              	.L70:
 402:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1438              		.loc 1 402 0
 1439 056e 00BF     		nop
 1440              	.L57:
 406:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 407:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 408:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 409:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1441              		.loc 1 409 0
 1442 0570 FFF7FEFF 		bl	IntMasterDisable
 410:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.debugPrintCounter = debugPrintCounter;
 1443              		.loc 1 410 0
 1444 0574 044A     		ldr	r2, .L71
 1445 0576 FB79     		ldrb	r3, [r7, #7]
 1446 0578 9370     		strb	r3, [r2, #2]
 411:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1447              		.loc 1 411 0
 1448 057a FFF7FEFF 		bl	IntMasterEnable
 1449 057e 00E0     		b	.L39
 1450              	.L58:
 347:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 1451              		.loc 1 347 0
 1452 0580 00BF     		nop
 1453              	.L39:
 412:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 413:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1454              		.loc 1 413 0
 1455 0582 0837     		adds	r7, r7, #8
 1456              		.cfi_def_cfa_offset 8
 1457 0584 BD46     		mov	sp, r7
 1458              		.cfi_def_cfa_register 13
 1459              		@ sp needed
 1460 0586 80BD     		pop	{r7, pc}
 1461              	.L72:
 1462              		.align	2
 1463              	.L71:
 1464 0588 00000000 		.word	openserial_vars
 1465              		.cfi_endproc
 1466              	.LFE14:
 1468              		.align	1
 1469              		.global	openserial_getInputBufferFillLevel
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu softvfp
 1475              	openserial_getInputBufferFillLevel:
 1476              	.LFB15:
 414:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 415:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== receiving
 416:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 417:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** uint8_t openserial_getInputBufferFillLevel() {
 1477              		.loc 1 417 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 8
 1480              		@ frame_needed = 1, uses_anonymous_args = 0
 1481 058c 80B5     		push	{r7, lr}
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 7, -8
 1484              		.cfi_offset 14, -4
 1485 058e 82B0     		sub	sp, sp, #8
 1486              		.cfi_def_cfa_offset 16
 1487 0590 00AF     		add	r7, sp, #0
 1488              		.cfi_def_cfa_register 7
 418:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t inputBufFillLevel;
 419:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 420:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 421:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 422:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1489              		.loc 1 422 0
 1490 0592 FFF7FEFF 		bl	IntMasterDisable
 423:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     inputBufFillLevel = openserial_vars.inputBufFillLevel;
 1491              		.loc 1 423 0
 1492 0596 064B     		ldr	r3, .L75
 1493 0598 93F8D230 		ldrb	r3, [r3, #210]
 1494 059c FB71     		strb	r3, [r7, #7]
 424:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1495              		.loc 1 424 0
 1496 059e FFF7FEFF 		bl	IntMasterEnable
 425:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 426:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 427:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return inputBufFillLevel-1; // removing the command byte
 1497              		.loc 1 427 0
 1498 05a2 FB79     		ldrb	r3, [r7, #7]
 1499 05a4 013B     		subs	r3, r3, #1
 1500 05a6 DBB2     		uxtb	r3, r3
 428:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1501              		.loc 1 428 0
 1502 05a8 1846     		mov	r0, r3
 1503 05aa 0837     		adds	r7, r7, #8
 1504              		.cfi_def_cfa_offset 8
 1505 05ac BD46     		mov	sp, r7
 1506              		.cfi_def_cfa_register 13
 1507              		@ sp needed
 1508 05ae 80BD     		pop	{r7, pc}
 1509              	.L76:
 1510              		.align	2
 1511              	.L75:
 1512 05b0 00000000 		.word	openserial_vars
 1513              		.cfi_endproc
 1514              	.LFE15:
 1516              		.align	1
 1517              		.global	openserial_getInputBuffer
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1521              		.fpu softvfp
 1523              	openserial_getInputBuffer:
 1524              	.LFB16:
 429:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 430:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** uint8_t openserial_getInputBuffer(uint8_t* bufferToWrite, uint8_t maxNumBytes) {
 1525              		.loc 1 430 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 16
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529 05b4 80B5     		push	{r7, lr}
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 7, -8
 1532              		.cfi_offset 14, -4
 1533 05b6 84B0     		sub	sp, sp, #16
 1534              		.cfi_def_cfa_offset 24
 1535 05b8 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
 1537 05ba 7860     		str	r0, [r7, #4]
 1538 05bc 0B46     		mov	r3, r1
 1539 05be FB70     		strb	r3, [r7, #3]
 431:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t numBytesWritten;
 432:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t inputBufFillLevel;
 433:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 434:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 435:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 436:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1540              		.loc 1 436 0
 1541 05c0 FFF7FEFF 		bl	IntMasterDisable
 437:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     inputBufFillLevel = openserial_vars.inputBufFillLevel;
 1542              		.loc 1 437 0
 1543 05c4 144B     		ldr	r3, .L81
 1544 05c6 93F8D230 		ldrb	r3, [r3, #210]
 1545 05ca BB73     		strb	r3, [r7, #14]
 438:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1546              		.loc 1 438 0
 1547 05cc FFF7FEFF 		bl	IntMasterEnable
 439:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 440:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 441:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (maxNumBytes<inputBufFillLevel-1) {
 1548              		.loc 1 441 0
 1549 05d0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1550 05d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1551 05d4 013B     		subs	r3, r3, #1
 1552 05d6 9A42     		cmp	r2, r3
 1553 05d8 0CDA     		bge	.L78
 442:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_printError(
 1554              		.loc 1 442 0
 1555 05da FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1556 05dc 9AB2     		uxth	r2, r3
 1557 05de BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1558 05e0 9BB2     		uxth	r3, r3
 1559 05e2 013B     		subs	r3, r3, #1
 1560 05e4 9BB2     		uxth	r3, r3
 1561 05e6 0321     		movs	r1, #3
 1562 05e8 0420     		movs	r0, #4
 1563 05ea FFF7FEFF 		bl	openserial_printError
 443:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             COMPONENT_OPENSERIAL,
 444:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ERR_GETDATA_ASKS_TOO_FEW_BYTES,
 445:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             (errorparameter_t)maxNumBytes,
 446:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             (errorparameter_t)inputBufFillLevel-1
 447:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         );
 448:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         numBytesWritten = 0;
 1564              		.loc 1 448 0
 1565 05ee 0023     		movs	r3, #0
 1566 05f0 FB73     		strb	r3, [r7, #15]
 1567 05f2 0CE0     		b	.L79
 1568              	.L78:
 449:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 450:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         numBytesWritten = inputBufFillLevel-1;
 1569              		.loc 1 450 0
 1570 05f4 BB7B     		ldrb	r3, [r7, #14]
 1571 05f6 013B     		subs	r3, r3, #1
 1572 05f8 FB73     		strb	r3, [r7, #15]
 451:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         //<<<<<<<<<<<<<<<<<<<<<<<
 452:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         DISABLE_INTERRUPTS();
 1573              		.loc 1 452 0
 1574 05fa FFF7FEFF 		bl	IntMasterDisable
 453:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         memcpy(bufferToWrite,&(openserial_vars.inputBuf[1]),numBytesWritten);
 1575              		.loc 1 453 0
 1576 05fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1577 0600 1A46     		mov	r2, r3
 1578 0602 0649     		ldr	r1, .L81+4
 1579 0604 7868     		ldr	r0, [r7, #4]
 1580 0606 FFF7FEFF 		bl	memcpy
 454:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ENABLE_INTERRUPTS();
 1581              		.loc 1 454 0
 1582 060a FFF7FEFF 		bl	IntMasterEnable
 1583              	.L79:
 455:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         //>>>>>>>>>>>>>>>>>>>>>>>
 456:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 457:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 458:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return numBytesWritten;
 1584              		.loc 1 458 0
 1585 060e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 459:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1586              		.loc 1 459 0
 1587 0610 1846     		mov	r0, r3
 1588 0612 1037     		adds	r7, r7, #16
 1589              		.cfi_def_cfa_offset 8
 1590 0614 BD46     		mov	sp, r7
 1591              		.cfi_def_cfa_register 13
 1592              		@ sp needed
 1593 0616 80BD     		pop	{r7, pc}
 1594              	.L82:
 1595              		.align	2
 1596              	.L81:
 1597 0618 00000000 		.word	openserial_vars
 1598 061c 0B000000 		.word	openserial_vars+11
 1599              		.cfi_endproc
 1600              	.LFE16:
 1602              		.align	1
 1603              		.global	openserial_flush
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1607              		.fpu softvfp
 1609              	openserial_flush:
 1610              	.LFB17:
 460:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 461:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== scheduling
 462:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 463:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_flush(void) {
 1611              		.loc 1 463 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 1, uses_anonymous_args = 0
 1615 0620 80B5     		push	{r7, lr}
 1616              		.cfi_def_cfa_offset 8
 1617              		.cfi_offset 7, -8
 1618              		.cfi_offset 14, -4
 1619 0622 00AF     		add	r7, sp, #0
 1620              		.cfi_def_cfa_register 7
 464:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 465:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 466:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 467:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1621              		.loc 1 467 0
 1622 0624 FFF7FEFF 		bl	IntMasterDisable
 468:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.fBusyFlushing==FALSE) {
 1623              		.loc 1 468 0
 1624 0628 1F4B     		ldr	r3, .L88
 1625 062a 93F8DE34 		ldrb	r3, [r3, #1246]	@ zero_extendqisi2
 1626 062e 83F00103 		eor	r3, r3, #1
 1627 0632 DBB2     		uxtb	r3, r3
 1628 0634 002B     		cmp	r3, #0
 1629 0636 33D0     		beq	.L84
 469:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.ctsStateChanged==TRUE) {
 1630              		.loc 1 469 0
 1631 0638 1B4B     		ldr	r3, .L88
 1632 063a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1633 063c 012B     		cmp	r3, #1
 1634 063e 0ED1     		bne	.L85
 470:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // send CTS
 471:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 472:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 473:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (openserial_vars.fInhibited==TRUE) {
 1635              		.loc 1 473 0
 1636 0640 194B     		ldr	r3, .L88
 1637 0642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0644 012B     		cmp	r3, #1
 1639 0646 03D1     		bne	.L86
 474:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 uart_setCTS(FALSE);
 1640              		.loc 1 474 0
 1641 0648 0020     		movs	r0, #0
 1642 064a FFF7FEFF 		bl	uart_setCTS
 1643 064e 02E0     		b	.L87
 1644              	.L86:
 475:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 476:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 uart_setCTS(TRUE);
 1645              		.loc 1 476 0
 1646 0650 0120     		movs	r0, #1
 1647 0652 FFF7FEFF 		bl	uart_setCTS
 1648              	.L87:
 477:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 478:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 479:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.ctsStateChanged = FALSE;
 1649              		.loc 1 479 0
 1650 0656 144B     		ldr	r3, .L88
 1651 0658 0022     		movs	r2, #0
 1652 065a 5A70     		strb	r2, [r3, #1]
 1653 065c 20E0     		b	.L84
 1654              	.L85:
 480:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
 481:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (openserial_vars.fInhibited==TRUE) {
 1655              		.loc 1 481 0
 1656 065e 124B     		ldr	r3, .L88
 1657 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1658 0662 012B     		cmp	r3, #1
 1659 0664 1CD0     		beq	.L84
 482:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 // currently inhibited
 483:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 484:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 // not inhibited
 485:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 if (openserial_vars.outputBufIdxW!=openserial_vars.outputBufIdxR) {
 1660              		.loc 1 485 0
 1661 0666 104B     		ldr	r3, .L88
 1662 0668 B3F8DA24 		ldrh	r2, [r3, #1242]
 1663 066c 0E4B     		ldr	r3, .L88
 1664 066e B3F8DC34 		ldrh	r3, [r3, #1244]
 1665 0672 9A42     		cmp	r2, r3
 1666 0674 14D0     		beq	.L84
 486:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     // I have some bytes to transmit
 487:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 488:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 489:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     uart_writeCircularBuffer_FASTSIM(
 490:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                         openserial_vars.outputBuf,
 491:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                         &openserial_vars.outputBufIdxR,
 492:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                         &openserial_vars.outputBufIdxW
 493:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     );
 494:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 495:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     uart_writeByte(openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.
 1667              		.loc 1 495 0
 1668 0676 0C4B     		ldr	r3, .L88
 1669 0678 B3F8DC34 		ldrh	r3, [r3, #1244]
 1670 067c 5A1C     		adds	r2, r3, #1
 1671 067e 91B2     		uxth	r1, r2
 1672 0680 094A     		ldr	r2, .L88
 1673 0682 A2F8DC14 		strh	r1, [r2, #1244]	@ movhi
 1674 0686 C3F30903 		ubfx	r3, r3, #0, #10
 1675 068a 074A     		ldr	r2, .L88
 1676 068c 1344     		add	r3, r3, r2
 1677 068e 93F8D930 		ldrb	r3, [r3, #217]	@ zero_extendqisi2
 1678 0692 1846     		mov	r0, r3
 1679 0694 FFF7FEFF 		bl	uart_writeByte
 496:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     openserial_vars.fBusyFlushing = TRUE;
 1680              		.loc 1 496 0
 1681 0698 034B     		ldr	r3, .L88
 1682 069a 0122     		movs	r2, #1
 1683 069c 83F8DE24 		strb	r2, [r3, #1246]
 1684              	.L84:
 497:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 498:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 499:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 500:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 501:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 502:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1685              		.loc 1 502 0
 1686 06a0 FFF7FEFF 		bl	IntMasterEnable
 503:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 504:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1687              		.loc 1 504 0
 1688 06a4 00BF     		nop
 1689 06a6 80BD     		pop	{r7, pc}
 1690              	.L89:
 1691              		.align	2
 1692              	.L88:
 1693 06a8 00000000 		.word	openserial_vars
 1694              		.cfi_endproc
 1695              	.LFE17:
 1697              		.align	1
 1698              		.global	openserial_inhibitStart
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu softvfp
 1704              	openserial_inhibitStart:
 1705              	.LFB18:
 505:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 506:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_inhibitStart(void) {
 1706              		.loc 1 506 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 1, uses_anonymous_args = 0
 1710 06ac 80B5     		push	{r7, lr}
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 7, -8
 1713              		.cfi_offset 14, -4
 1714 06ae 00AF     		add	r7, sp, #0
 1715              		.cfi_def_cfa_register 7
 507:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // this function needs to run in non-interrupt mode
 508:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // since the inhibitStart is always called in an interrupt mode,
 509:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // DISABLE_INTERRUPT is not necessary here.
 510:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 511:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fInhibited      = TRUE;
 1716              		.loc 1 511 0
 1717 06b0 044B     		ldr	r3, .L91
 1718 06b2 0122     		movs	r2, #1
 1719 06b4 1A70     		strb	r2, [r3]
 512:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 513:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 514:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.ctsStateChanged = TRUE;
 1720              		.loc 1 514 0
 1721 06b6 034B     		ldr	r3, .L91
 1722 06b8 0122     		movs	r2, #1
 1723 06ba 5A70     		strb	r2, [r3, #1]
 515:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 516:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 517:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // it's openserial_flush() which will set CTS
 518:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1724              		.loc 1 518 0
 1725 06bc FFF7FEFF 		bl	openserial_flush
 519:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1726              		.loc 1 519 0
 1727 06c0 00BF     		nop
 1728 06c2 80BD     		pop	{r7, pc}
 1729              	.L92:
 1730              		.align	2
 1731              	.L91:
 1732 06c4 00000000 		.word	openserial_vars
 1733              		.cfi_endproc
 1734              	.LFE18:
 1736              		.align	1
 1737              		.global	openserial_inhibitStop
 1738              		.syntax unified
 1739              		.thumb
 1740              		.thumb_func
 1741              		.fpu softvfp
 1743              	openserial_inhibitStop:
 1744              	.LFB19:
 520:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 521:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_inhibitStop(void) {
 1745              		.loc 1 521 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 0
 1748              		@ frame_needed = 1, uses_anonymous_args = 0
 1749 06c8 80B5     		push	{r7, lr}
 1750              		.cfi_def_cfa_offset 8
 1751              		.cfi_offset 7, -8
 1752              		.cfi_offset 14, -4
 1753 06ca 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 522:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 523:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 524:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 525:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1755              		.loc 1 525 0
 1756 06cc FFF7FEFF 		bl	IntMasterDisable
 526:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fInhibited      = FALSE;
 1757              		.loc 1 526 0
 1758 06d0 054B     		ldr	r3, .L94
 1759 06d2 0022     		movs	r2, #0
 1760 06d4 1A70     		strb	r2, [r3]
 527:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 528:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 529:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.ctsStateChanged = TRUE;
 1761              		.loc 1 529 0
 1762 06d6 044B     		ldr	r3, .L94
 1763 06d8 0122     		movs	r2, #1
 1764 06da 5A70     		strb	r2, [r3, #1]
 530:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 531:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1765              		.loc 1 531 0
 1766 06dc FFF7FEFF 		bl	IntMasterEnable
 532:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 533:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 534:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // it's openserial_flush() which will set CTS
 535:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1767              		.loc 1 535 0
 1768 06e0 FFF7FEFF 		bl	openserial_flush
 536:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1769              		.loc 1 536 0
 1770 06e4 00BF     		nop
 1771 06e6 80BD     		pop	{r7, pc}
 1772              	.L95:
 1773              		.align	2
 1774              	.L94:
 1775 06e8 00000000 		.word	openserial_vars
 1776              		.cfi_endproc
 1777              	.LFE19:
 1779              		.align	1
 1780              		.global	debugPrint_outBufferIndexes
 1781              		.syntax unified
 1782              		.thumb
 1783              		.thumb_func
 1784              		.fpu softvfp
 1786              	debugPrint_outBufferIndexes:
 1787              	.LFB20:
 537:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 538:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== debugprint
 539:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 540:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 541:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Trigger this module to print status information, over serial.
 542:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 543:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** debugPrint_* functions are used by the openserial module to continuously print
 544:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** status information about several modules in the OpenWSN stack.
 545:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 546:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \returns TRUE if this function printed something, FALSE otherwise.
 547:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 548:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** bool debugPrint_outBufferIndexes(void) {
 1788              		.loc 1 548 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 8
 1791              		@ frame_needed = 1, uses_anonymous_args = 0
 1792 06ec 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 06ee 82B0     		sub	sp, sp, #8
 1797              		.cfi_def_cfa_offset 16
 1798 06f0 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 549:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint16_t temp_buffer[2];
 550:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 551:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 552:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 553:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1800              		.loc 1 553 0
 1801 06f2 FFF7FEFF 		bl	IntMasterDisable
 554:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     temp_buffer[0] = openserial_vars.outputBufIdxW;
 1802              		.loc 1 554 0
 1803 06f6 0A4B     		ldr	r3, .L98
 1804 06f8 B3F8DA34 		ldrh	r3, [r3, #1242]
 1805 06fc BB80     		strh	r3, [r7, #4]	@ movhi
 555:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     temp_buffer[1] = openserial_vars.outputBufIdxR;
 1806              		.loc 1 555 0
 1807 06fe 084B     		ldr	r3, .L98
 1808 0700 B3F8DC34 		ldrh	r3, [r3, #1244]
 1809 0704 FB80     		strh	r3, [r7, #6]	@ movhi
 556:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1810              		.loc 1 556 0
 1811 0706 FFF7FEFF 		bl	IntMasterEnable
 557:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 558:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 559:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printStatus(
 1812              		.loc 1 559 0
 1813 070a 3B1D     		adds	r3, r7, #4
 1814 070c 0422     		movs	r2, #4
 1815 070e 1946     		mov	r1, r3
 1816 0710 0320     		movs	r0, #3
 1817 0712 FFF7FEFF 		bl	openserial_printStatus
 560:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         STATUS_OUTBUFFERINDEXES,
 561:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (uint8_t*)temp_buffer,
 562:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         sizeof(temp_buffer)
 563:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 564:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 565:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return TRUE;
 1818              		.loc 1 565 0
 1819 0716 0123     		movs	r3, #1
 566:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1820              		.loc 1 566 0
 1821 0718 1846     		mov	r0, r3
 1822 071a 0837     		adds	r7, r7, #8
 1823              		.cfi_def_cfa_offset 8
 1824 071c BD46     		mov	sp, r7
 1825              		.cfi_def_cfa_register 13
 1826              		@ sp needed
 1827 071e 80BD     		pop	{r7, pc}
 1828              	.L99:
 1829              		.align	2
 1830              	.L98:
 1831 0720 00000000 		.word	openserial_vars
 1832              		.cfi_endproc
 1833              	.LFE20:
 1835              		.align	1
 1836              		.global	openserial_printInfoErrorCritical
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1840              		.fpu softvfp
 1842              	openserial_printInfoErrorCritical:
 1843              	.LFB21:
 567:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 568:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== private =========================================
 569:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 570:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== printing
 571:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 572:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printInfoErrorCritical(
 573:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     char             severity,
 574:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          calling_component,
 575:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          error_code,
 576:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg1,
 577:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg2
 578:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 1844              		.loc 1 578 0
 1845              		.cfi_startproc
 1846              		@ args = 4, pretend = 0, frame = 8
 1847              		@ frame_needed = 1, uses_anonymous_args = 0
 1848 0724 90B5     		push	{r4, r7, lr}
 1849              		.cfi_def_cfa_offset 12
 1850              		.cfi_offset 4, -12
 1851              		.cfi_offset 7, -8
 1852              		.cfi_offset 14, -4
 1853 0726 83B0     		sub	sp, sp, #12
 1854              		.cfi_def_cfa_offset 24
 1855 0728 00AF     		add	r7, sp, #0
 1856              		.cfi_def_cfa_register 7
 1857 072a 0446     		mov	r4, r0
 1858 072c 0846     		mov	r0, r1
 1859 072e 1146     		mov	r1, r2
 1860 0730 1A46     		mov	r2, r3
 1861 0732 2346     		mov	r3, r4
 1862 0734 FB71     		strb	r3, [r7, #7]
 1863 0736 0346     		mov	r3, r0
 1864 0738 BB71     		strb	r3, [r7, #6]
 1865 073a 0B46     		mov	r3, r1
 1866 073c 7B71     		strb	r3, [r7, #5]
 1867 073e 1346     		mov	r3, r2	@ movhi
 1868 0740 7B80     		strh	r3, [r7, #2]	@ movhi
 579:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 580:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1869              		.loc 1 580 0
 1870 0742 FFF7FEFF 		bl	outputHdlcOpen
 581:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(severity);
 1871              		.loc 1 581 0
 1872 0746 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1873 0748 1846     		mov	r0, r3
 1874 074a FFF7FEFF 		bl	outputHdlcWrite
 582:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 1875              		.loc 1 582 0
 1876 074e 0120     		movs	r0, #1
 1877 0750 FFF7FEFF 		bl	idmanager_getMyID
 1878 0754 0346     		mov	r3, r0
 1879 0756 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1880 0758 1846     		mov	r0, r3
 1881 075a FFF7FEFF 		bl	outputHdlcWrite
 583:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 1882              		.loc 1 583 0
 1883 075e 0120     		movs	r0, #1
 1884 0760 FFF7FEFF 		bl	idmanager_getMyID
 1885 0764 0346     		mov	r3, r0
 1886 0766 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1887 0768 1846     		mov	r0, r3
 1888 076a FFF7FEFF 		bl	outputHdlcWrite
 584:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(calling_component);
 1889              		.loc 1 584 0
 1890 076e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1891 0770 1846     		mov	r0, r3
 1892 0772 FFF7FEFF 		bl	outputHdlcWrite
 585:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(error_code);
 1893              		.loc 1 585 0
 1894 0776 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1895 0778 1846     		mov	r0, r3
 1896 077a FFF7FEFF 		bl	outputHdlcWrite
 586:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t)((arg1 & 0xff00)>>8));
 1897              		.loc 1 586 0
 1898 077e 7B88     		ldrh	r3, [r7, #2]
 1899 0780 1B0A     		lsrs	r3, r3, #8
 1900 0782 9BB2     		uxth	r3, r3
 1901 0784 DBB2     		uxtb	r3, r3
 1902 0786 1846     		mov	r0, r3
 1903 0788 FFF7FEFF 		bl	outputHdlcWrite
 587:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t) (arg1 & 0x00ff));
 1904              		.loc 1 587 0
 1905 078c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1906 078e DBB2     		uxtb	r3, r3
 1907 0790 1846     		mov	r0, r3
 1908 0792 FFF7FEFF 		bl	outputHdlcWrite
 588:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t)((arg2 & 0xff00)>>8));
 1909              		.loc 1 588 0
 1910 0796 3B8B     		ldrh	r3, [r7, #24]
 1911 0798 1B0A     		lsrs	r3, r3, #8
 1912 079a 9BB2     		uxth	r3, r3
 1913 079c DBB2     		uxtb	r3, r3
 1914 079e 1846     		mov	r0, r3
 1915 07a0 FFF7FEFF 		bl	outputHdlcWrite
 589:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t) (arg2 & 0x00ff));
 1916              		.loc 1 589 0
 1917 07a4 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1918 07a6 DBB2     		uxtb	r3, r3
 1919 07a8 1846     		mov	r0, r3
 1920 07aa FFF7FEFF 		bl	outputHdlcWrite
 590:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1921              		.loc 1 590 0
 1922 07ae FFF7FEFF 		bl	outputHdlcClose
 591:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 592:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 593:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1923              		.loc 1 593 0
 1924 07b2 FFF7FEFF 		bl	openserial_flush
 594:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 595:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 1925              		.loc 1 595 0
 1926 07b6 0023     		movs	r3, #0
 596:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1927              		.loc 1 596 0
 1928 07b8 1846     		mov	r0, r3
 1929 07ba 0C37     		adds	r7, r7, #12
 1930              		.cfi_def_cfa_offset 12
 1931 07bc BD46     		mov	sp, r7
 1932              		.cfi_def_cfa_register 13
 1933              		@ sp needed
 1934 07be 90BD     		pop	{r4, r7, pc}
 1935              		.cfi_endproc
 1936              	.LFE21:
 1938              		.align	1
 1939              		.global	openserial_handleRxFrame
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu softvfp
 1945              	openserial_handleRxFrame:
 1946              	.LFB22:
 597:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 598:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== command handlers
 599:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 600:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // executed in ISR
 601:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleRxFrame() {
 1947              		.loc 1 601 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 8
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 07c0 80B5     		push	{r7, lr}
 1952              		.cfi_def_cfa_offset 8
 1953              		.cfi_offset 7, -8
 1954              		.cfi_offset 14, -4
 1955 07c2 82B0     		sub	sp, sp, #8
 1956              		.cfi_def_cfa_offset 16
 1957 07c4 00AF     		add	r7, sp, #0
 1958              		.cfi_def_cfa_register 7
 602:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t cmdByte;
 603:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 604:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     cmdByte = openserial_vars.inputBuf[0];
 1959              		.loc 1 604 0
 1960 07c6 2A4B     		ldr	r3, .L112
 1961 07c8 9B7A     		ldrb	r3, [r3, #10]
 1962 07ca FB71     		strb	r3, [r7, #7]
 605:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // call hard-coded commands
 606:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // FIXME: needs to be replaced by registered commands only
 607:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     switch (cmdByte) {
 1963              		.loc 1 607 0
 1964 07cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1965 07ce 433B     		subs	r3, r3, #67
 1966 07d0 102B     		cmp	r3, #16
 1967 07d2 3BD8     		bhi	.L103
 1968 07d4 01A2     		adr	r2, .L105
 1969 07d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1970 07da 00BF     		.p2align 2
 1971              	.L105:
 1972 07dc 47080000 		.word	.L104+1
 1973 07e0 2D080000 		.word	.L106+1
 1974 07e4 4D080000 		.word	.L103+1
 1975 07e8 4D080000 		.word	.L103+1
 1976 07ec 4D080000 		.word	.L103+1
 1977 07f0 4D080000 		.word	.L103+1
 1978 07f4 4D080000 		.word	.L103+1
 1979 07f8 4D080000 		.word	.L103+1
 1980 07fc 4D080000 		.word	.L103+1
 1981 0800 4D080000 		.word	.L103+1
 1982 0804 4D080000 		.word	.L103+1
 1983 0808 4D080000 		.word	.L103+1
 1984 080c 4D080000 		.word	.L103+1
 1985 0810 4D080000 		.word	.L103+1
 1986 0814 27080000 		.word	.L107+1
 1987 0818 21080000 		.word	.L108+1
 1988 081c 33080000 		.word	.L109+1
 1989              		.p2align 1
 1990              	.L108:
 608:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_SETROOT:
 609:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             idmanager_triggerAboutRoot();
 1991              		.loc 1 609 0
 1992 0820 FFF7FEFF 		bl	idmanager_triggerAboutRoot
 610:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1993              		.loc 1 610 0
 1994 0824 12E0     		b	.L103
 1995              	.L107:
 611:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_RESET:
 612:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             board_reset();
 1996              		.loc 1 612 0
 1997 0826 FFF7FEFF 		bl	board_reset
 613:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1998              		.loc 1 613 0
 1999 082a 0FE0     		b	.L103
 2000              	.L106:
 614:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_DATA:
 615:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openbridge_triggerData();
 2001              		.loc 1 615 0
 2002 082c FFF7FEFF 		bl	openbridge_triggerData
 616:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2003              		.loc 1 616 0
 2004 0830 0CE0     		b	.L103
 2005              	.L109:
 617:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_TRIGGERSERIALECHO:
 618:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_handleEcho(
 619:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 &openserial_vars.inputBuf[1],
 620:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 openserial_vars.inputBufFillLevel-1
 2006              		.loc 1 620 0
 2007 0832 0F4B     		ldr	r3, .L112
 2008 0834 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 618:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 &openserial_vars.inputBuf[1],
 2009              		.loc 1 618 0
 2010 0838 013B     		subs	r3, r3, #1
 2011 083a DBB2     		uxtb	r3, r3
 2012 083c 1946     		mov	r1, r3
 2013 083e 0D48     		ldr	r0, .L112+4
 2014 0840 FFF7FEFF 		bl	openserial_handleEcho
 621:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             );
 622:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2015              		.loc 1 622 0
 2016 0844 02E0     		b	.L103
 2017              	.L104:
 623:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_COMMAND:
 624:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_handleCommands();
 2018              		.loc 1 624 0
 2019 0846 FFF7FEFF 		bl	openserial_handleCommands
 625:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2020              		.loc 1 625 0
 2021 084a 00BF     		nop
 2022              	.L103:
 626:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 627:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // call registered commands
 628:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.registeredCmd!=NULL && openserial_vars.registeredCmd->cmdId==cmdByte) {
 2023              		.loc 1 628 0
 2024 084c 084B     		ldr	r3, .L112
 2025 084e 5B68     		ldr	r3, [r3, #4]
 2026 0850 002B     		cmp	r3, #0
 2027 0852 09D0     		beq	.L111
 2028              		.loc 1 628 0 is_stmt 0 discriminator 1
 2029 0854 064B     		ldr	r3, .L112
 2030 0856 5B68     		ldr	r3, [r3, #4]
 2031 0858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2032 085a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2033 085c 9A42     		cmp	r2, r3
 2034 085e 03D1     		bne	.L111
 629:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.registeredCmd->cb();
 2035              		.loc 1 629 0 is_stmt 1
 2036 0860 034B     		ldr	r3, .L112
 2037 0862 5B68     		ldr	r3, [r3, #4]
 2038 0864 5B68     		ldr	r3, [r3, #4]
 2039 0866 9847     		blx	r3
 2040              	.LVL0:
 2041              	.L111:
 630:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 631:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2042              		.loc 1 631 0
 2043 0868 00BF     		nop
 2044 086a 0837     		adds	r7, r7, #8
 2045              		.cfi_def_cfa_offset 8
 2046 086c BD46     		mov	sp, r7
 2047              		.cfi_def_cfa_register 13
 2048              		@ sp needed
 2049 086e 80BD     		pop	{r7, pc}
 2050              	.L113:
 2051              		.align	2
 2052              	.L112:
 2053 0870 00000000 		.word	openserial_vars
 2054 0874 0B000000 		.word	openserial_vars+11
 2055              		.cfi_endproc
 2056              	.LFE22:
 2058              		.align	1
 2059              		.global	openserial_handleEcho
 2060              		.syntax unified
 2061              		.thumb
 2062              		.thumb_func
 2063              		.fpu softvfp
 2065              	openserial_handleEcho:
 2066              	.LFB23:
 632:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 633:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleEcho(uint8_t* buf, uint8_t bufLen){
 2067              		.loc 1 633 0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 8
 2070              		@ frame_needed = 1, uses_anonymous_args = 0
 2071 0878 80B5     		push	{r7, lr}
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 7, -8
 2074              		.cfi_offset 14, -4
 2075 087a 82B0     		sub	sp, sp, #8
 2076              		.cfi_def_cfa_offset 16
 2077 087c 00AF     		add	r7, sp, #0
 2078              		.cfi_def_cfa_register 7
 2079 087e 7860     		str	r0, [r7, #4]
 2080 0880 0B46     		mov	r3, r1
 2081 0882 FB70     		strb	r3, [r7, #3]
 634:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // echo back what you received
 635:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printData(
 2082              		.loc 1 635 0
 2083 0884 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2084 0886 1946     		mov	r1, r3
 2085 0888 7868     		ldr	r0, [r7, #4]
 2086 088a FFF7FEFF 		bl	openserial_printData
 636:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         buf,
 637:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         bufLen
 638:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 639:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2087              		.loc 1 639 0
 2088 088e 00BF     		nop
 2089 0890 0837     		adds	r7, r7, #8
 2090              		.cfi_def_cfa_offset 8
 2091 0892 BD46     		mov	sp, r7
 2092              		.cfi_def_cfa_register 13
 2093              		@ sp needed
 2094 0894 80BD     		pop	{r7, pc}
 2095              		.cfi_endproc
 2096              	.LFE23:
 2098              		.align	1
 2099              		.global	openserial_get6pInfo
 2100              		.syntax unified
 2101              		.thumb
 2102              		.thumb_func
 2103              		.fpu softvfp
 2105              	openserial_get6pInfo:
 2106              	.LFB24:
 640:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 641:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_get6pInfo(uint8_t commandId, uint8_t* code,uint8_t* cellOptions,uint8_t* numCells,c
 2107              		.loc 1 641 0
 2108              		.cfi_startproc
 2109              		@ args = 24, pretend = 0, frame = 24
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112 0896 80B4     		push	{r7}
 2113              		.cfi_def_cfa_offset 4
 2114              		.cfi_offset 7, -4
 2115 0898 87B0     		sub	sp, sp, #28
 2116              		.cfi_def_cfa_offset 32
 2117 089a 00AF     		add	r7, sp, #0
 2118              		.cfi_def_cfa_register 7
 2119 089c B960     		str	r1, [r7, #8]
 2120 089e 7A60     		str	r2, [r7, #4]
 2121 08a0 3B60     		str	r3, [r7]
 2122 08a2 0346     		mov	r3, r0
 2123 08a4 FB73     		strb	r3, [r7, #15]
 642:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t i;
 643:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t celllistLen;
 644:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 645:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // clear command
 646:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_CLEAR){
 2124              		.loc 1 646 0
 2125 08a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2126 08a8 0E2B     		cmp	r3, #14
 2127 08aa 03D1     		bne	.L116
 647:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_CLEAR;
 2128              		.loc 1 647 0
 2129 08ac BB68     		ldr	r3, [r7, #8]
 2130 08ae 0722     		movs	r2, #7
 2131 08b0 1A70     		strb	r2, [r3]
 648:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2132              		.loc 1 648 0
 2133 08b2 61E1     		b	.L115
 2134              	.L116:
 649:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 650:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 651:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     *cellOptions  = openserial_vars.inputBuf[ptr];
 2135              		.loc 1 651 0
 2136 08b4 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2137 08b8 B14A     		ldr	r2, .L130
 2138 08ba 1344     		add	r3, r3, r2
 2139 08bc 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2140 08be 7B68     		ldr	r3, [r7, #4]
 2141 08c0 1A70     		strb	r2, [r3]
 652:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr          += 1;
 2142              		.loc 1 652 0
 2143 08c2 97F83030 		ldrb	r3, [r7, #48]
 2144 08c6 0133     		adds	r3, r3, #1
 2145 08c8 87F83030 		strb	r3, [r7, #48]
 653:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandLen   -= 1;
 2146              		.loc 1 653 0
 2147 08cc 97F83430 		ldrb	r3, [r7, #52]
 2148 08d0 013B     		subs	r3, r3, #1
 2149 08d2 87F83430 		strb	r3, [r7, #52]
 654:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 655:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // list command
 656:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_LIST){
 2150              		.loc 1 656 0
 2151 08d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2152 08d8 0D2B     		cmp	r3, #13
 2153 08da 1BD1     		bne	.L118
 657:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_LIST;
 2154              		.loc 1 657 0
 2155 08dc BB68     		ldr	r3, [r7, #8]
 2156 08de 0522     		movs	r2, #5
 2157 08e0 1A70     		strb	r2, [r3]
 658:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *listOffset   = openserial_vars.inputBuf[ptr];
 2158              		.loc 1 658 0
 2159 08e2 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2160 08e6 A64A     		ldr	r2, .L130
 2161 08e8 1344     		add	r3, r3, r2
 2162 08ea 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2163 08ec BB6A     		ldr	r3, [r7, #40]
 2164 08ee 1A70     		strb	r2, [r3]
 659:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ptr += 1;
 2165              		.loc 1 659 0
 2166 08f0 97F83030 		ldrb	r3, [r7, #48]
 2167 08f4 0133     		adds	r3, r3, #1
 2168 08f6 87F83030 		strb	r3, [r7, #48]
 660:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *maxListLen   = openserial_vars.inputBuf[ptr];
 2169              		.loc 1 660 0
 2170 08fa 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2171 08fe A04A     		ldr	r2, .L130
 2172 0900 1344     		add	r3, r3, r2
 2173 0902 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2174 0904 FB6A     		ldr	r3, [r7, #44]
 2175 0906 1A70     		strb	r2, [r3]
 661:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ptr += 1;
 2176              		.loc 1 661 0
 2177 0908 97F83030 		ldrb	r3, [r7, #48]
 2178 090c 0133     		adds	r3, r3, #1
 2179 090e 87F83030 		strb	r3, [r7, #48]
 662:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2180              		.loc 1 662 0
 2181 0912 31E1     		b	.L115
 2182              	.L118:
 663:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 664:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 665:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // count command
 666:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_COUNT){
 2183              		.loc 1 666 0
 2184 0914 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2185 0916 0C2B     		cmp	r3, #12
 2186 0918 03D1     		bne	.L119
 667:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_COUNT;
 2187              		.loc 1 667 0
 2188 091a BB68     		ldr	r3, [r7, #8]
 2189 091c 0422     		movs	r2, #4
 2190 091e 1A70     		strb	r2, [r3]
 668:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2191              		.loc 1 668 0
 2192 0920 2AE1     		b	.L115
 2193              	.L119:
 669:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 670:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 671:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     *numCells   = openserial_vars.inputBuf[ptr];
 2194              		.loc 1 671 0
 2195 0922 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2196 0926 964A     		ldr	r2, .L130
 2197 0928 1344     		add	r3, r3, r2
 2198 092a 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2199 092c 3B68     		ldr	r3, [r7]
 2200 092e 1A70     		strb	r2, [r3]
 672:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr        += 1;
 2201              		.loc 1 672 0
 2202 0930 97F83030 		ldrb	r3, [r7, #48]
 2203 0934 0133     		adds	r3, r3, #1
 2204 0936 87F83030 		strb	r3, [r7, #48]
 673:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandLen -= 1;
 2205              		.loc 1 673 0
 2206 093a 97F83430 		ldrb	r3, [r7, #52]
 2207 093e 013B     		subs	r3, r3, #1
 2208 0940 87F83430 		strb	r3, [r7, #52]
 674:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 675:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // add command
 676:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_ADD){
 2209              		.loc 1 676 0
 2210 0944 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2211 0946 092B     		cmp	r3, #9
 2212 0948 42D1     		bne	.L120
 677:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_ADD;
 2213              		.loc 1 677 0
 2214 094a BB68     		ldr	r3, [r7, #8]
 2215 094c 0122     		movs	r2, #1
 2216 094e 1A70     		strb	r2, [r3]
 678:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list
 679:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2217              		.loc 1 679 0
 2218 0950 0023     		movs	r3, #0
 2219 0952 FB75     		strb	r3, [r7, #23]
 680:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         celllistLen = commandLen/2;
 2220              		.loc 1 680 0
 2221 0954 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2222 0958 5B08     		lsrs	r3, r3, #1
 2223 095a BB75     		strb	r3, [r7, #22]
 681:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(commandLen>celllistLen){
 2224              		.loc 1 681 0
 2225 095c 32E0     		b	.L121
 2226              	.L122:
 682:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2227              		.loc 1 682 0
 2228 095e 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2229 0962 874A     		ldr	r2, .L130
 2230 0964 1344     		add	r3, r3, r2
 2231 0966 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2232 0968 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2233 096a 1346     		mov	r3, r2
 2234 096c 9B00     		lsls	r3, r3, #2
 2235 096e 1344     		add	r3, r3, r2
 2236 0970 3A6A     		ldr	r2, [r7, #32]
 2237 0972 1344     		add	r3, r3, r2
 2238 0974 8AB2     		uxth	r2, r1
 2239 0976 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 683:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].channeloffset  = openserial_vars.inputBuf[ptr+celllistLen];
 2240              		.loc 1 683 0
 2241 097a 97F83020 		ldrb	r2, [r7, #48]	@ zero_extendqisi2
 2242 097e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2243 0980 1344     		add	r3, r3, r2
 2244 0982 7F4A     		ldr	r2, .L130
 2245 0984 1344     		add	r3, r3, r2
 2246 0986 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2247 0988 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2248 098a 1346     		mov	r3, r2
 2249 098c 9B00     		lsls	r3, r3, #2
 2250 098e 1344     		add	r3, r3, r2
 2251 0990 3A6A     		ldr	r2, [r7, #32]
 2252 0992 1344     		add	r3, r3, r2
 2253 0994 8AB2     		uxth	r2, r1
 2254 0996 A3F80320 		strh	r2, [r3, #3]	@ unaligned
 684:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].isUsed         = TRUE;
 2255              		.loc 1 684 0
 2256 099a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2257 099c 1346     		mov	r3, r2
 2258 099e 9B00     		lsls	r3, r3, #2
 2259 09a0 1344     		add	r3, r3, r2
 2260 09a2 3A6A     		ldr	r2, [r7, #32]
 2261 09a4 1344     		add	r3, r3, r2
 2262 09a6 0122     		movs	r2, #1
 2263 09a8 1A70     		strb	r2, [r3]
 685:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2264              		.loc 1 685 0
 2265 09aa 97F83030 		ldrb	r3, [r7, #48]
 2266 09ae 0133     		adds	r3, r3, #1
 2267 09b0 87F83030 		strb	r3, [r7, #48]
 686:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             commandLen  -= 1;
 2268              		.loc 1 686 0
 2269 09b4 97F83430 		ldrb	r3, [r7, #52]
 2270 09b8 013B     		subs	r3, r3, #1
 2271 09ba 87F83430 		strb	r3, [r7, #52]
 687:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2272              		.loc 1 687 0
 2273 09be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2274 09c0 0133     		adds	r3, r3, #1
 2275 09c2 FB75     		strb	r3, [r7, #23]
 2276              	.L121:
 681:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2277              		.loc 1 681 0
 2278 09c4 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 2279 09c8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2280 09ca 9A42     		cmp	r2, r3
 2281 09cc C7D8     		bhi	.L122
 688:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 689:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2282              		.loc 1 689 0
 2283 09ce D3E0     		b	.L115
 2284              	.L120:
 690:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 691:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 692:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // delete command
 693:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_DELETE){
 2285              		.loc 1 693 0
 2286 09d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2287 09d2 0A2B     		cmp	r3, #10
 2288 09d4 42D1     		bne	.L123
 694:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_DELETE;
 2289              		.loc 1 694 0
 2290 09d6 BB68     		ldr	r3, [r7, #8]
 2291 09d8 0222     		movs	r2, #2
 2292 09da 1A70     		strb	r2, [r3]
 695:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list
 696:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2293              		.loc 1 696 0
 2294 09dc 0023     		movs	r3, #0
 2295 09de FB75     		strb	r3, [r7, #23]
 697:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         celllistLen = commandLen/2;
 2296              		.loc 1 697 0
 2297 09e0 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2298 09e4 5B08     		lsrs	r3, r3, #1
 2299 09e6 BB75     		strb	r3, [r7, #22]
 698:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(commandLen>celllistLen){
 2300              		.loc 1 698 0
 2301 09e8 32E0     		b	.L124
 2302              	.L125:
 699:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2303              		.loc 1 699 0
 2304 09ea 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2305 09ee 644A     		ldr	r2, .L130
 2306 09f0 1344     		add	r3, r3, r2
 2307 09f2 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2308 09f4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2309 09f6 1346     		mov	r3, r2
 2310 09f8 9B00     		lsls	r3, r3, #2
 2311 09fa 1344     		add	r3, r3, r2
 2312 09fc 7A6A     		ldr	r2, [r7, #36]
 2313 09fe 1344     		add	r3, r3, r2
 2314 0a00 8AB2     		uxth	r2, r1
 2315 0a02 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 700:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].channeloffset  = openserial_vars.inputBuf[ptr+celllistLen];
 2316              		.loc 1 700 0
 2317 0a06 97F83020 		ldrb	r2, [r7, #48]	@ zero_extendqisi2
 2318 0a0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2319 0a0c 1344     		add	r3, r3, r2
 2320 0a0e 5C4A     		ldr	r2, .L130
 2321 0a10 1344     		add	r3, r3, r2
 2322 0a12 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2323 0a14 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2324 0a16 1346     		mov	r3, r2
 2325 0a18 9B00     		lsls	r3, r3, #2
 2326 0a1a 1344     		add	r3, r3, r2
 2327 0a1c 7A6A     		ldr	r2, [r7, #36]
 2328 0a1e 1344     		add	r3, r3, r2
 2329 0a20 8AB2     		uxth	r2, r1
 2330 0a22 A3F80320 		strh	r2, [r3, #3]	@ unaligned
 701:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].isUsed         = TRUE;
 2331              		.loc 1 701 0
 2332 0a26 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2333 0a28 1346     		mov	r3, r2
 2334 0a2a 9B00     		lsls	r3, r3, #2
 2335 0a2c 1344     		add	r3, r3, r2
 2336 0a2e 7A6A     		ldr	r2, [r7, #36]
 2337 0a30 1344     		add	r3, r3, r2
 2338 0a32 0122     		movs	r2, #1
 2339 0a34 1A70     		strb	r2, [r3]
 702:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2340              		.loc 1 702 0
 2341 0a36 97F83030 		ldrb	r3, [r7, #48]
 2342 0a3a 0133     		adds	r3, r3, #1
 2343 0a3c 87F83030 		strb	r3, [r7, #48]
 703:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             commandLen  -= 1;
 2344              		.loc 1 703 0
 2345 0a40 97F83430 		ldrb	r3, [r7, #52]
 2346 0a44 013B     		subs	r3, r3, #1
 2347 0a46 87F83430 		strb	r3, [r7, #52]
 704:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2348              		.loc 1 704 0
 2349 0a4a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2350 0a4c 0133     		adds	r3, r3, #1
 2351 0a4e FB75     		strb	r3, [r7, #23]
 2352              	.L124:
 698:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2353              		.loc 1 698 0
 2354 0a50 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 2355 0a54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2356 0a56 9A42     		cmp	r2, r3
 2357 0a58 C7D8     		bhi	.L125
 705:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 706:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2358              		.loc 1 706 0
 2359 0a5a 8DE0     		b	.L115
 2360              	.L123:
 707:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 708:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 709:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // relocate command
 710:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_RELOCATE){
 2361              		.loc 1 710 0
 2362 0a5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2363 0a5e 0B2B     		cmp	r3, #11
 2364 0a60 40F08A80 		bne	.L115
 711:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_RELOCATE;
 2365              		.loc 1 711 0
 2366 0a64 BB68     		ldr	r3, [r7, #8]
 2367 0a66 0322     		movs	r2, #3
 2368 0a68 1A70     		strb	r2, [r3]
 712:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list to be relocated
 713:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2369              		.loc 1 713 0
 2370 0a6a 0023     		movs	r3, #0
 2371 0a6c FB75     		strb	r3, [r7, #23]
 714:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(i<*numCells){
 2372              		.loc 1 714 0
 2373 0a6e 2EE0     		b	.L126
 2374              	.L127:
 715:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2375              		.loc 1 715 0
 2376 0a70 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2377 0a74 424A     		ldr	r2, .L130
 2378 0a76 1344     		add	r3, r3, r2
 2379 0a78 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2380 0a7a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2381 0a7c 1346     		mov	r3, r2
 2382 0a7e 9B00     		lsls	r3, r3, #2
 2383 0a80 1344     		add	r3, r3, r2
 2384 0a82 7A6A     		ldr	r2, [r7, #36]
 2385 0a84 1344     		add	r3, r3, r2
 2386 0a86 8AB2     		uxth	r2, r1
 2387 0a88 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 716:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].channeloffset  = openserial_vars.inputBuf[ptr+*numCells];
 2388              		.loc 1 716 0
 2389 0a8c 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2390 0a90 3A68     		ldr	r2, [r7]
 2391 0a92 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2392 0a94 1344     		add	r3, r3, r2
 2393 0a96 3A4A     		ldr	r2, .L130
 2394 0a98 1344     		add	r3, r3, r2
 2395 0a9a 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2396 0a9c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2397 0a9e 1346     		mov	r3, r2
 2398 0aa0 9B00     		lsls	r3, r3, #2
 2399 0aa2 1344     		add	r3, r3, r2
 2400 0aa4 7A6A     		ldr	r2, [r7, #36]
 2401 0aa6 1344     		add	r3, r3, r2
 2402 0aa8 8AB2     		uxth	r2, r1
 2403 0aaa A3F80320 		strh	r2, [r3, #3]	@ unaligned
 717:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].isUsed         = TRUE;
 2404              		.loc 1 717 0
 2405 0aae FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2406 0ab0 1346     		mov	r3, r2
 2407 0ab2 9B00     		lsls	r3, r3, #2
 2408 0ab4 1344     		add	r3, r3, r2
 2409 0ab6 7A6A     		ldr	r2, [r7, #36]
 2410 0ab8 1344     		add	r3, r3, r2
 2411 0aba 0122     		movs	r2, #1
 2412 0abc 1A70     		strb	r2, [r3]
 718:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2413              		.loc 1 718 0
 2414 0abe 97F83030 		ldrb	r3, [r7, #48]
 2415 0ac2 0133     		adds	r3, r3, #1
 2416 0ac4 87F83030 		strb	r3, [r7, #48]
 719:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2417              		.loc 1 719 0
 2418 0ac8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2419 0aca 0133     		adds	r3, r3, #1
 2420 0acc FB75     		strb	r3, [r7, #23]
 2421              	.L126:
 714:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2422              		.loc 1 714 0
 2423 0ace 3B68     		ldr	r3, [r7]
 2424 0ad0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2425 0ad2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2426 0ad4 9A42     		cmp	r2, r3
 2427 0ad6 CBD3     		bcc	.L127
 720:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 721:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 722:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         commandLen      -= (*numCells) * 2;
 2428              		.loc 1 722 0
 2429 0ad8 3B68     		ldr	r3, [r7]
 2430 0ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2431 0adc 5B00     		lsls	r3, r3, #1
 2432 0ade DBB2     		uxtb	r3, r3
 2433 0ae0 97F83420 		ldrb	r2, [r7, #52]
 2434 0ae4 D31A     		subs	r3, r2, r3
 2435 0ae6 87F83430 		strb	r3, [r7, #52]
 723:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ptr             += *numCells;
 2436              		.loc 1 723 0
 2437 0aea 3B68     		ldr	r3, [r7]
 2438 0aec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2439 0aee 97F83030 		ldrb	r3, [r7, #48]
 2440 0af2 1344     		add	r3, r3, r2
 2441 0af4 87F83030 		strb	r3, [r7, #48]
 724:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list to be relocated
 725:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2442              		.loc 1 725 0
 2443 0af8 0023     		movs	r3, #0
 2444 0afa FB75     		strb	r3, [r7, #23]
 726:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         celllistLen = commandLen/2;
 2445              		.loc 1 726 0
 2446 0afc 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2447 0b00 5B08     		lsrs	r3, r3, #1
 2448 0b02 BB75     		strb	r3, [r7, #22]
 727:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(commandLen>celllistLen){
 2449              		.loc 1 727 0
 2450 0b04 32E0     		b	.L128
 2451              	.L129:
 728:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2452              		.loc 1 728 0
 2453 0b06 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2454 0b0a 1D4A     		ldr	r2, .L130
 2455 0b0c 1344     		add	r3, r3, r2
 2456 0b0e 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2457 0b10 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2458 0b12 1346     		mov	r3, r2
 2459 0b14 9B00     		lsls	r3, r3, #2
 2460 0b16 1344     		add	r3, r3, r2
 2461 0b18 3A6A     		ldr	r2, [r7, #32]
 2462 0b1a 1344     		add	r3, r3, r2
 2463 0b1c 8AB2     		uxth	r2, r1
 2464 0b1e A3F80120 		strh	r2, [r3, #1]	@ unaligned
 729:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].channeloffset  = openserial_vars.inputBuf[ptr+celllistLen];
 2465              		.loc 1 729 0
 2466 0b22 97F83020 		ldrb	r2, [r7, #48]	@ zero_extendqisi2
 2467 0b26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2468 0b28 1344     		add	r3, r3, r2
 2469 0b2a 154A     		ldr	r2, .L130
 2470 0b2c 1344     		add	r3, r3, r2
 2471 0b2e 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2472 0b30 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2473 0b32 1346     		mov	r3, r2
 2474 0b34 9B00     		lsls	r3, r3, #2
 2475 0b36 1344     		add	r3, r3, r2
 2476 0b38 3A6A     		ldr	r2, [r7, #32]
 2477 0b3a 1344     		add	r3, r3, r2
 2478 0b3c 8AB2     		uxth	r2, r1
 2479 0b3e A3F80320 		strh	r2, [r3, #3]	@ unaligned
 730:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].isUsed         = TRUE;
 2480              		.loc 1 730 0
 2481 0b42 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2482 0b44 1346     		mov	r3, r2
 2483 0b46 9B00     		lsls	r3, r3, #2
 2484 0b48 1344     		add	r3, r3, r2
 2485 0b4a 3A6A     		ldr	r2, [r7, #32]
 2486 0b4c 1344     		add	r3, r3, r2
 2487 0b4e 0122     		movs	r2, #1
 2488 0b50 1A70     		strb	r2, [r3]
 731:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2489              		.loc 1 731 0
 2490 0b52 97F83030 		ldrb	r3, [r7, #48]
 2491 0b56 0133     		adds	r3, r3, #1
 2492 0b58 87F83030 		strb	r3, [r7, #48]
 732:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             commandLen  -= 1;
 2493              		.loc 1 732 0
 2494 0b5c 97F83430 		ldrb	r3, [r7, #52]
 2495 0b60 013B     		subs	r3, r3, #1
 2496 0b62 87F83430 		strb	r3, [r7, #52]
 733:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2497              		.loc 1 733 0
 2498 0b66 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2499 0b68 0133     		adds	r3, r3, #1
 2500 0b6a FB75     		strb	r3, [r7, #23]
 2501              	.L128:
 727:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2502              		.loc 1 727 0
 2503 0b6c 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 2504 0b70 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2505 0b72 9A42     		cmp	r2, r3
 2506 0b74 C7D8     		bhi	.L129
 734:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 735:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2507              		.loc 1 735 0 discriminator 3
 2508 0b76 00BF     		nop
 2509              	.L115:
 736:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 737:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2510              		.loc 1 737 0
 2511 0b78 1C37     		adds	r7, r7, #28
 2512              		.cfi_def_cfa_offset 4
 2513 0b7a BD46     		mov	sp, r7
 2514              		.cfi_def_cfa_register 13
 2515              		@ sp needed
 2516 0b7c 80BC     		pop	{r7}
 2517              		.cfi_restore 7
 2518              		.cfi_def_cfa_offset 0
 2519 0b7e 7047     		bx	lr
 2520              	.L131:
 2521              		.align	2
 2522              	.L130:
 2523 0b80 00000000 		.word	openserial_vars
 2524              		.cfi_endproc
 2525              	.LFE24:
 2527              		.align	1
 2528              		.global	openserial_handleCommands
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu softvfp
 2534              	openserial_handleCommands:
 2535              	.LFB25:
 738:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 739:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleCommands(void){
 2536              		.loc 1 739 0
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 112
 2539              		@ frame_needed = 1, uses_anonymous_args = 0
 2540 0b84 F0B5     		push	{r4, r5, r6, r7, lr}
 2541              		.cfi_def_cfa_offset 20
 2542              		.cfi_offset 4, -20
 2543              		.cfi_offset 5, -16
 2544              		.cfi_offset 6, -12
 2545              		.cfi_offset 7, -8
 2546              		.cfi_offset 14, -4
 2547 0b86 A3B0     		sub	sp, sp, #140
 2548              		.cfi_def_cfa_offset 160
 2549 0b88 06AF     		add	r7, sp, #24
 2550              		.cfi_def_cfa 7, 136
 740:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  input_buffer[20];
 741:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  numDataBytes;
 742:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  commandId;
 743:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  commandLen;
 744:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  comandParam_8;
 745:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint16_t comandParam_16;
 746:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 747:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  code,cellOptions,numCell,listOffset,maxListLen;
 748:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  ptr;
 749:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     cellInfo_ht celllist_add[CELLLIST_MAX_LEN];
 750:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     cellInfo_ht celllist_delete[CELLLIST_MAX_LEN];
 751:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 752:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     open_addr_t neighbor;
 753:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     bool        foundNeighbor;
 754:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 755:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr = 0;
 2551              		.loc 1 755 0
 2552 0b8a 0023     		movs	r3, #0
 2553 0b8c 87F86F30 		strb	r3, [r7, #111]
 756:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memset(celllist_add,0,CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 2554              		.loc 1 756 0
 2555 0b90 07F13003 		add	r3, r7, #48
 2556 0b94 1922     		movs	r2, #25
 2557 0b96 0021     		movs	r1, #0
 2558 0b98 1846     		mov	r0, r3
 2559 0b9a FFF7FEFF 		bl	memset
 757:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memset(celllist_delete,0,CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 2560              		.loc 1 757 0
 2561 0b9e 07F11403 		add	r3, r7, #20
 2562 0ba2 1922     		movs	r2, #25
 2563 0ba4 0021     		movs	r1, #0
 2564 0ba6 1846     		mov	r0, r3
 2565 0ba8 FFF7FEFF 		bl	memset
 758:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 759:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    numDataBytes = openserial_getInputBufferFillLevel();
 2566              		.loc 1 759 0
 2567 0bac FFF7FEFF 		bl	openserial_getInputBufferFillLevel
 2568 0bb0 0346     		mov	r3, r0
 2569 0bb2 87F86E30 		strb	r3, [r7, #110]
 760:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    //copying the buffer
 761:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_getInputBuffer(&(input_buffer[ptr]),numDataBytes);
 2570              		.loc 1 761 0
 2571 0bb6 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2572 0bba 07F15002 		add	r2, r7, #80
 2573 0bbe 1344     		add	r3, r3, r2
 2574 0bc0 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 2575 0bc4 1146     		mov	r1, r2
 2576 0bc6 1846     		mov	r0, r3
 2577 0bc8 FFF7FEFF 		bl	openserial_getInputBuffer
 762:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr++;
 2578              		.loc 1 762 0
 2579 0bcc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2580 0bd0 0133     		adds	r3, r3, #1
 2581 0bd2 87F86F30 		strb	r3, [r7, #111]
 763:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandId  = openserial_vars.inputBuf[ptr];
 2582              		.loc 1 763 0
 2583 0bd6 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2584 0bda CE4A     		ldr	r2, .L164
 2585 0bdc 1344     		add	r3, r3, r2
 2586 0bde 9B7A     		ldrb	r3, [r3, #10]
 2587 0be0 87F86D30 		strb	r3, [r7, #109]
 764:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr++;
 2588              		.loc 1 764 0
 2589 0be4 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2590 0be8 0133     		adds	r3, r3, #1
 2591 0bea 87F86F30 		strb	r3, [r7, #111]
 765:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandLen = openserial_vars.inputBuf[ptr];
 2592              		.loc 1 765 0
 2593 0bee 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2594 0bf2 C84A     		ldr	r2, .L164
 2595 0bf4 1344     		add	r3, r3, r2
 2596 0bf6 9B7A     		ldrb	r3, [r3, #10]
 2597 0bf8 87F86C30 		strb	r3, [r7, #108]
 766:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr++;
 2598              		.loc 1 766 0
 2599 0bfc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2600 0c00 0133     		adds	r3, r3, #1
 2601 0c02 87F86F30 		strb	r3, [r7, #111]
 767:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 768:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     switch(commandId) {
 2602              		.loc 1 768 0
 2603 0c06 97F86D30 		ldrb	r3, [r7, #109]	@ zero_extendqisi2
 2604 0c0a 132B     		cmp	r3, #19
 2605 0c0c 00F29281 		bhi	.L159
 2606 0c10 01A2     		adr	r2, .L135
 2607 0c12 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2608 0c16 00BF     		.p2align 2
 2609              	.L135:
 2610 0c18 690C0000 		.word	.L134+1
 2611 0c1c 830C0000 		.word	.L136+1
 2612 0c20 9D0C0000 		.word	.L137+1
 2613 0c24 CD0C0000 		.word	.L138+1
 2614 0c28 FD0C0000 		.word	.L139+1
 2615 0c2c 2D0D0000 		.word	.L140+1
 2616 0c30 5D0D0000 		.word	.L141+1
 2617 0c34 810D0000 		.word	.L142+1
 2618 0c38 B10D0000 		.word	.L143+1
 2619 0c3c D50D0000 		.word	.L144+1
 2620 0c40 D50D0000 		.word	.L144+1
 2621 0c44 D50D0000 		.word	.L144+1
 2622 0c48 D50D0000 		.word	.L144+1
 2623 0c4c D50D0000 		.word	.L144+1
 2624 0c50 D50D0000 		.word	.L144+1
 2625 0c54 6D0E0000 		.word	.L145+1
 2626 0c58 9D0E0000 		.word	.L146+1
 2627 0c5c CB0E0000 		.word	.L147+1
 2628 0c60 E50E0000 		.word	.L148+1
 2629 0c64 190F0000 		.word	.L149+1
 2630              		.p2align 1
 2631              	.L134:
 769:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_EBPERIOD:
 770:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2632              		.loc 1 770 0
 2633 0c68 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2634 0c6c A94A     		ldr	r2, .L164
 2635 0c6e 1344     		add	r3, r3, r2
 2636 0c70 9B7A     		ldrb	r3, [r3, #10]
 2637 0c72 87F86B30 		strb	r3, [r7, #107]
 771:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             sixtop_setEBPeriod(comandParam_8); // one byte, in seconds
 2638              		.loc 1 771 0
 2639 0c76 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2640 0c7a 1846     		mov	r0, r3
 2641 0c7c FFF7FEFF 		bl	sixtop_setEBPeriod
 772:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2642              		.loc 1 772 0
 2643 0c80 61E1     		b	.L150
 2644              	.L136:
 773:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_CHANNEL:
 774:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2645              		.loc 1 774 0
 2646 0c82 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2647 0c86 A34A     		ldr	r2, .L164
 2648 0c88 1344     		add	r3, r3, r2
 2649 0c8a 9B7A     		ldrb	r3, [r3, #10]
 2650 0c8c 87F86B30 		strb	r3, [r7, #107]
 775:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // set communication channel for protocol stack
 776:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setSingleChannel(comandParam_8); // one byte
 2651              		.loc 1 776 0
 2652 0c90 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2653 0c94 1846     		mov	r0, r3
 2654 0c96 FFF7FEFF 		bl	ieee154e_setSingleChannel
 777:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2655              		.loc 1 777 0
 2656 0c9a 54E1     		b	.L150
 2657              	.L137:
 778:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_KAPERIOD: // two bytes, in slots
 779:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2658              		.loc 1 779 0
 2659 0c9c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2660 0ca0 9C4A     		ldr	r2, .L164
 2661 0ca2 1344     		add	r3, r3, r2
 2662 0ca4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2663 0ca6 1AB2     		sxth	r2, r3
 780:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2664              		.loc 1 780 0
 2665 0ca8 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2666 0cac 0133     		adds	r3, r3, #1
 2667 0cae 9949     		ldr	r1, .L164
 2668 0cb0 0B44     		add	r3, r3, r1
 2669 0cb2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2670 0cb4 1B02     		lsls	r3, r3, #8
 779:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2671              		.loc 1 779 0
 2672 0cb6 1BB2     		sxth	r3, r3
 2673 0cb8 1343     		orrs	r3, r3, r2
 2674 0cba 1BB2     		sxth	r3, r3
 2675 0cbc A7F86830 		strh	r3, [r7, #104]	@ movhi
 781:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             sixtop_setKaPeriod(comandParam_16);
 2676              		.loc 1 781 0
 2677 0cc0 B7F86830 		ldrh	r3, [r7, #104]
 2678 0cc4 1846     		mov	r0, r3
 2679 0cc6 FFF7FEFF 		bl	sixtop_setKaPeriod
 782:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2680              		.loc 1 782 0
 2681 0cca 3CE1     		b	.L150
 2682              	.L138:
 783:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_DIOPERIOD: // two bytes, in mili-seconds
 784:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2683              		.loc 1 784 0
 2684 0ccc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2685 0cd0 904A     		ldr	r2, .L164
 2686 0cd2 1344     		add	r3, r3, r2
 2687 0cd4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2688 0cd6 1AB2     		sxth	r2, r3
 785:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2689              		.loc 1 785 0
 2690 0cd8 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2691 0cdc 0133     		adds	r3, r3, #1
 2692 0cde 8D49     		ldr	r1, .L164
 2693 0ce0 0B44     		add	r3, r3, r1
 2694 0ce2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2695 0ce4 1B02     		lsls	r3, r3, #8
 784:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2696              		.loc 1 784 0
 2697 0ce6 1BB2     		sxth	r3, r3
 2698 0ce8 1343     		orrs	r3, r3, r2
 2699 0cea 1BB2     		sxth	r3, r3
 2700 0cec A7F86830 		strh	r3, [r7, #104]	@ movhi
 786:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             icmpv6rpl_setDIOPeriod(comandParam_16);
 2701              		.loc 1 786 0
 2702 0cf0 B7F86830 		ldrh	r3, [r7, #104]
 2703 0cf4 1846     		mov	r0, r3
 2704 0cf6 FFF7FEFF 		bl	icmpv6rpl_setDIOPeriod
 787:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2705              		.loc 1 787 0
 2706 0cfa 24E1     		b	.L150
 2707              	.L139:
 788:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_DAOPERIOD: // two bytes, in mili-seconds
 789:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2708              		.loc 1 789 0
 2709 0cfc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2710 0d00 844A     		ldr	r2, .L164
 2711 0d02 1344     		add	r3, r3, r2
 2712 0d04 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2713 0d06 1AB2     		sxth	r2, r3
 790:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2714              		.loc 1 790 0
 2715 0d08 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2716 0d0c 0133     		adds	r3, r3, #1
 2717 0d0e 8149     		ldr	r1, .L164
 2718 0d10 0B44     		add	r3, r3, r1
 2719 0d12 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2720 0d14 1B02     		lsls	r3, r3, #8
 789:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2721              		.loc 1 789 0
 2722 0d16 1BB2     		sxth	r3, r3
 2723 0d18 1343     		orrs	r3, r3, r2
 2724 0d1a 1BB2     		sxth	r3, r3
 2725 0d1c A7F86830 		strh	r3, [r7, #104]	@ movhi
 791:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             icmpv6rpl_setDAOPeriod(comandParam_16);
 2726              		.loc 1 791 0
 2727 0d20 B7F86830 		ldrh	r3, [r7, #104]
 2728 0d24 1846     		mov	r0, r3
 2729 0d26 FFF7FEFF 		bl	icmpv6rpl_setDAOPeriod
 792:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2730              		.loc 1 792 0
 2731 0d2a 0CE1     		b	.L150
 2732              	.L140:
 793:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_DAGRANK: // two bytes
 794:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2733              		.loc 1 794 0
 2734 0d2c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2735 0d30 784A     		ldr	r2, .L164
 2736 0d32 1344     		add	r3, r3, r2
 2737 0d34 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2738 0d36 1AB2     		sxth	r2, r3
 795:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2739              		.loc 1 795 0
 2740 0d38 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2741 0d3c 0133     		adds	r3, r3, #1
 2742 0d3e 7549     		ldr	r1, .L164
 2743 0d40 0B44     		add	r3, r3, r1
 2744 0d42 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2745 0d44 1B02     		lsls	r3, r3, #8
 794:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2746              		.loc 1 794 0
 2747 0d46 1BB2     		sxth	r3, r3
 2748 0d48 1343     		orrs	r3, r3, r2
 2749 0d4a 1BB2     		sxth	r3, r3
 2750 0d4c A7F86830 		strh	r3, [r7, #104]	@ movhi
 796:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             icmpv6rpl_setMyDAGrank(comandParam_16);
 2751              		.loc 1 796 0
 2752 0d50 B7F86830 		ldrh	r3, [r7, #104]
 2753 0d54 1846     		mov	r0, r3
 2754 0d56 FFF7FEFF 		bl	icmpv6rpl_setMyDAGrank
 797:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2755              		.loc 1 797 0
 2756 0d5a F4E0     		b	.L150
 2757              	.L141:
 798:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_SECURITY_STATUS: // one byte
 799:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2758              		.loc 1 799 0
 2759 0d5c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2760 0d60 6C4A     		ldr	r2, .L164
 2761 0d62 1344     		add	r3, r3, r2
 2762 0d64 9B7A     		ldrb	r3, [r3, #10]
 2763 0d66 87F86B30 		strb	r3, [r7, #107]
 800:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setIsSecurityEnabled(comandParam_8);
 2764              		.loc 1 800 0
 2765 0d6a 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2766 0d6e 002B     		cmp	r3, #0
 2767 0d70 14BF     		ite	ne
 2768 0d72 0123     		movne	r3, #1
 2769 0d74 0023     		moveq	r3, #0
 2770 0d76 DBB2     		uxtb	r3, r3
 2771 0d78 1846     		mov	r0, r3
 2772 0d7a FFF7FEFF 		bl	ieee154e_setIsSecurityEnabled
 801:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                    break;
 2773              		.loc 1 801 0
 2774 0d7e E2E0     		b	.L150
 2775              	.L142:
 802:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_SLOTFRAMELENGTH: // two bytes
 803:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2776              		.loc 1 803 0
 2777 0d80 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2778 0d84 634A     		ldr	r2, .L164
 2779 0d86 1344     		add	r3, r3, r2
 2780 0d88 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2781 0d8a 1AB2     		sxth	r2, r3
 804:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2782              		.loc 1 804 0
 2783 0d8c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2784 0d90 0133     		adds	r3, r3, #1
 2785 0d92 6049     		ldr	r1, .L164
 2786 0d94 0B44     		add	r3, r3, r1
 2787 0d96 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2788 0d98 1B02     		lsls	r3, r3, #8
 803:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2789              		.loc 1 803 0
 2790 0d9a 1BB2     		sxth	r3, r3
 2791 0d9c 1343     		orrs	r3, r3, r2
 2792 0d9e 1BB2     		sxth	r3, r3
 2793 0da0 A7F86830 		strh	r3, [r7, #104]	@ movhi
 805:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             schedule_setFrameLength(comandParam_16);
 2794              		.loc 1 805 0
 2795 0da4 B7F86830 		ldrh	r3, [r7, #104]
 2796 0da8 1846     		mov	r0, r3
 2797 0daa FFF7FEFF 		bl	schedule_setFrameLength
 806:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2798              		.loc 1 806 0
 2799 0dae CAE0     		b	.L150
 2800              	.L143:
 807:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_ACK_STATUS:
 808:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2801              		.loc 1 808 0
 2802 0db0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2803 0db4 574A     		ldr	r2, .L164
 2804 0db6 1344     		add	r3, r3, r2
 2805 0db8 9B7A     		ldrb	r3, [r3, #10]
 2806 0dba 87F86B30 		strb	r3, [r7, #107]
 809:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setIsAckEnabled(comandParam_8);
 2807              		.loc 1 809 0
 2808 0dbe 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2809 0dc2 002B     		cmp	r3, #0
 2810 0dc4 14BF     		ite	ne
 2811 0dc6 0123     		movne	r3, #1
 2812 0dc8 0023     		moveq	r3, #0
 2813 0dca DBB2     		uxtb	r3, r3
 2814 0dcc 1846     		mov	r0, r3
 2815 0dce FFF7FEFF 		bl	ieee154e_setIsAckEnabled
 810:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                    break;
 2816              		.loc 1 810 0
 2817 0dd2 B8E0     		b	.L150
 2818              	.L144:
 811:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_ADD:
 812:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_DELETE:
 813:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_RELOCATE:
 814:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_COUNT:
 815:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_LIST:
 816:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_CLEAR:
 817:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // get preferred parent
 818:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             foundNeighbor =icmpv6rpl_getPreferredParentEui64(&neighbor);
 2819              		.loc 1 818 0
 2820 0dd4 3B46     		mov	r3, r7
 2821 0dd6 1846     		mov	r0, r3
 2822 0dd8 FFF7FEFF 		bl	icmpv6rpl_getPreferredParentEui64
 2823 0ddc 0346     		mov	r3, r0
 2824 0dde 87F86730 		strb	r3, [r7, #103]
 819:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (foundNeighbor==FALSE) {
 2825              		.loc 1 819 0
 2826 0de2 97F86730 		ldrb	r3, [r7, #103]
 2827 0de6 83F00103 		eor	r3, r3, #1
 2828 0dea DBB2     		uxtb	r3, r3
 2829 0dec 002B     		cmp	r3, #0
 2830 0dee 40F0A380 		bne	.L160
 820:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 821:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 822:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // the following sequence of bytes are, slotframe, cellOption, numCell, celllist
 823:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_get6pInfo(commandId,&code,&cellOptions,&numCell,celllist_add,celllist_delete
 2831              		.loc 1 823 0
 2832 0df2 07F14D04 		add	r4, r7, #77
 2833 0df6 07F14E02 		add	r2, r7, #78
 2834 0dfa 07F14F01 		add	r1, r7, #79
 2835 0dfe 97F86D00 		ldrb	r0, [r7, #109]	@ zero_extendqisi2
 2836 0e02 97F86C30 		ldrb	r3, [r7, #108]	@ zero_extendqisi2
 2837 0e06 0593     		str	r3, [sp, #20]
 2838 0e08 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2839 0e0c 0493     		str	r3, [sp, #16]
 2840 0e0e 07F14B03 		add	r3, r7, #75
 2841 0e12 0393     		str	r3, [sp, #12]
 2842 0e14 07F14C03 		add	r3, r7, #76
 2843 0e18 0293     		str	r3, [sp, #8]
 2844 0e1a 07F11403 		add	r3, r7, #20
 2845 0e1e 0193     		str	r3, [sp, #4]
 2846 0e20 07F13003 		add	r3, r7, #48
 2847 0e24 0093     		str	r3, [sp]
 2848 0e26 2346     		mov	r3, r4
 2849 0e28 FFF7FEFF 		bl	openserial_get6pInfo
 824:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             sixtop_request(
 2850              		.loc 1 824 0
 2851 0e2c 97F84F40 		ldrb	r4, [r7, #79]	@ zero_extendqisi2
 2852 0e30 97F84D50 		ldrb	r5, [r7, #77]	@ zero_extendqisi2
 2853 0e34 97F84E60 		ldrb	r6, [r7, #78]	@ zero_extendqisi2
 2854 0e38 FFF7FEFF 		bl	msf_getsfid
 2855 0e3c 0346     		mov	r3, r0
 2856 0e3e 1846     		mov	r0, r3
 2857 0e40 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 2858 0e44 9BB2     		uxth	r3, r3
 2859 0e46 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2860 0e4a 92B2     		uxth	r2, r2
 2861 0e4c 3946     		mov	r1, r7
 2862 0e4e 0492     		str	r2, [sp, #16]
 2863 0e50 0393     		str	r3, [sp, #12]
 2864 0e52 0290     		str	r0, [sp, #8]
 2865 0e54 07F11403 		add	r3, r7, #20
 2866 0e58 0193     		str	r3, [sp, #4]
 2867 0e5a 07F13003 		add	r3, r7, #48
 2868 0e5e 0093     		str	r3, [sp]
 2869 0e60 3346     		mov	r3, r6
 2870 0e62 2A46     		mov	r2, r5
 2871 0e64 2046     		mov	r0, r4
 2872 0e66 FFF7FEFF 		bl	sixtop_request
 825:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 code,              // code
 826:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 &neighbor,         // neighbor
 827:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 numCell,           // number cells
 828:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 cellOptions,       // cellOptions
 829:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 celllist_add,      // celllist to add
 830:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 celllist_delete,   // celllist to delete (not used)
 831:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 msf_getsfid(),     // sfid
 832:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 listOffset,        // list command offset (not used)
 833:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 maxListLen         // list command maximum celllist (not used)
 834:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             );
 835:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2873              		.loc 1 835 0
 2874 0e6a 6CE0     		b	.L150
 2875              	.L145:
 836:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_SLOTDURATION:
 837:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2876              		.loc 1 837 0
 2877 0e6c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2878 0e70 284A     		ldr	r2, .L164
 2879 0e72 1344     		add	r3, r3, r2
 2880 0e74 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2881 0e76 1AB2     		sxth	r2, r3
 838:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2882              		.loc 1 838 0
 2883 0e78 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2884 0e7c 0133     		adds	r3, r3, #1
 2885 0e7e 2549     		ldr	r1, .L164
 2886 0e80 0B44     		add	r3, r3, r1
 2887 0e82 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2888 0e84 1B02     		lsls	r3, r3, #8
 837:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2889              		.loc 1 837 0
 2890 0e86 1BB2     		sxth	r3, r3
 2891 0e88 1343     		orrs	r3, r3, r2
 2892 0e8a 1BB2     		sxth	r3, r3
 2893 0e8c A7F86830 		strh	r3, [r7, #104]	@ movhi
 839:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setSlotDuration(comandParam_16);
 2894              		.loc 1 839 0
 2895 0e90 B7F86830 		ldrh	r3, [r7, #104]
 2896 0e94 1846     		mov	r0, r3
 2897 0e96 FFF7FEFF 		bl	ieee154e_setSlotDuration
 840:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2898              		.loc 1 840 0
 2899 0e9a 54E0     		b	.L150
 2900              	.L146:
 841:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6PRESPONSE:
 842:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2901              		.loc 1 842 0
 2902 0e9c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2903 0ea0 1C4A     		ldr	r2, .L164
 2904 0ea2 1344     		add	r3, r3, r2
 2905 0ea4 9B7A     		ldrb	r3, [r3, #10]
 2906 0ea6 87F86B30 		strb	r3, [r7, #107]
 843:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (comandParam_8 ==1) {
 2907              		.loc 1 843 0
 2908 0eaa 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2909 0eae 012B     		cmp	r3, #1
 2910 0eb0 03D1     		bne	.L152
 844:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                sixtop_setIsResponseEnabled(TRUE);
 2911              		.loc 1 844 0
 2912 0eb2 0120     		movs	r0, #1
 2913 0eb4 FFF7FEFF 		bl	sixtop_setIsResponseEnabled
 845:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 846:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 if (comandParam_8 == 0) {
 847:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     sixtop_setIsResponseEnabled(FALSE);
 848:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 849:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     // security only can be 1 or 0
 850:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     break;
 851:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 852:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 853:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2914              		.loc 1 853 0
 2915 0eb8 45E0     		b	.L150
 2916              	.L152:
 846:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     sixtop_setIsResponseEnabled(FALSE);
 2917              		.loc 1 846 0
 2918 0eba 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2919 0ebe 002B     		cmp	r3, #0
 2920 0ec0 3CD1     		bne	.L161
 847:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 2921              		.loc 1 847 0
 2922 0ec2 0020     		movs	r0, #0
 2923 0ec4 FFF7FEFF 		bl	sixtop_setIsResponseEnabled
 2924              		.loc 1 853 0
 2925 0ec8 3DE0     		b	.L150
 2926              	.L147:
 854:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_UINJECTPERIOD:
 855:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2927              		.loc 1 855 0
 2928 0eca 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2929 0ece 114A     		ldr	r2, .L164
 2930 0ed0 1344     		add	r3, r3, r2
 2931 0ed2 9B7A     		ldrb	r3, [r3, #10]
 2932 0ed4 87F86B30 		strb	r3, [r7, #107]
 856:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             msf_appPktPeriod(comandParam_8);
 2933              		.loc 1 856 0
 2934 0ed8 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2935 0edc 1846     		mov	r0, r3
 2936 0ede FFF7FEFF 		bl	msf_appPktPeriod
 857:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2937              		.loc 1 857 0
 2938 0ee2 30E0     		b	.L150
 2939              	.L148:
 858:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_ECHO_REPLY_STATUS:
 859:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2940              		.loc 1 859 0
 2941 0ee4 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2942 0ee8 0A4A     		ldr	r2, .L164
 2943 0eea 1344     		add	r3, r3, r2
 2944 0eec 9B7A     		ldrb	r3, [r3, #10]
 2945 0eee 87F86B30 		strb	r3, [r7, #107]
 860:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (comandParam_8 == 1) {
 2946              		.loc 1 860 0
 2947 0ef2 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2948 0ef6 012B     		cmp	r3, #1
 2949 0ef8 03D1     		bne	.L155
 861:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 icmpv6echo_setIsReplyEnabled(TRUE);
 2950              		.loc 1 861 0
 2951 0efa 0120     		movs	r0, #1
 2952 0efc FFF7FEFF 		bl	icmpv6echo_setIsReplyEnabled
 862:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 863:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 if (comandParam_8 == 0) {
 864:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     icmpv6echo_setIsReplyEnabled(FALSE);
 865:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 866:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     // ack reply
 867:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     break;
 868:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 869:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 870:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2953              		.loc 1 870 0
 2954 0f00 21E0     		b	.L150
 2955              	.L155:
 863:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     icmpv6echo_setIsReplyEnabled(FALSE);
 2956              		.loc 1 863 0
 2957 0f02 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2958 0f06 002B     		cmp	r3, #0
 2959 0f08 1AD1     		bne	.L162
 864:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 2960              		.loc 1 864 0
 2961 0f0a 0020     		movs	r0, #0
 2962 0f0c FFF7FEFF 		bl	icmpv6echo_setIsReplyEnabled
 2963              		.loc 1 870 0
 2964 0f10 19E0     		b	.L150
 2965              	.L165:
 2966 0f12 00BF     		.align	2
 2967              	.L164:
 2968 0f14 00000000 		.word	openserial_vars
 2969              	.L149:
 871:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_JOIN_KEY:
 872:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (commandLen != 16) { break; }
 2970              		.loc 1 872 0
 2971 0f18 97F86C30 		ldrb	r3, [r7, #108]	@ zero_extendqisi2
 2972 0f1c 102B     		cmp	r3, #16
 2973 0f1e 11D1     		bne	.L163
 873:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             idmanager_setJoinKey(&openserial_vars.inputBuf[ptr]);
 2974              		.loc 1 873 0
 2975 0f20 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2976 0f24 0833     		adds	r3, r3, #8
 2977 0f26 0A4A     		ldr	r2, .L166
 2978 0f28 1344     		add	r3, r3, r2
 2979 0f2a 0233     		adds	r3, r3, #2
 2980 0f2c 1846     		mov	r0, r3
 2981 0f2e FFF7FEFF 		bl	idmanager_setJoinKey
 874:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2982              		.loc 1 874 0
 2983 0f32 08E0     		b	.L150
 2984              	.L159:
 875:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         default:
 876:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // wrong command ID
 877:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2985              		.loc 1 877 0
 2986 0f34 00BF     		nop
 2987 0f36 06E0     		b	.L150
 2988              	.L160:
 820:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 2989              		.loc 1 820 0
 2990 0f38 00BF     		nop
 2991 0f3a 04E0     		b	.L150
 2992              	.L161:
 850:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 2993              		.loc 1 850 0
 2994 0f3c 00BF     		nop
 2995 0f3e 02E0     		b	.L150
 2996              	.L162:
 867:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 2997              		.loc 1 867 0
 2998 0f40 00BF     		nop
 2999 0f42 00E0     		b	.L150
 3000              	.L163:
 872:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             idmanager_setJoinKey(&openserial_vars.inputBuf[ptr]);
 3001              		.loc 1 872 0
 3002 0f44 00BF     		nop
 3003              	.L150:
 878:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    }
 879:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3004              		.loc 1 879 0 discriminator 1
 3005 0f46 00BF     		nop
 3006 0f48 7437     		adds	r7, r7, #116
 3007              		.cfi_def_cfa_offset 20
 3008 0f4a BD46     		mov	sp, r7
 3009              		.cfi_def_cfa_register 13
 3010              		@ sp needed
 3011 0f4c F0BD     		pop	{r4, r5, r6, r7, pc}
 3012              	.L167:
 3013 0f4e 00BF     		.align	2
 3014              	.L166:
 3015 0f50 00000000 		.word	openserial_vars
 3016              		.cfi_endproc
 3017              	.LFE25:
 3019              		.align	1
 3020              		.global	openserial_debugPrint_timer_cb
 3021              		.syntax unified
 3022              		.thumb
 3023              		.thumb_func
 3024              		.fpu softvfp
 3026              	openserial_debugPrint_timer_cb:
 3027              	.LFB26:
 880:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 881:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== misc
 882:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 883:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_debugPrint_timer_cb(opentimers_id_t id){
 3028              		.loc 1 883 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 8
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032 0f54 80B5     		push	{r7, lr}
 3033              		.cfi_def_cfa_offset 8
 3034              		.cfi_offset 7, -8
 3035              		.cfi_offset 14, -4
 3036 0f56 82B0     		sub	sp, sp, #8
 3037              		.cfi_def_cfa_offset 16
 3038 0f58 00AF     		add	r7, sp, #0
 3039              		.cfi_def_cfa_register 7
 3040 0f5a 0346     		mov	r3, r0
 3041 0f5c FB71     		strb	r3, [r7, #7]
 884:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // calling the task directly as the timer_cb function is executed in
 885:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // task mode by opentimer already
 886:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     task_openserial_debugPrint();
 3042              		.loc 1 886 0
 3043 0f5e FFF7FEFF 		bl	task_openserial_debugPrint
 887:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3044              		.loc 1 887 0
 3045 0f62 00BF     		nop
 3046 0f64 0837     		adds	r7, r7, #8
 3047              		.cfi_def_cfa_offset 8
 3048 0f66 BD46     		mov	sp, r7
 3049              		.cfi_def_cfa_register 13
 3050              		@ sp needed
 3051 0f68 80BD     		pop	{r7, pc}
 3052              		.cfi_endproc
 3053              	.LFE26:
 3055              		.align	1
 3056              		.global	openserial_board_reset_cb
 3057              		.syntax unified
 3058              		.thumb
 3059              		.thumb_func
 3060              		.fpu softvfp
 3062              	openserial_board_reset_cb:
 3063              	.LFB27:
 888:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 889:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_board_reset_cb(opentimers_id_t id) {
 3064              		.loc 1 889 0
 3065              		.cfi_startproc
 3066              		@ args = 0, pretend = 0, frame = 8
 3067              		@ frame_needed = 1, uses_anonymous_args = 0
 3068 0f6a 80B5     		push	{r7, lr}
 3069              		.cfi_def_cfa_offset 8
 3070              		.cfi_offset 7, -8
 3071              		.cfi_offset 14, -4
 3072 0f6c 82B0     		sub	sp, sp, #8
 3073              		.cfi_def_cfa_offset 16
 3074 0f6e 00AF     		add	r7, sp, #0
 3075              		.cfi_def_cfa_register 7
 3076 0f70 0346     		mov	r3, r0
 3077 0f72 FB71     		strb	r3, [r7, #7]
 890:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     (void)id;
 891:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     board_reset();
 3078              		.loc 1 891 0
 3079 0f74 FFF7FEFF 		bl	board_reset
 892:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3080              		.loc 1 892 0
 3081 0f78 00BF     		nop
 3082 0f7a 0837     		adds	r7, r7, #8
 3083              		.cfi_def_cfa_offset 8
 3084 0f7c BD46     		mov	sp, r7
 3085              		.cfi_def_cfa_register 13
 3086              		@ sp needed
 3087 0f7e 80BD     		pop	{r7, pc}
 3088              		.cfi_endproc
 3089              	.LFE27:
 3091              		.align	1
 3092              		.global	outputHdlcOpen
 3093              		.syntax unified
 3094              		.thumb
 3095              		.thumb_func
 3096              		.fpu softvfp
 3098              	outputHdlcOpen:
 3099              	.LFB28:
 893:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 894:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== hdlc (output)
 895:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 896:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 897:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Start an HDLC frame in the output buffer.
 898:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 899:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void outputHdlcOpen(void) {
 3100              		.loc 1 899 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 1, uses_anonymous_args = 0
 3104 0f80 80B5     		push	{r7, lr}
 3105              		.cfi_def_cfa_offset 8
 3106              		.cfi_offset 7, -8
 3107              		.cfi_offset 14, -4
 3108 0f82 00AF     		add	r7, sp, #0
 3109              		.cfi_def_cfa_register 7
 900:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 901:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 902:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 903:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 3110              		.loc 1 903 0
 3111 0f84 FFF7FEFF 		bl	IntMasterDisable
 904:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 905:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // initialize the value of the CRC
 906:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 907:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcOutputCrc                                    = HDLC_CRCINIT;
 3112              		.loc 1 907 0
 3113 0f88 0B4B     		ldr	r3, .L171
 3114 0f8a 4FF6FF72 		movw	r2, #65535
 3115 0f8e A3F8E024 		strh	r2, [r3, #1248]	@ movhi
 908:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 909:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // write the opening HDLC flag
 910:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]       = HDLC_
 3116              		.loc 1 910 0
 3117 0f92 094B     		ldr	r3, .L171
 3118 0f94 B3F8DA34 		ldrh	r3, [r3, #1242]
 3119 0f98 5A1C     		adds	r2, r3, #1
 3120 0f9a 91B2     		uxth	r1, r2
 3121 0f9c 064A     		ldr	r2, .L171
 3122 0f9e A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3123 0fa2 C3F30903 		ubfx	r3, r3, #0, #10
 3124 0fa6 044A     		ldr	r2, .L171
 3125 0fa8 1344     		add	r3, r3, r2
 3126 0faa 7E22     		movs	r2, #126
 3127 0fac 83F8D920 		strb	r2, [r3, #217]
 911:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 912:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 3128              		.loc 1 912 0
 3129 0fb0 FFF7FEFF 		bl	IntMasterEnable
 913:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 914:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3130              		.loc 1 914 0
 3131 0fb4 00BF     		nop
 3132 0fb6 80BD     		pop	{r7, pc}
 3133              	.L172:
 3134              		.align	2
 3135              	.L171:
 3136 0fb8 00000000 		.word	openserial_vars
 3137              		.cfi_endproc
 3138              	.LFE28:
 3140              		.align	1
 3141              		.global	outputHdlcWrite
 3142              		.syntax unified
 3143              		.thumb
 3144              		.thumb_func
 3145              		.fpu softvfp
 3147              	outputHdlcWrite:
 3148              	.LFB29:
 915:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 916:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Add a byte to the outgoing HDLC frame being built.
 917:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 918:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void outputHdlcWrite(uint8_t b) {
 3149              		.loc 1 918 0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 8
 3152              		@ frame_needed = 1, uses_anonymous_args = 0
 3153 0fbc 80B5     		push	{r7, lr}
 3154              		.cfi_def_cfa_offset 8
 3155              		.cfi_offset 7, -8
 3156              		.cfi_offset 14, -4
 3157 0fbe 82B0     		sub	sp, sp, #8
 3158              		.cfi_def_cfa_offset 16
 3159 0fc0 00AF     		add	r7, sp, #0
 3160              		.cfi_def_cfa_register 7
 3161 0fc2 0346     		mov	r3, r0
 3162 0fc4 FB71     		strb	r3, [r7, #7]
 919:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 920:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 921:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 922:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 3163              		.loc 1 922 0
 3164 0fc6 FFF7FEFF 		bl	IntMasterDisable
 923:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 924:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // iterate through CRC calculator
 925:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcOutputCrc = crcIteration(openserial_vars.hdlcOutputCrc,b);
 3165              		.loc 1 925 0
 3166 0fca 1D4B     		ldr	r3, .L176
 3167 0fcc B3F8E034 		ldrh	r3, [r3, #1248]
 3168 0fd0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3169 0fd2 1146     		mov	r1, r2
 3170 0fd4 1846     		mov	r0, r3
 3171 0fd6 FFF7FEFF 		bl	crcIteration
 3172 0fda 0346     		mov	r3, r0
 3173 0fdc 1A46     		mov	r2, r3
 3174 0fde 184B     		ldr	r3, .L176
 3175 0fe0 A3F8E024 		strh	r2, [r3, #1248]	@ movhi
 926:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 927:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // add byte to buffer
 928:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (b==HDLC_FLAG || b==HDLC_ESCAPE) {
 3176              		.loc 1 928 0
 3177 0fe4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3178 0fe6 7E2B     		cmp	r3, #126
 3179 0fe8 02D0     		beq	.L174
 3180              		.loc 1 928 0 is_stmt 0 discriminator 1
 3181 0fea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3182 0fec 7D2B     		cmp	r3, #125
 3183 0fee 12D1     		bne	.L175
 3184              	.L174:
 929:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]   = HDLC_
 3185              		.loc 1 929 0 is_stmt 1
 3186 0ff0 134B     		ldr	r3, .L176
 3187 0ff2 B3F8DA34 		ldrh	r3, [r3, #1242]
 3188 0ff6 5A1C     		adds	r2, r3, #1
 3189 0ff8 91B2     		uxth	r1, r2
 3190 0ffa 114A     		ldr	r2, .L176
 3191 0ffc A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3192 1000 C3F30903 		ubfx	r3, r3, #0, #10
 3193 1004 0E4A     		ldr	r2, .L176
 3194 1006 1344     		add	r3, r3, r2
 3195 1008 7D22     		movs	r2, #125
 3196 100a 83F8D920 		strb	r2, [r3, #217]
 930:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         b                                                            = b^HDLC_ESCAPE_MASK;
 3197              		.loc 1 930 0
 3198 100e FB79     		ldrb	r3, [r7, #7]
 3199 1010 83F02003 		eor	r3, r3, #32
 3200 1014 FB71     		strb	r3, [r7, #7]
 3201              	.L175:
 931:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 932:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]       = b;
 3202              		.loc 1 932 0
 3203 1016 0A4B     		ldr	r3, .L176
 3204 1018 B3F8DA34 		ldrh	r3, [r3, #1242]
 3205 101c 5A1C     		adds	r2, r3, #1
 3206 101e 91B2     		uxth	r1, r2
 3207 1020 074A     		ldr	r2, .L176
 3208 1022 A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3209 1026 C3F30903 		ubfx	r3, r3, #0, #10
 3210 102a 054A     		ldr	r2, .L176
 3211 102c 1344     		add	r3, r3, r2
 3212 102e FA79     		ldrb	r2, [r7, #7]
 3213 1030 83F8D920 		strb	r2, [r3, #217]
 933:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 934:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 3214              		.loc 1 934 0
 3215 1034 FFF7FEFF 		bl	IntMasterEnable
 935:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 936:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3216              		.loc 1 936 0
 3217 1038 00BF     		nop
 3218 103a 0837     		adds	r7, r7, #8
 3219              		.cfi_def_cfa_offset 8
 3220 103c BD46     		mov	sp, r7
 3221              		.cfi_def_cfa_register 13
 3222              		@ sp needed
 3223 103e 80BD     		pop	{r7, pc}
 3224              	.L177:
 3225              		.align	2
 3226              	.L176:
 3227 1040 00000000 		.word	openserial_vars
 3228              		.cfi_endproc
 3229              	.LFE29:
 3231              		.align	1
 3232              		.global	outputHdlcClose
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu softvfp
 3238              	outputHdlcClose:
 3239              	.LFB30:
 937:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 938:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Finalize the outgoing HDLC frame.
 939:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 940:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void outputHdlcClose(void) {
 3240              		.loc 1 940 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 8
 3243              		@ frame_needed = 1, uses_anonymous_args = 0
 3244 1044 80B5     		push	{r7, lr}
 3245              		.cfi_def_cfa_offset 8
 3246              		.cfi_offset 7, -8
 3247              		.cfi_offset 14, -4
 3248 1046 82B0     		sub	sp, sp, #8
 3249              		.cfi_def_cfa_offset 16
 3250 1048 00AF     		add	r7, sp, #0
 3251              		.cfi_def_cfa_register 7
 941:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint16_t   finalCrc;
 942:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 943:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 944:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 945:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 3252              		.loc 1 945 0
 3253 104a FFF7FEFF 		bl	IntMasterDisable
 946:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 947:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // finalize the calculation of the CRC
 948:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     finalCrc   = ~openserial_vars.hdlcOutputCrc;
 3254              		.loc 1 948 0
 3255 104e 134B     		ldr	r3, .L179
 3256 1050 B3F8E034 		ldrh	r3, [r3, #1248]
 3257 1054 DB43     		mvns	r3, r3
 3258 1056 FB80     		strh	r3, [r7, #6]	@ movhi
 949:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 950:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // write the CRC value
 951:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((finalCrc>>0)&0xff);
 3259              		.loc 1 951 0
 3260 1058 FB88     		ldrh	r3, [r7, #6]	@ movhi
 3261 105a DBB2     		uxtb	r3, r3
 3262 105c 1846     		mov	r0, r3
 3263 105e FFF7FEFF 		bl	outputHdlcWrite
 952:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((finalCrc>>8)&0xff);
 3264              		.loc 1 952 0
 3265 1062 FB88     		ldrh	r3, [r7, #6]
 3266 1064 1B0A     		lsrs	r3, r3, #8
 3267 1066 9BB2     		uxth	r3, r3
 3268 1068 DBB2     		uxtb	r3, r3
 3269 106a 1846     		mov	r0, r3
 3270 106c FFF7FEFF 		bl	outputHdlcWrite
 953:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 954:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // write the closing HDLC flag
 955:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]       = HDLC_
 3271              		.loc 1 955 0
 3272 1070 0A4B     		ldr	r3, .L179
 3273 1072 B3F8DA34 		ldrh	r3, [r3, #1242]
 3274 1076 5A1C     		adds	r2, r3, #1
 3275 1078 91B2     		uxth	r1, r2
 3276 107a 084A     		ldr	r2, .L179
 3277 107c A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3278 1080 C3F30903 		ubfx	r3, r3, #0, #10
 3279 1084 054A     		ldr	r2, .L179
 3280 1086 1344     		add	r3, r3, r2
 3281 1088 7E22     		movs	r2, #126
 3282 108a 83F8D920 		strb	r2, [r3, #217]
 956:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 957:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 3283              		.loc 1 957 0
 3284 108e FFF7FEFF 		bl	IntMasterEnable
 958:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 959:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3285              		.loc 1 959 0
 3286 1092 00BF     		nop
 3287 1094 0837     		adds	r7, r7, #8
 3288              		.cfi_def_cfa_offset 8
 3289 1096 BD46     		mov	sp, r7
 3290              		.cfi_def_cfa_register 13
 3291              		@ sp needed
 3292 1098 80BD     		pop	{r7, pc}
 3293              	.L180:
 3294 109a 00BF     		.align	2
 3295              	.L179:
 3296 109c 00000000 		.word	openserial_vars
 3297              		.cfi_endproc
 3298              	.LFE30:
 3300              		.align	1
 3301              		.global	inputHdlcOpen
 3302              		.syntax unified
 3303              		.thumb
 3304              		.thumb_func
 3305              		.fpu softvfp
 3307              	inputHdlcOpen:
 3308              	.LFB31:
 960:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 961:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== hdlc (input)
 962:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 963:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 964:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Start an HDLC frame in the input buffer.
 965:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 966:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void inputHdlcOpen(void) {
 3309              		.loc 1 966 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 0
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313              		@ link register save eliminated.
 3314 10a0 80B4     		push	{r7}
 3315              		.cfi_def_cfa_offset 4
 3316              		.cfi_offset 7, -4
 3317 10a2 00AF     		add	r7, sp, #0
 3318              		.cfi_def_cfa_register 7
 967:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // reset the input buffer index
 968:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.inputBufFillLevel                                = 0;
 3319              		.loc 1 968 0
 3320 10a4 064B     		ldr	r3, .L182
 3321 10a6 0022     		movs	r2, #0
 3322 10a8 83F8D220 		strb	r2, [r3, #210]
 969:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 970:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // initialize the value of the CRC
 971:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcInputCrc                                     = HDLC_CRCINIT;
 3323              		.loc 1 971 0
 3324 10ac 044B     		ldr	r3, .L182
 3325 10ae 4FF6FF72 		movw	r2, #65535
 3326 10b2 A3F8D620 		strh	r2, [r3, #214]	@ movhi
 972:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3327              		.loc 1 972 0
 3328 10b6 00BF     		nop
 3329 10b8 BD46     		mov	sp, r7
 3330              		.cfi_def_cfa_register 13
 3331              		@ sp needed
 3332 10ba 80BC     		pop	{r7}
 3333              		.cfi_restore 7
 3334              		.cfi_def_cfa_offset 0
 3335 10bc 7047     		bx	lr
 3336              	.L183:
 3337 10be 00BF     		.align	2
 3338              	.L182:
 3339 10c0 00000000 		.word	openserial_vars
 3340              		.cfi_endproc
 3341              	.LFE31:
 3343              		.align	1
 3344              		.global	inputHdlcWrite
 3345              		.syntax unified
 3346              		.thumb
 3347              		.thumb_func
 3348              		.fpu softvfp
 3350              	inputHdlcWrite:
 3351              	.LFB32:
 973:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 974:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Add a byte to the incoming HDLC frame.
 975:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 976:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void inputHdlcWrite(uint8_t b) {
 3352              		.loc 1 976 0
 3353              		.cfi_startproc
 3354              		@ args = 0, pretend = 0, frame = 8
 3355              		@ frame_needed = 1, uses_anonymous_args = 0
 3356 10c4 80B5     		push	{r7, lr}
 3357              		.cfi_def_cfa_offset 8
 3358              		.cfi_offset 7, -8
 3359              		.cfi_offset 14, -4
 3360 10c6 82B0     		sub	sp, sp, #8
 3361              		.cfi_def_cfa_offset 16
 3362 10c8 00AF     		add	r7, sp, #0
 3363              		.cfi_def_cfa_register 7
 3364 10ca 0346     		mov	r3, r0
 3365 10cc FB71     		strb	r3, [r7, #7]
 977:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (b==HDLC_ESCAPE) {
 3366              		.loc 1 977 0
 3367 10ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3368 10d0 7D2B     		cmp	r3, #125
 3369 10d2 04D1     		bne	.L185
 978:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcInputEscaping = TRUE;
 3370              		.loc 1 978 0
 3371 10d4 194B     		ldr	r3, .L189
 3372 10d6 0122     		movs	r2, #1
 3373 10d8 83F8D820 		strb	r2, [r3, #216]
 979:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 980:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.hdlcInputEscaping==TRUE) {
 981:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             b                             = b^HDLC_ESCAPE_MASK;
 982:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.hdlcInputEscaping = FALSE;
 983:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 984:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 985:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // add byte to input buffer
 986:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBuf[openserial_vars.inputBufFillLevel] = b;
 987:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel++;
 988:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 989:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // iterate through CRC calculator
 990:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcInputCrc = crcIteration(openserial_vars.hdlcInputCrc,b);
 991:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 992:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3374              		.loc 1 992 0
 3375 10dc 29E0     		b	.L188
 3376              	.L185:
 980:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             b                             = b^HDLC_ESCAPE_MASK;
 3377              		.loc 1 980 0
 3378 10de 174B     		ldr	r3, .L189
 3379 10e0 93F8D830 		ldrb	r3, [r3, #216]	@ zero_extendqisi2
 3380 10e4 002B     		cmp	r3, #0
 3381 10e6 07D0     		beq	.L187
 981:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.hdlcInputEscaping = FALSE;
 3382              		.loc 1 981 0
 3383 10e8 FB79     		ldrb	r3, [r7, #7]
 3384 10ea 83F02003 		eor	r3, r3, #32
 3385 10ee FB71     		strb	r3, [r7, #7]
 982:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 3386              		.loc 1 982 0
 3387 10f0 124B     		ldr	r3, .L189
 3388 10f2 0022     		movs	r2, #0
 3389 10f4 83F8D820 		strb	r2, [r3, #216]
 3390              	.L187:
 986:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel++;
 3391              		.loc 1 986 0
 3392 10f8 104B     		ldr	r3, .L189
 3393 10fa 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3394 10fe 1A46     		mov	r2, r3
 3395 1100 0E4B     		ldr	r3, .L189
 3396 1102 1344     		add	r3, r3, r2
 3397 1104 FA79     		ldrb	r2, [r7, #7]
 3398 1106 9A72     		strb	r2, [r3, #10]
 987:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 3399              		.loc 1 987 0
 3400 1108 0C4B     		ldr	r3, .L189
 3401 110a 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3402 110e 0133     		adds	r3, r3, #1
 3403 1110 DAB2     		uxtb	r2, r3
 3404 1112 0A4B     		ldr	r3, .L189
 3405 1114 83F8D220 		strb	r2, [r3, #210]
 990:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 3406              		.loc 1 990 0
 3407 1118 084B     		ldr	r3, .L189
 3408 111a B3F8D630 		ldrh	r3, [r3, #214]
 3409 111e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3410 1120 1146     		mov	r1, r2
 3411 1122 1846     		mov	r0, r3
 3412 1124 FFF7FEFF 		bl	crcIteration
 3413 1128 0346     		mov	r3, r0
 3414 112a 1A46     		mov	r2, r3
 3415 112c 034B     		ldr	r3, .L189
 3416 112e A3F8D620 		strh	r2, [r3, #214]	@ movhi
 3417              	.L188:
 3418              		.loc 1 992 0
 3419 1132 00BF     		nop
 3420 1134 0837     		adds	r7, r7, #8
 3421              		.cfi_def_cfa_offset 8
 3422 1136 BD46     		mov	sp, r7
 3423              		.cfi_def_cfa_register 13
 3424              		@ sp needed
 3425 1138 80BD     		pop	{r7, pc}
 3426              	.L190:
 3427 113a 00BF     		.align	2
 3428              	.L189:
 3429 113c 00000000 		.word	openserial_vars
 3430              		.cfi_endproc
 3431              	.LFE32:
 3433              		.align	1
 3434              		.global	inputHdlcClose
 3435              		.syntax unified
 3436              		.thumb
 3437              		.thumb_func
 3438              		.fpu softvfp
 3440              	inputHdlcClose:
 3441              	.LFB33:
 993:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 994:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Finalize the incoming HDLC frame.
 995:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 996:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void inputHdlcClose(void) {
 3442              		.loc 1 996 0
 3443              		.cfi_startproc
 3444              		@ args = 0, pretend = 0, frame = 0
 3445              		@ frame_needed = 1, uses_anonymous_args = 0
 3446              		@ link register save eliminated.
 3447 1140 80B4     		push	{r7}
 3448              		.cfi_def_cfa_offset 4
 3449              		.cfi_offset 7, -4
 3450 1142 00AF     		add	r7, sp, #0
 3451              		.cfi_def_cfa_register 7
 997:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 998:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // verify the validity of the frame
 999:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.hdlcInputCrc==HDLC_CRCGOOD) {
 3452              		.loc 1 999 0
 3453 1144 0B4B     		ldr	r3, .L195
 3454 1146 B3F8D630 		ldrh	r3, [r3, #214]
 3455 114a 4FF2B802 		movw	r2, #61624
 3456 114e 9342     		cmp	r3, r2
 3457 1150 08D1     		bne	.L192
1000:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // the CRC is correct
1001:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1002:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // remove the CRC from the input buffer
1003:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel    -= 2;
 3458              		.loc 1 1003 0
 3459 1152 084B     		ldr	r3, .L195
 3460 1154 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3461 1158 023B     		subs	r3, r3, #2
 3462 115a DAB2     		uxtb	r2, r3
 3463 115c 054B     		ldr	r3, .L195
 3464 115e 83F8D220 		strb	r2, [r3, #210]
1004:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
1005:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // the CRC is incorrect
1006:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1007:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // drop the incoming frame
1008:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel     = 0;
1009:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
1010:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3465              		.loc 1 1010 0
 3466 1162 03E0     		b	.L194
 3467              	.L192:
1008:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 3468              		.loc 1 1008 0
 3469 1164 034B     		ldr	r3, .L195
 3470 1166 0022     		movs	r2, #0
 3471 1168 83F8D220 		strb	r2, [r3, #210]
 3472              	.L194:
 3473              		.loc 1 1010 0
 3474 116c 00BF     		nop
 3475 116e BD46     		mov	sp, r7
 3476              		.cfi_def_cfa_register 13
 3477              		@ sp needed
 3478 1170 80BC     		pop	{r7}
 3479              		.cfi_restore 7
 3480              		.cfi_def_cfa_offset 0
 3481 1172 7047     		bx	lr
 3482              	.L196:
 3483              		.align	2
 3484              	.L195:
 3485 1174 00000000 		.word	openserial_vars
 3486              		.cfi_endproc
 3487              	.LFE33:
 3489              		.align	1
 3490              		.global	task_printInputBufferOverflow
 3491              		.syntax unified
 3492              		.thumb
 3493              		.thumb_func
 3494              		.fpu softvfp
 3496              	task_printInputBufferOverflow:
 3497              	.LFB34:
1011:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1012:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== task ============================================
1013:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1014:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printInputBufferOverflow(void){
 3498              		.loc 1 1014 0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 0
 3501              		@ frame_needed = 1, uses_anonymous_args = 0
 3502 1178 80B5     		push	{r7, lr}
 3503              		.cfi_def_cfa_offset 8
 3504              		.cfi_offset 7, -8
 3505              		.cfi_offset 14, -4
 3506 117a 00AF     		add	r7, sp, #0
 3507              		.cfi_def_cfa_register 7
1015:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // input buffer overflow
1016:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printError(
 3508              		.loc 1 1016 0
 3509 117c 0023     		movs	r3, #0
 3510 117e 0022     		movs	r2, #0
 3511 1180 0421     		movs	r1, #4
 3512 1182 0420     		movs	r0, #4
 3513 1184 FFF7FEFF 		bl	openserial_printError
1017:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         COMPONENT_OPENSERIAL,
1018:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ERR_INPUT_BUFFER_OVERFLOW,
1019:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0,
1020:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0
1021:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
1022:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3514              		.loc 1 1022 0
 3515 1188 00BF     		nop
 3516 118a 80BD     		pop	{r7, pc}
 3517              		.cfi_endproc
 3518              	.LFE34:
 3520              		.align	1
 3521              		.global	task_printWrongCRCInput
 3522              		.syntax unified
 3523              		.thumb
 3524              		.thumb_func
 3525              		.fpu softvfp
 3527              	task_printWrongCRCInput:
 3528              	.LFB35:
1023:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1024:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printWrongCRCInput(void){
 3529              		.loc 1 1024 0
 3530              		.cfi_startproc
 3531              		@ args = 0, pretend = 0, frame = 0
 3532              		@ frame_needed = 1, uses_anonymous_args = 0
 3533 118c 80B5     		push	{r7, lr}
 3534              		.cfi_def_cfa_offset 8
 3535              		.cfi_offset 7, -8
 3536              		.cfi_offset 14, -4
 3537 118e 00AF     		add	r7, sp, #0
 3538              		.cfi_def_cfa_register 7
1025:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // invalid HDLC frame
1026:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printError(
 3539              		.loc 1 1026 0
 3540 1190 0023     		movs	r3, #0
 3541 1192 0022     		movs	r2, #0
 3542 1194 3A21     		movs	r1, #58
 3543 1196 0420     		movs	r0, #4
 3544 1198 FFF7FEFF 		bl	openserial_printError
1027:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         COMPONENT_OPENSERIAL,
1028:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ERR_WRONG_CRC_INPUT,
1029:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0,
1030:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0
1031:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
1032:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3545              		.loc 1 1032 0
 3546 119c 00BF     		nop
 3547 119e 80BD     		pop	{r7, pc}
 3548              		.cfi_endproc
 3549              	.LFE35:
 3551              		.align	1
 3552              		.global	isr_openserial_tx
 3553              		.syntax unified
 3554              		.thumb
 3555              		.thumb_func
 3556              		.fpu softvfp
 3558              	isr_openserial_tx:
 3559              	.LFB36:
1033:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1034:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== interrupt handlers ==============================
1035:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1036:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // executed in ISR, called from scheduler.c
1037:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void isr_openserial_tx(void) {
 3560              		.loc 1 1037 0
 3561              		.cfi_startproc
 3562              		@ args = 0, pretend = 0, frame = 0
 3563              		@ frame_needed = 1, uses_anonymous_args = 0
 3564 11a0 80B5     		push	{r7, lr}
 3565              		.cfi_def_cfa_offset 8
 3566              		.cfi_offset 7, -8
 3567              		.cfi_offset 14, -4
 3568 11a2 00AF     		add	r7, sp, #0
 3569              		.cfi_def_cfa_register 7
1038:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.ctsStateChanged==TRUE) {
 3570              		.loc 1 1038 0
 3571 11a4 214B     		ldr	r3, .L207
 3572 11a6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3573 11a8 012B     		cmp	r3, #1
 3574 11aa 12D1     		bne	.L200
1039:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // set CTS
1040:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1041:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.fInhibited==TRUE) {
 3575              		.loc 1 1041 0
 3576 11ac 1F4B     		ldr	r3, .L207
 3577 11ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3578 11b0 012B     		cmp	r3, #1
 3579 11b2 07D1     		bne	.L201
1042:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             uart_setCTS(FALSE);
 3580              		.loc 1 1042 0
 3581 11b4 0020     		movs	r0, #0
 3582 11b6 FFF7FEFF 		bl	uart_setCTS
1043:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = FALSE;
 3583              		.loc 1 1043 0
 3584 11ba 1C4B     		ldr	r3, .L207
 3585 11bc 0022     		movs	r2, #0
 3586 11be 83F8DE24 		strb	r2, [r3, #1246]
 3587 11c2 02E0     		b	.L202
 3588              	.L201:
1044:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
1045:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             uart_setCTS(TRUE);
 3589              		.loc 1 1045 0
 3590 11c4 0120     		movs	r0, #1
 3591 11c6 FFF7FEFF 		bl	uart_setCTS
 3592              	.L202:
1046:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1047:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.ctsStateChanged = FALSE;
 3593              		.loc 1 1047 0
 3594 11ca 184B     		ldr	r3, .L207
 3595 11cc 0022     		movs	r2, #0
 3596 11ce 5A70     		strb	r2, [r3, #1]
1048:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (openserial_vars.fInhibited==TRUE) {
1049:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // currently inhibited
1050:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1051:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.fBusyFlushing = FALSE;
1052:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
1053:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // not inhibited
1054:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1055:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.outputBufIdxW!=openserial_vars.outputBufIdxR) {
1056:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // I have some bytes to transmit
1057:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1058:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             uart_writeByte(openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBu
1059:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = TRUE;
1060:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
1061:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // I'm done sending bytes
1062:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1063:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = FALSE;
1064:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1065:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
1066:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3597              		.loc 1 1066 0
 3598 11d0 2AE0     		b	.L206
 3599              	.L200:
1048:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (openserial_vars.fInhibited==TRUE) {
 3600              		.loc 1 1048 0
 3601 11d2 164B     		ldr	r3, .L207
 3602 11d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3603 11d6 012B     		cmp	r3, #1
 3604 11d8 04D1     		bne	.L204
1051:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 3605              		.loc 1 1051 0
 3606 11da 144B     		ldr	r3, .L207
 3607 11dc 0022     		movs	r2, #0
 3608 11de 83F8DE24 		strb	r2, [r3, #1246]
 3609              		.loc 1 1066 0
 3610 11e2 21E0     		b	.L206
 3611              	.L204:
1055:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // I have some bytes to transmit
 3612              		.loc 1 1055 0
 3613 11e4 114B     		ldr	r3, .L207
 3614 11e6 B3F8DA24 		ldrh	r2, [r3, #1242]
 3615 11ea 104B     		ldr	r3, .L207
 3616 11ec B3F8DC34 		ldrh	r3, [r3, #1244]
 3617 11f0 9A42     		cmp	r2, r3
 3618 11f2 15D0     		beq	.L205
1058:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = TRUE;
 3619              		.loc 1 1058 0
 3620 11f4 0D4B     		ldr	r3, .L207
 3621 11f6 B3F8DC34 		ldrh	r3, [r3, #1244]
 3622 11fa 5A1C     		adds	r2, r3, #1
 3623 11fc 91B2     		uxth	r1, r2
 3624 11fe 0B4A     		ldr	r2, .L207
 3625 1200 A2F8DC14 		strh	r1, [r2, #1244]	@ movhi
 3626 1204 C3F30903 		ubfx	r3, r3, #0, #10
 3627 1208 084A     		ldr	r2, .L207
 3628 120a 1344     		add	r3, r3, r2
 3629 120c 93F8D930 		ldrb	r3, [r3, #217]	@ zero_extendqisi2
 3630 1210 1846     		mov	r0, r3
 3631 1212 FFF7FEFF 		bl	uart_writeByte
1059:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
 3632              		.loc 1 1059 0
 3633 1216 054B     		ldr	r3, .L207
 3634 1218 0122     		movs	r2, #1
 3635 121a 83F8DE24 		strb	r2, [r3, #1246]
 3636              		.loc 1 1066 0
 3637 121e 03E0     		b	.L206
 3638              	.L205:
1063:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 3639              		.loc 1 1063 0
 3640 1220 024B     		ldr	r3, .L207
 3641 1222 0022     		movs	r2, #0
 3642 1224 83F8DE24 		strb	r2, [r3, #1246]
 3643              	.L206:
 3644              		.loc 1 1066 0
 3645 1228 00BF     		nop
 3646 122a 80BD     		pop	{r7, pc}
 3647              	.L208:
 3648              		.align	2
 3649              	.L207:
 3650 122c 00000000 		.word	openserial_vars
 3651              		.cfi_endproc
 3652              	.LFE36:
 3654              		.align	1
 3655              		.global	isr_openserial_rx
 3656              		.syntax unified
 3657              		.thumb
 3658              		.thumb_func
 3659              		.fpu softvfp
 3661              	isr_openserial_rx:
 3662              	.LFB37:
1067:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1068:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
1069:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \pre executed in ISR, called from scheduler.c
1070:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1071:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \returns 1 if don't receiving frame, 0 if not
1072:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
1073:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1074:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** uint8_t isr_openserial_rx(void) {
 3663              		.loc 1 1074 0
 3664              		.cfi_startproc
 3665              		@ args = 0, pretend = 0, frame = 8
 3666              		@ frame_needed = 1, uses_anonymous_args = 0
 3667 1230 80B5     		push	{r7, lr}
 3668              		.cfi_def_cfa_offset 8
 3669              		.cfi_offset 7, -8
 3670              		.cfi_offset 14, -4
 3671 1232 82B0     		sub	sp, sp, #8
 3672              		.cfi_def_cfa_offset 16
 3673 1234 00AF     		add	r7, sp, #0
 3674              		.cfi_def_cfa_register 7
1075:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t rxbyte;
1076:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t returnVal;
1077:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1078:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     returnVal = 0;
 3675              		.loc 1 1078 0
 3676 1236 0023     		movs	r3, #0
 3677 1238 FB71     		strb	r3, [r7, #7]
1079:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1080:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // read byte just received
1081:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     rxbyte = uart_readByte();
 3678              		.loc 1 1081 0
 3679 123a FFF7FEFF 		bl	uart_readByte
 3680 123e 0346     		mov	r3, r0
 3681 1240 BB71     		strb	r3, [r7, #6]
1082:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1083:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (
1084:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==FALSE  &&
 3682              		.loc 1 1084 0
 3683 1242 314B     		ldr	r3, .L216
 3684 1244 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
 3685 1248 83F00103 		eor	r3, r3, #1
 3686 124c DBB2     		uxtb	r3, r3
1083:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==FALSE  &&
 3687              		.loc 1 1083 0
 3688 124e 002B     		cmp	r3, #0
 3689 1250 12D0     		beq	.L210
1085:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcLastRxByte==HDLC_FLAG &&
 3690              		.loc 1 1085 0
 3691 1252 2D4B     		ldr	r3, .L216
 3692 1254 93F8D330 		ldrb	r3, [r3, #211]	@ zero_extendqisi2
1084:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcLastRxByte==HDLC_FLAG &&
 3693              		.loc 1 1084 0
 3694 1258 7E2B     		cmp	r3, #126
 3695 125a 0DD1     		bne	.L210
 3696              		.loc 1 1085 0
 3697 125c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3698 125e 7E2B     		cmp	r3, #126
 3699 1260 0AD0     		beq	.L210
1086:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         rxbyte!=HDLC_FLAG
1087:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ) {
1088:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // start of frame
1089:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1090:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // I'm now receiving
1091:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving         = TRUE;
 3700              		.loc 1 1091 0
 3701 1262 294B     		ldr	r3, .L216
 3702 1264 0122     		movs	r2, #1
 3703 1266 83F8D420 		strb	r2, [r3, #212]
1092:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1093:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // create the HDLC frame
1094:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcOpen();
 3704              		.loc 1 1094 0
 3705 126a FFF7FEFF 		bl	inputHdlcOpen
1095:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1096:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // add the byte just received
1097:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcWrite(rxbyte);
 3706              		.loc 1 1097 0
 3707 126e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3708 1270 1846     		mov	r0, r3
 3709 1272 FFF7FEFF 		bl	inputHdlcWrite
 3710 1276 3EE0     		b	.L211
 3711              	.L210:
1098:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (
1099:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==TRUE   &&
 3712              		.loc 1 1099 0
 3713 1278 234B     		ldr	r3, .L216
 3714 127a 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
1098:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (
 3715              		.loc 1 1098 0
 3716 127e 002B     		cmp	r3, #0
 3717 1280 19D0     		beq	.L212
 3718              		.loc 1 1099 0
 3719 1282 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3720 1284 7E2B     		cmp	r3, #126
 3721 1286 16D0     		beq	.L212
1100:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         rxbyte!=HDLC_FLAG
1101:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ) {
1102:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // middle of frame
1103:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1104:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // add the byte just received
1105:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcWrite(rxbyte);
 3722              		.loc 1 1105 0
 3723 1288 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3724 128a 1846     		mov	r0, r3
 3725 128c FFF7FEFF 		bl	inputHdlcWrite
1106:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.inputBufFillLevel+1>SERIAL_INPUT_BUFFER_SIZE){
 3726              		.loc 1 1106 0
 3727 1290 1D4B     		ldr	r3, .L216
 3728 1292 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3729 1296 0133     		adds	r3, r3, #1
 3730 1298 C82B     		cmp	r3, #200
 3731 129a 2CDD     		ble	.L211
1107:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // push task
1108:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             scheduler_push_task(task_printInputBufferOverflow,TASKPRIO_OPENSERIAL);
 3732              		.loc 1 1108 0
 3733 129c 0E21     		movs	r1, #14
 3734 129e 1B48     		ldr	r0, .L216+4
 3735 12a0 FFF7FEFF 		bl	scheduler_push_task
1109:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.inputBufFillLevel      = 0;
 3736              		.loc 1 1109 0
 3737 12a4 184B     		ldr	r3, .L216
 3738 12a6 0022     		movs	r2, #0
 3739 12a8 83F8D220 		strb	r2, [r3, #210]
1110:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.hdlcBusyReceiving      = FALSE;
 3740              		.loc 1 1110 0
 3741 12ac 164B     		ldr	r3, .L216
 3742 12ae 0022     		movs	r2, #0
 3743 12b0 83F8D420 		strb	r2, [r3, #212]
1106:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // push task
 3744              		.loc 1 1106 0
 3745 12b4 1FE0     		b	.L211
 3746              	.L212:
1111:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1112:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (
1113:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==TRUE   &&
 3747              		.loc 1 1113 0
 3748 12b6 144B     		ldr	r3, .L216
 3749 12b8 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
1112:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==TRUE   &&
 3750              		.loc 1 1112 0
 3751 12bc 002B     		cmp	r3, #0
 3752 12be 1AD0     		beq	.L211
 3753              		.loc 1 1113 0
 3754 12c0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3755 12c2 7E2B     		cmp	r3, #126
 3756 12c4 17D1     		bne	.L211
1114:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         rxbyte==HDLC_FLAG
1115:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ) {
1116:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // end of frame
1117:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1118:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // finalize the HDLC frame
1119:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcClose();
 3757              		.loc 1 1119 0
 3758 12c6 FFF7FEFF 		bl	inputHdlcClose
1120:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving      = FALSE;
 3759              		.loc 1 1120 0
 3760 12ca 0F4B     		ldr	r3, .L216
 3761 12cc 0022     		movs	r2, #0
 3762 12ce 83F8D420 		strb	r2, [r3, #212]
1121:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1122:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.inputBufFillLevel==0){
 3763              		.loc 1 1122 0
 3764 12d2 0D4B     		ldr	r3, .L216
 3765 12d4 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3766 12d8 002B     		cmp	r3, #0
 3767 12da 04D1     		bne	.L214
1123:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // push task
1124:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             scheduler_push_task(task_printWrongCRCInput,TASKPRIO_OPENSERIAL);
 3768              		.loc 1 1124 0
 3769 12dc 0E21     		movs	r1, #14
 3770 12de 0C48     		ldr	r0, .L216+8
 3771 12e0 FFF7FEFF 		bl	scheduler_push_task
 3772 12e4 07E0     		b	.L211
 3773              	.L214:
1125:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
1126:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_handleRxFrame();
 3774              		.loc 1 1126 0
 3775 12e6 FFF7FEFF 		bl	openserial_handleRxFrame
1127:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.inputBufFillLevel = 0;
 3776              		.loc 1 1127 0
 3777 12ea 074B     		ldr	r3, .L216
 3778 12ec 0022     		movs	r2, #0
 3779 12ee 83F8D220 		strb	r2, [r3, #210]
1128:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             returnVal = 1;
 3780              		.loc 1 1128 0
 3781 12f2 0123     		movs	r3, #1
 3782 12f4 FB71     		strb	r3, [r7, #7]
 3783              	.L211:
1129:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1130:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
1131:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1132:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcLastRxByte = rxbyte;
 3784              		.loc 1 1132 0
 3785 12f6 044A     		ldr	r2, .L216
 3786 12f8 BB79     		ldrb	r3, [r7, #6]
 3787 12fa 82F8D330 		strb	r3, [r2, #211]
1133:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1134:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return returnVal;
 3788              		.loc 1 1134 0
 3789 12fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1135:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3790              		.loc 1 1135 0
 3791 1300 1846     		mov	r0, r3
 3792 1302 0837     		adds	r7, r7, #8
 3793              		.cfi_def_cfa_offset 8
 3794 1304 BD46     		mov	sp, r7
 3795              		.cfi_def_cfa_register 13
 3796              		@ sp needed
 3797 1306 80BD     		pop	{r7, pc}
 3798              	.L217:
 3799              		.align	2
 3800              	.L216:
 3801 1308 00000000 		.word	openserial_vars
 3802 130c 00000000 		.word	task_printInputBufferOverflow
 3803 1310 00000000 		.word	task_printWrongCRCInput
 3804              		.cfi_endproc
 3805              	.LFE37:
 3807              	.Letext0:
 3808              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3809              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3810              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3811              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 3812              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3813              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3814              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 3815              		.file 9 "inc/opendefs.h"
 3816              		.file 10 "build\\openmote-cc2538_armgcc\\drivers\\common\\openserial.h"
 3817              		.file 11 "kernel/scheduler.h"
 3818              		.file 12 "drivers\\common/opentimers.h"
 3819              		.file 13 "openstack\\02a-MAClow/IEEE802154E.h"
 3820              		.file 14 "openstack\\03b-IPv6/icmpv6rpl.h"
 3821              		.file 15 "openstack\\cross-layers/idmanager.h"
 3822              		.file 16 "build\\openmote-cc2538_armgcc\\drivers\\common\\openhdlc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 openserial.c
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:44     .rodata:00000030 chTemplate_default
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:64     .rodata:00000040 ebIEsBytestream
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:96     .rodata:0000005c all_routers_multicast
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:116    .rodata:0000006c linklocalprefix
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:128    .rodata:00000074 fcstab
                            *COM*:000004e4 openserial_vars
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:387    .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:394    .text:00000000 openserial_init
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:490    .text:00000098 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3026   .text:00000f54 openserial_debugPrint_timer_cb
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3661   .text:00001230 isr_openserial_rx
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3558   .text:000011a0 isr_openserial_tx
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:497    .text:000000a8 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:504    .text:000000a8 openserial_register
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:537    .text:000000c0 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:541    .text:000000c4 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:548    .text:000000c4 openserial_printStatus
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3098   .text:00000f80 outputHdlcOpen
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3147   .text:00000fbc outputHdlcWrite
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3238   .text:00001044 outputHdlcClose
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1609   .text:00000620 openserial_flush
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:636    .text:0000013a openserial_printInfo
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1842   .text:00000724 openserial_printInfoErrorCritical
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:691    .text:00000174 openserial_printError
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:748    .text:000001b2 new_openserial_printError
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:805    .text:000001f0 openserial_printCritical
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:867    .text:00000248 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3062   .text:00000f6a openserial_board_reset_cb
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:872    .text:00000250 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:879    .text:00000250 openserial_printData
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:985    .text:000002ec openserial_printSniffedPacket
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1073   .text:00000362 openserial_print_uint32_t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1144   .text:000003b4 openserial_print_str
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1254   .text:00000452 task_openserial_debugPrint
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1303   .text:00000494 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1315   .text:000004c4 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1786   .text:000006ec debugPrint_outBufferIndexes
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1464   .text:00000588 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1468   .text:0000058c $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1475   .text:0000058c openserial_getInputBufferFillLevel
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1512   .text:000005b0 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1516   .text:000005b4 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1523   .text:000005b4 openserial_getInputBuffer
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1597   .text:00000618 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1602   .text:00000620 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1693   .text:000006a8 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1697   .text:000006ac $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1704   .text:000006ac openserial_inhibitStart
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1732   .text:000006c4 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1736   .text:000006c8 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1743   .text:000006c8 openserial_inhibitStop
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1775   .text:000006e8 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1779   .text:000006ec $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1831   .text:00000720 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1835   .text:00000724 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1945   .text:000007c0 openserial_handleRxFrame
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1972   .text:000007dc $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:1989   .text:00000820 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2065   .text:00000878 openserial_handleEcho
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2534   .text:00000b84 openserial_handleCommands
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2053   .text:00000870 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2058   .text:00000878 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2105   .text:00000896 openserial_get6pInfo
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2523   .text:00000b80 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2527   .text:00000b84 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2610   .text:00000c18 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2630   .text:00000c68 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2968   .text:00000f14 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:2971   .text:00000f18 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3015   .text:00000f50 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3019   .text:00000f54 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3136   .text:00000fb8 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3140   .text:00000fbc $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3227   .text:00001040 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3231   .text:00001044 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3296   .text:0000109c $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3300   .text:000010a0 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3307   .text:000010a0 inputHdlcOpen
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3339   .text:000010c0 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3343   .text:000010c4 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3350   .text:000010c4 inputHdlcWrite
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3429   .text:0000113c $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3433   .text:00001140 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3440   .text:00001140 inputHdlcClose
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3485   .text:00001174 $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3489   .text:00001178 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3496   .text:00001178 task_printInputBufferOverflow
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3527   .text:0000118c task_printWrongCRCInput
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3650   .text:0000122c $d
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3654   .text:00001230 $t
C:\Users\Lee\AppData\Local\Temp\ccO2Vjom.s:3801   .text:00001308 $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.openserial.h.9.260458e737a777536a57b24eb1863a5f
                           .group:00000000 wm4.scheduler.h.2.eb68556b8ec5a9773a999c64d41ac76c
                           .group:00000000 wm4.opentimers.h.8.eb1cab84a6e82ba9569a1990291c92ba
                           .group:00000000 wm4.schedule.h.2.655275e038307b96d02df4174b9f26be
                           .group:00000000 wm4.IEEE802154E.h.31.0ae4fc33f8fea842f27863b9e73e066e
                           .group:00000000 wm4.icmpv6rpl.h.2.f31802bcce2a0808bf5db39ce34f4322
                           .group:00000000 wm4.neighbors.h.15.7d3ab5965b5b1193d3498491ae404451
                           .group:00000000 wm4.sixtop.h.2.ee4bd0b70b528bdc38891cf2a16bad67
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69
                           .group:00000000 wm4.uart.h.20.8d188df69602f1858db1ebd9c6160fb8
                           .group:00000000 wm4.openhdlc.h.9.2ec935be854fadcc84e19db4fe730cfa
                           .group:00000000 wm4.msf.h.2.f85db7704dc29e6182d0ed30c629097b

UNDEFINED SYMBOLS
memset
opentimers_create
opentimers_scheduleIn
uart_setCallbacks
uart_enableInterrupts
idmanager_getMyID
leds_error_toggle
leds_error_blink
opentimers_getValue
opentimers_scheduleAbsolute
ieee154e_getAsn
IntMasterDisable
IntMasterEnable
debugPrint_isSync
debugPrint_id
debugPrint_myDAGrank
debugPrint_asn
debugPrint_macStats
debugPrint_schedule
debugPrint_backoff
debugPrint_queue
debugPrint_neighbors
debugPrint_kaPeriod
debugPrint_joined
memcpy
uart_setCTS
uart_writeByte
idmanager_triggerAboutRoot
board_reset
openbridge_triggerData
sixtop_setEBPeriod
ieee154e_setSingleChannel
sixtop_setKaPeriod
icmpv6rpl_setDIOPeriod
icmpv6rpl_setDAOPeriod
icmpv6rpl_setMyDAGrank
ieee154e_setIsSecurityEnabled
schedule_setFrameLength
ieee154e_setIsAckEnabled
icmpv6rpl_getPreferredParentEui64
msf_getsfid
sixtop_request
ieee154e_setSlotDuration
sixtop_setIsResponseEnabled
msf_appPktPeriod
icmpv6echo_setIsReplyEnabled
idmanager_setJoinKey
crcIteration
uart_readByte
scheduler_push_task
