   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"openbridge.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	linklocalprefix:
  45 0030 FE       		.byte	-2
  46 0031 80       		.byte	-128
  47 0032 00       		.byte	0
  48 0033 00       		.byte	0
  49 0034 00       		.byte	0
  50 0035 00       		.byte	0
  51 0036 00       		.byte	0
  52 0037 00       		.byte	0
  53              		.text
  54              		.align	1
  55              		.global	openbridge_init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	openbridge_init:
  62              	.LFB3:
  63              		.file 1 "build\\openmote-cc2538_armgcc\\openstack\\03a-IPHC\\openbridge.c"
   1:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "opendefs.h"
   2:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "openbridge.h"
   3:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "openserial.h"
   4:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "packetfunctions.h"
   5:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "iphc.h"
   6:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "idmanager.h"
   7:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** #include "openqueue.h"
   8:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
   9:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** //=========================== variables =======================================
  10:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
  11:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** //=========================== prototypes ======================================
  12:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
  13:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** //=========================== public ==========================================
  14:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
  15:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** void openbridge_init(void) {
  64              		.loc 1 15 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0002 00AF     		add	r7, sp, #0
  73              		.cfi_def_cfa_register 7
  16:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** }
  74              		.loc 1 16 0
  75 0004 00BF     		nop
  76 0006 BD46     		mov	sp, r7
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0008 80BC     		pop	{r7}
  80              		.cfi_restore 7
  81              		.cfi_def_cfa_offset 0
  82 000a 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE3:
  86              		.align	1
  87              		.global	openbridge_triggerData
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	openbridge_triggerData:
  94              	.LFB4:
  17:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
  18:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** void openbridge_triggerData(void) {
  95              		.loc 1 18 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 144
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99 000c 80B5     		push	{r7, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 000e A4B0     		sub	sp, sp, #144
 104              		.cfi_def_cfa_offset 152
 105 0010 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
  19:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    uint8_t           input_buffer[136];//worst case: 8B of next hop + 128B of data
  20:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    OpenQueueEntry_t* pkt;
  21:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    uint8_t           numDataBytes;
  22:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****   
  23:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    numDataBytes = openserial_getInputBufferFillLevel();
 107              		.loc 1 23 0
 108 0012 FFF7FEFF 		bl	openserial_getInputBufferFillLevel
 109 0016 0346     		mov	r3, r0
 110 0018 87F88F30 		strb	r3, [r7, #143]
  24:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****   
  25:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    //poipoi xv
  26:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    //this is a temporal workaround as we are never supposed to get chunks of data
  27:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    //longer than input buffer size.. I assume that HDLC will solve that.
  28:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    // MAC header is 13B + 8 next hop so we cannot accept packets that are longer than 118B
  29:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    if (numDataBytes>(136 - 10/*21*/) || numDataBytes<8){
 111              		.loc 1 29 0
 112 001c 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 113 0020 7E2B     		cmp	r3, #126
 114 0022 03D8     		bhi	.L3
 115              		.loc 1 29 0 is_stmt 0 discriminator 1
 116 0024 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 117 0028 072B     		cmp	r3, #7
 118 002a 08D8     		bhi	.L4
 119              	.L3:
  30:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    //to prevent too short or too long serial frames to kill the stack  
  31:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****        openserial_printError(COMPONENT_OPENBRIDGE,ERR_INPUTBUFFER_LENGTH,
 120              		.loc 1 31 0 is_stmt 1
 121 002c 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 122 0030 9AB2     		uxth	r2, r3
 123 0032 0023     		movs	r3, #0
 124 0034 3521     		movs	r1, #53
 125 0036 1020     		movs	r0, #16
 126 0038 FFF7FEFF 		bl	openserial_printError
  32:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                    (errorparameter_t)numDataBytes,
  33:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                    (errorparameter_t)0);
  34:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****        return;
 127              		.loc 1 34 0
 128 003c 5EE0     		b	.L2
 129              	.L4:
  35:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    }
  36:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****   
  37:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    //copying the buffer once we know it is not too big
  38:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    openserial_getInputBuffer(&(input_buffer[0]),numDataBytes);
 130              		.loc 1 38 0
 131 003e 97F88F20 		ldrb	r2, [r7, #143]	@ zero_extendqisi2
 132 0042 3B46     		mov	r3, r7
 133 0044 1146     		mov	r1, r2
 134 0046 1846     		mov	r0, r3
 135 0048 FFF7FEFF 		bl	openserial_getInputBuffer
  39:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****   
  40:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    if (idmanager_getIsDAGroot()==TRUE && numDataBytes>0) {
 136              		.loc 1 40 0
 137 004c FFF7FEFF 		bl	idmanager_getIsDAGroot
 138 0050 0346     		mov	r3, r0
 139 0052 002B     		cmp	r3, #0
 140 0054 52D0     		beq	.L2
 141              		.loc 1 40 0 is_stmt 0 discriminator 1
 142 0056 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 143 005a 002B     		cmp	r3, #0
 144 005c 4ED0     		beq	.L2
  41:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       pkt = openqueue_getFreePacketBuffer(COMPONENT_OPENBRIDGE);
 145              		.loc 1 41 0 is_stmt 1
 146 005e 1020     		movs	r0, #16
 147 0060 FFF7FEFF 		bl	openqueue_getFreePacketBuffer
 148 0064 C7F88800 		str	r0, [r7, #136]
  42:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       if (pkt==NULL) {
 149              		.loc 1 42 0
 150 0068 D7F88830 		ldr	r3, [r7, #136]
 151 006c 002B     		cmp	r3, #0
 152 006e 06D1     		bne	.L7
  43:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****          openserial_printError(COMPONENT_OPENBRIDGE,ERR_NO_FREE_PACKET_BUFFER,
 153              		.loc 1 43 0
 154 0070 0023     		movs	r3, #0
 155 0072 0022     		movs	r2, #0
 156 0074 2D21     		movs	r1, #45
 157 0076 1020     		movs	r0, #16
 158 0078 FFF7FEFF 		bl	openserial_printError
  44:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                                (errorparameter_t)0,
  45:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                                (errorparameter_t)0);
  46:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****          return;
 159              		.loc 1 46 0
 160 007c 3EE0     		b	.L2
 161              	.L7:
  47:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       }
  48:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       //admin
  49:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       pkt->creator  = COMPONENT_OPENBRIDGE;
 162              		.loc 1 49 0
 163 007e D7F88830 		ldr	r3, [r7, #136]
 164 0082 1022     		movs	r2, #16
 165 0084 1A70     		strb	r2, [r3]
  50:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       pkt->owner    = COMPONENT_OPENBRIDGE;
 166              		.loc 1 50 0
 167 0086 D7F88830 		ldr	r3, [r7, #136]
 168 008a 1022     		movs	r2, #16
 169 008c 5A70     		strb	r2, [r3, #1]
  51:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       //l2
  52:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       pkt->l2_nextORpreviousHop.type = ADDR_64B;
 170              		.loc 1 52 0
 171 008e D7F88830 		ldr	r3, [r7, #136]
 172 0092 0222     		movs	r2, #2
 173 0094 83F84120 		strb	r2, [r3, #65]
  53:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       memcpy(&(pkt->l2_nextORpreviousHop.addr_64b[0]),&(input_buffer[0]),8);
 174              		.loc 1 53 0
 175 0098 D7F88830 		ldr	r3, [r7, #136]
 176 009c 4233     		adds	r3, r3, #66
 177 009e 3946     		mov	r1, r7
 178 00a0 0822     		movs	r2, #8
 179 00a2 1846     		mov	r0, r3
 180 00a4 FFF7FEFF 		bl	memcpy
  54:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       //payload
  55:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       packetfunctions_reserveHeaderSize(pkt,numDataBytes-8);
 181              		.loc 1 55 0
 182 00a8 97F88F30 		ldrb	r3, [r7, #143]
 183 00ac 083B     		subs	r3, r3, #8
 184 00ae DBB2     		uxtb	r3, r3
 185 00b0 1946     		mov	r1, r3
 186 00b2 D7F88800 		ldr	r0, [r7, #136]
 187 00b6 FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  56:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       memcpy(pkt->payload,&(input_buffer[8]),numDataBytes-8);
 188              		.loc 1 56 0
 189 00ba D7F88830 		ldr	r3, [r7, #136]
 190 00be 5868     		ldr	r0, [r3, #4]
 191 00c0 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 192 00c4 083B     		subs	r3, r3, #8
 193 00c6 1A46     		mov	r2, r3
 194 00c8 3B46     		mov	r3, r7
 195 00ca 0833     		adds	r3, r3, #8
 196 00cc 1946     		mov	r1, r3
 197 00ce FFF7FEFF 		bl	memcpy
  57:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       
  58:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       //this is to catch the too short packet. remove it after fw-103 is solved.
  59:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       if (numDataBytes<16){
 198              		.loc 1 59 0
 199 00d2 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 200 00d6 0F2B     		cmp	r3, #15
 201 00d8 05D8     		bhi	.L8
  60:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****               openserial_printError(COMPONENT_OPENBRIDGE,ERR_INVALIDSERIALFRAME,
 202              		.loc 1 60 0
 203 00da 0023     		movs	r3, #0
 204 00dc 0022     		movs	r2, #0
 205 00de 3721     		movs	r1, #55
 206 00e0 1020     		movs	r0, #16
 207 00e2 FFF7FEFF 		bl	openserial_printError
 208              	.L8:
  61:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                             (errorparameter_t)0,
  62:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                             (errorparameter_t)0);
  63:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       }        
  64:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       //send
  65:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       if ((iphc_sendFromBridge(pkt))==E_FAIL) {
 209              		.loc 1 65 0
 210 00e6 D7F88800 		ldr	r0, [r7, #136]
 211 00ea FFF7FEFF 		bl	iphc_sendFromBridge
 212 00ee 0346     		mov	r3, r0
 213 00f0 012B     		cmp	r3, #1
 214 00f2 03D1     		bne	.L2
  66:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****          openqueue_freePacketBuffer(pkt);
 215              		.loc 1 66 0
 216 00f4 D7F88800 		ldr	r0, [r7, #136]
 217 00f8 FFF7FEFF 		bl	openqueue_freePacketBuffer
 218              	.L2:
  67:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       }
  68:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    }
  69:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** }
 219              		.loc 1 69 0
 220 00fc 9037     		adds	r7, r7, #144
 221              		.cfi_def_cfa_offset 8
 222 00fe BD46     		mov	sp, r7
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 0100 80BD     		pop	{r7, pc}
 226              		.cfi_endproc
 227              	.LFE4:
 229              		.align	1
 230              		.global	openbridge_sendDone
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu softvfp
 236              	openbridge_sendDone:
 237              	.LFB5:
  70:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
  71:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** void openbridge_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
 238              		.loc 1 71 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0102 80B5     		push	{r7, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0104 82B0     		sub	sp, sp, #8
 247              		.cfi_def_cfa_offset 16
 248 0106 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0108 7860     		str	r0, [r7, #4]
 251 010a 0B46     		mov	r3, r1
 252 010c FB70     		strb	r3, [r7, #3]
  72:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    msg->owner = COMPONENT_OPENBRIDGE;
 253              		.loc 1 72 0
 254 010e 7B68     		ldr	r3, [r7, #4]
 255 0110 1022     		movs	r2, #16
 256 0112 5A70     		strb	r2, [r3, #1]
  73:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    if (msg->creator!=COMPONENT_OPENBRIDGE) {
 257              		.loc 1 73 0
 258 0114 7B68     		ldr	r3, [r7, #4]
 259 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 0118 102B     		cmp	r3, #16
 261 011a 05D0     		beq	.L11
  74:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****       openserial_printError(COMPONENT_OPENBRIDGE,ERR_UNEXPECTED_SENDDONE,
 262              		.loc 1 74 0
 263 011c 0023     		movs	r3, #0
 264 011e 0022     		movs	r2, #0
 265 0120 2C21     		movs	r1, #44
 266 0122 1020     		movs	r0, #16
 267 0124 FFF7FEFF 		bl	openserial_printError
 268              	.L11:
  75:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                             (errorparameter_t)0,
  76:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****                             (errorparameter_t)0);
  77:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    }
  78:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    openqueue_freePacketBuffer(msg);
 269              		.loc 1 78 0
 270 0128 7868     		ldr	r0, [r7, #4]
 271 012a FFF7FEFF 		bl	openqueue_freePacketBuffer
  79:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** }
 272              		.loc 1 79 0
 273 012e 00BF     		nop
 274 0130 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 0132 BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0134 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE5:
 283              		.align	1
 284              		.global	openbridge_receive
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	openbridge_receive:
 291              	.LFB6:
  80:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** 
  81:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** /**
  82:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** \brief Receive a frame at the openbridge, which sends it out over serial.
  83:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** */
  84:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** void openbridge_receive(OpenQueueEntry_t* msg) {
 292              		.loc 1 84 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0136 90B5     		push	{r4, r7, lr}
 297              		.cfi_def_cfa_offset 12
 298              		.cfi_offset 4, -12
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0138 83B0     		sub	sp, sp, #12
 302              		.cfi_def_cfa_offset 24
 303 013a 00AF     		add	r7, sp, #0
 304              		.cfi_def_cfa_register 7
 305 013c 7860     		str	r0, [r7, #4]
  85:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    
  86:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    // prepend previous hop
  87:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    packetfunctions_reserveHeaderSize(msg,LENGTH_ADDR64b);
 306              		.loc 1 87 0
 307 013e 0821     		movs	r1, #8
 308 0140 7868     		ldr	r0, [r7, #4]
 309 0142 FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  88:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    memcpy(msg->payload,msg->l2_nextORpreviousHop.addr_64b,LENGTH_ADDR64b);
 310              		.loc 1 88 0
 311 0146 7B68     		ldr	r3, [r7, #4]
 312 0148 5868     		ldr	r0, [r3, #4]
 313 014a 7B68     		ldr	r3, [r7, #4]
 314 014c 4233     		adds	r3, r3, #66
 315 014e 0822     		movs	r2, #8
 316 0150 1946     		mov	r1, r3
 317 0152 FFF7FEFF 		bl	memcpy
  89:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    
  90:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    // prepend next hop (me)
  91:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    packetfunctions_reserveHeaderSize(msg,LENGTH_ADDR64b);
 318              		.loc 1 91 0
 319 0156 0821     		movs	r1, #8
 320 0158 7868     		ldr	r0, [r7, #4]
 321 015a FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  92:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    memcpy(msg->payload,idmanager_getMyID(ADDR_64B)->addr_64b,LENGTH_ADDR64b);
 322              		.loc 1 92 0
 323 015e 7B68     		ldr	r3, [r7, #4]
 324 0160 5C68     		ldr	r4, [r3, #4]
 325 0162 0220     		movs	r0, #2
 326 0164 FFF7FEFF 		bl	idmanager_getMyID
 327 0168 0346     		mov	r3, r0
 328 016a 0133     		adds	r3, r3, #1
 329 016c 0822     		movs	r2, #8
 330 016e 1946     		mov	r1, r3
 331 0170 2046     		mov	r0, r4
 332 0172 FFF7FEFF 		bl	memcpy
  93:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    
  94:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    // send packet over serial (will be memcopied into serial buffer)
  95:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    openserial_printData((uint8_t*)(msg->payload),msg->length);
 333              		.loc 1 95 0
 334 0176 7B68     		ldr	r3, [r7, #4]
 335 0178 5A68     		ldr	r2, [r3, #4]
 336 017a 7B68     		ldr	r3, [r7, #4]
 337 017c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 338 017e 1946     		mov	r1, r3
 339 0180 1046     		mov	r0, r2
 340 0182 FFF7FEFF 		bl	openserial_printData
  96:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    
  97:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    // free packet
  98:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c ****    openqueue_freePacketBuffer(msg);
 341              		.loc 1 98 0
 342 0186 7868     		ldr	r0, [r7, #4]
 343 0188 FFF7FEFF 		bl	openqueue_freePacketBuffer
  99:build\openmote-cc2538_armgcc\openstack\03a-IPHC/openbridge.c **** }
 344              		.loc 1 99 0
 345 018c 00BF     		nop
 346 018e 0C37     		adds	r7, r7, #12
 347              		.cfi_def_cfa_offset 12
 348 0190 BD46     		mov	sp, r7
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 0192 90BD     		pop	{r4, r7, pc}
 352              		.cfi_endproc
 353              	.LFE6:
 355              	.Letext0:
 356              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 357              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 358              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 359              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 360              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 361              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 362              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 363              		.file 9 "inc/opendefs.h"
 364              		.file 10 "openstack\\cross-layers/idmanager.h"
DEFINED SYMBOLS
                            *ABS*:00000000 openbridge.c
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:44     .rodata:00000030 linklocalprefix
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:54     .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:61     .text:00000000 openbridge_init
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:93     .text:0000000c openbridge_triggerData
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:236    .text:00000102 openbridge_sendDone
C:\Users\Lee\AppData\Local\Temp\cc3D4xVc.s:290    .text:00000136 openbridge_receive
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.openserial.h.32.441d977a0123852ed1e9b0f7b956952f
                           .group:00000000 wm4.iphc.h.2.9e7d9d56ac728a3c0b3014283a59854e
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69

UNDEFINED SYMBOLS
openserial_getInputBufferFillLevel
openserial_printError
openserial_getInputBuffer
idmanager_getIsDAGroot
openqueue_getFreePacketBuffer
memcpy
packetfunctions_reserveHeaderSize
iphc_sendFromBridge
openqueue_freePacketBuffer
idmanager_getMyID
openserial_printData
