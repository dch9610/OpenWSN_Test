   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"openrandom.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	linklocalprefix:
  45 0030 FE       		.byte	-2
  46 0031 80       		.byte	-128
  47 0032 00       		.byte	0
  48 0033 00       		.byte	0
  49 0034 00       		.byte	0
  50 0035 00       		.byte	0
  51 0036 00       		.byte	0
  52 0037 00       		.byte	0
  53              		.comm	random_vars,2,4
  54              		.text
  55              		.align	1
  56              		.global	openrandom_init
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	openrandom_init:
  63              	.LFB0:
  64              		.file 1 "build\\openmote-cc2538_armgcc\\openstack\\cross-layers\\openrandom.c"
   1:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** #include "opendefs.h"
   2:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** #include "openrandom.h"
   3:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** #include "idmanager.h"
   4:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
   5:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** //=========================== variables =======================================
   6:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
   7:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** random_vars_t random_vars;
   8:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
   9:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** //=========================== prototypes ======================================
  10:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
  11:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** //=========================== public ==========================================
  12:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
  13:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** void openrandom_init(void) {
  65              		.loc 1 13 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 80B5     		push	{r7, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 00AF     		add	r7, sp, #0
  74              		.cfi_def_cfa_register 7
  14:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     // seed the random number generator with the last 2 bytes of the MAC address
  15:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     random_vars.shift_reg  = 0;
  75              		.loc 1 15 0
  76 0004 0E4B     		ldr	r3, .L2
  77 0006 0022     		movs	r2, #0
  78 0008 1A80     		strh	r2, [r3]	@ movhi
  16:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     random_vars.shift_reg += idmanager_getMyID(ADDR_16B)->addr_16b[0]*256;
  79              		.loc 1 16 0
  80 000a 0120     		movs	r0, #1
  81 000c FFF7FEFF 		bl	idmanager_getMyID
  82 0010 0346     		mov	r3, r0
  83 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  84 0014 1902     		lsls	r1, r3, #8
  85 0016 0A4B     		ldr	r3, .L2
  86 0018 1A88     		ldrh	r2, [r3]
  87 001a 8BB2     		uxth	r3, r1
  88 001c 1344     		add	r3, r3, r2
  89 001e 9AB2     		uxth	r2, r3
  90 0020 074B     		ldr	r3, .L2
  91 0022 1A80     		strh	r2, [r3]	@ movhi
  17:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     random_vars.shift_reg += idmanager_getMyID(ADDR_16B)->addr_16b[1];
  92              		.loc 1 17 0
  93 0024 0120     		movs	r0, #1
  94 0026 FFF7FEFF 		bl	idmanager_getMyID
  95 002a 0346     		mov	r3, r0
  96 002c 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
  97 002e 044B     		ldr	r3, .L2
  98 0030 1A88     		ldrh	r2, [r3]
  99 0032 8BB2     		uxth	r3, r1
 100 0034 1344     		add	r3, r3, r2
 101 0036 9AB2     		uxth	r2, r3
 102 0038 014B     		ldr	r3, .L2
 103 003a 1A80     		strh	r2, [r3]	@ movhi
  18:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** }
 104              		.loc 1 18 0
 105 003c 00BF     		nop
 106 003e 80BD     		pop	{r7, pc}
 107              	.L3:
 108              		.align	2
 109              	.L2:
 110 0040 00000000 		.word	random_vars
 111              		.cfi_endproc
 112              	.LFE0:
 114              		.align	1
 115              		.global	openrandom_get16b
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	openrandom_get16b:
 122              	.LFB1:
  19:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
  20:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** uint16_t openrandom_get16b(void) {
 123              		.loc 1 20 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0044 80B4     		push	{r7}
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 7, -4
 131 0046 83B0     		sub	sp, sp, #12
 132              		.cfi_def_cfa_offset 16
 133 0048 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
  21:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     uint8_t  i;
  22:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     uint16_t random_value;
  23:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     random_value = 0;
 135              		.loc 1 23 0
 136 004a 0023     		movs	r3, #0
 137 004c BB80     		strh	r3, [r7, #4]	@ movhi
  24:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     for(i=0;i<16;i++) {
 138              		.loc 1 24 0
 139 004e 0023     		movs	r3, #0
 140 0050 FB71     		strb	r3, [r7, #7]
 141 0052 26E0     		b	.L5
 142              	.L6:
  25:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         // Galois shift register
  26:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         // taps: 16 14 13 11
  27:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         // characteristic polynomial: x^16 + x^14 + x^13 + x^11 + 1
  28:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         random_value          |= (random_vars.shift_reg & 0x01)<<i;
 143              		.loc 1 28 0 discriminator 3
 144 0054 174B     		ldr	r3, .L8
 145 0056 1B88     		ldrh	r3, [r3]
 146 0058 03F00102 		and	r2, r3, #1
 147 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 148 005e 02FA03F3 		lsl	r3, r2, r3
 149 0062 1AB2     		sxth	r2, r3
 150 0064 B7F90430 		ldrsh	r3, [r7, #4]
 151 0068 1343     		orrs	r3, r3, r2
 152 006a 1BB2     		sxth	r3, r3
 153 006c BB80     		strh	r3, [r7, #4]	@ movhi
  29:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         random_vars.shift_reg  = (random_vars.shift_reg>>1)^(-(int16_t)(random_vars.shift_reg & 1)&
 154              		.loc 1 29 0 discriminator 3
 155 006e 114B     		ldr	r3, .L8
 156 0070 1B88     		ldrh	r3, [r3]
 157 0072 5B08     		lsrs	r3, r3, #1
 158 0074 9BB2     		uxth	r3, r3
 159 0076 1AB2     		sxth	r2, r3
 160 0078 0E4B     		ldr	r3, .L8
 161 007a 1B88     		ldrh	r3, [r3]
 162 007c 03F00103 		and	r3, r3, #1
 163 0080 9BB2     		uxth	r3, r3
 164 0082 5B42     		negs	r3, r3
 165 0084 9BB2     		uxth	r3, r3
 166 0086 1BB2     		sxth	r3, r3
 167 0088 23F49743 		bic	r3, r3, #19328
 168 008c 23F07F03 		bic	r3, r3, #127
 169 0090 1BB2     		sxth	r3, r3
 170 0092 5340     		eors	r3, r3, r2
 171 0094 1BB2     		sxth	r3, r3
 172 0096 9AB2     		uxth	r2, r3
 173 0098 064B     		ldr	r3, .L8
 174 009a 1A80     		strh	r2, [r3]	@ movhi
  24:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     for(i=0;i<16;i++) {
 175              		.loc 1 24 0 discriminator 3
 176 009c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 177 009e 0133     		adds	r3, r3, #1
 178 00a0 FB71     		strb	r3, [r7, #7]
 179              	.L5:
  24:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     for(i=0;i<16;i++) {
 180              		.loc 1 24 0 is_stmt 0 discriminator 1
 181 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 182 00a4 0F2B     		cmp	r3, #15
 183 00a6 D5D9     		bls	.L6
  30:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     }
  31:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     return random_value;
 184              		.loc 1 31 0 is_stmt 1
 185 00a8 BB88     		ldrh	r3, [r7, #4]
  32:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** }
 186              		.loc 1 32 0
 187 00aa 1846     		mov	r0, r3
 188 00ac 0C37     		adds	r7, r7, #12
 189              		.cfi_def_cfa_offset 4
 190 00ae BD46     		mov	sp, r7
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 00b0 80BC     		pop	{r7}
 194              		.cfi_restore 7
 195              		.cfi_def_cfa_offset 0
 196 00b2 7047     		bx	lr
 197              	.L9:
 198              		.align	2
 199              	.L8:
 200 00b4 00000000 		.word	random_vars
 201              		.cfi_endproc
 202              	.LFE1:
 204              		.align	1
 205              		.global	openrandom_getRandomizePeriod
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	openrandom_getRandomizePeriod:
 212              	.LFB2:
  33:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** 
  34:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** uint16_t openrandom_getRandomizePeriod(uint16_t period, uint16_t range){
 213              		.loc 1 34 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 00b8 90B5     		push	{r4, r7, lr}
 218              		.cfi_def_cfa_offset 12
 219              		.cfi_offset 4, -12
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 00ba 85B0     		sub	sp, sp, #20
 223              		.cfi_def_cfa_offset 32
 224 00bc 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 226 00be 0346     		mov	r3, r0
 227 00c0 0A46     		mov	r2, r1
 228 00c2 FB80     		strh	r3, [r7, #6]	@ movhi
 229 00c4 1346     		mov	r3, r2	@ movhi
 230 00c6 BB80     		strh	r3, [r7, #4]	@ movhi
  35:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     uint16_t new_period;
  36:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     if (period<range){
 231              		.loc 1 36 0
 232 00c8 FA88     		ldrh	r2, [r7, #6]
 233 00ca BB88     		ldrh	r3, [r7, #4]
 234 00cc 9A42     		cmp	r2, r3
 235 00ce 10D2     		bcs	.L11
  37:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         // randomly choose a new period from [period/2 ... period+period/2]
  38:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         new_period = period/2+openrandom_get16b()%period;
 236              		.loc 1 38 0
 237 00d0 FB88     		ldrh	r3, [r7, #6]
 238 00d2 5B08     		lsrs	r3, r3, #1
 239 00d4 9CB2     		uxth	r4, r3
 240 00d6 FFF7FEFF 		bl	openrandom_get16b
 241 00da 0346     		mov	r3, r0
 242 00dc 1A46     		mov	r2, r3
 243 00de FB88     		ldrh	r3, [r7, #6]
 244 00e0 B2FBF3F1 		udiv	r1, r2, r3
 245 00e4 03FB01F3 		mul	r3, r3, r1
 246 00e8 D31A     		subs	r3, r2, r3
 247 00ea 9BB2     		uxth	r3, r3
 248 00ec 2344     		add	r3, r3, r4
 249 00ee FB81     		strh	r3, [r7, #14]	@ movhi
 250 00f0 12E0     		b	.L12
 251              	.L11:
  39:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     } else {
  40:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****         new_period = period-range/2+openrandom_get16b()%range;
 252              		.loc 1 40 0
 253 00f2 BB88     		ldrh	r3, [r7, #4]
 254 00f4 5B08     		lsrs	r3, r3, #1
 255 00f6 9BB2     		uxth	r3, r3
 256 00f8 FA88     		ldrh	r2, [r7, #6]	@ movhi
 257 00fa D31A     		subs	r3, r2, r3
 258 00fc 9CB2     		uxth	r4, r3
 259 00fe FFF7FEFF 		bl	openrandom_get16b
 260 0102 0346     		mov	r3, r0
 261 0104 1A46     		mov	r2, r3
 262 0106 BB88     		ldrh	r3, [r7, #4]
 263 0108 B2FBF3F1 		udiv	r1, r2, r3
 264 010c 03FB01F3 		mul	r3, r3, r1
 265 0110 D31A     		subs	r3, r2, r3
 266 0112 9BB2     		uxth	r3, r3
 267 0114 2344     		add	r3, r3, r4
 268 0116 FB81     		strh	r3, [r7, #14]	@ movhi
 269              	.L12:
  41:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     }
  42:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c ****     return new_period;
 270              		.loc 1 42 0
 271 0118 FB89     		ldrh	r3, [r7, #14]
  43:build\openmote-cc2538_armgcc\openstack\cross-layers/openrandom.c **** }
 272              		.loc 1 43 0
 273 011a 1846     		mov	r0, r3
 274 011c 1437     		adds	r7, r7, #20
 275              		.cfi_def_cfa_offset 12
 276 011e BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0120 90BD     		pop	{r4, r7, pc}
 280              		.cfi_endproc
 281              	.LFE2:
 283              	.Letext0:
 284              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 285              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 286              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 287              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 288              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 289              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 290              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 291              		.file 9 "inc/opendefs.h"
 292              		.file 10 "build\\openmote-cc2538_armgcc\\openstack\\cross-layers\\openrandom.h"
 293              		.file 11 "build\\openmote-cc2538_armgcc\\openstack\\cross-layers\\idmanager.h"
DEFINED SYMBOLS
                            *ABS*:00000000 openrandom.c
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:44     .rodata:00000030 linklocalprefix
                            *COM*:00000002 random_vars
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:55     .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:62     .text:00000000 openrandom_init
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:110    .text:00000040 $d
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:114    .text:00000044 $t
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:121    .text:00000044 openrandom_get16b
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:200    .text:000000b4 $d
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:204    .text:000000b8 $t
C:\Users\Lee\AppData\Local\Temp\ccl5Bc4Z.s:211    .text:000000b8 openrandom_getRandomizePeriod
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe

UNDEFINED SYMBOLS
idmanager_getMyID
