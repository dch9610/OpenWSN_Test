   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"idmanager.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	linklocalprefix:
  45 0030 FE       		.byte	-2
  46 0031 80       		.byte	-128
  47 0032 00       		.byte	0
  48 0033 00       		.byte	0
  49 0034 00       		.byte	0
  50 0035 00       		.byte	0
  51 0036 00       		.byte	0
  52 0037 00       		.byte	0
  53              		.align	2
  56              	all_routers_multicast:
  57 0038 FF       		.byte	-1
  58 0039 02       		.byte	2
  59 003a 00       		.byte	0
  60 003b 00       		.byte	0
  61 003c 00       		.byte	0
  62 003d 00       		.byte	0
  63 003e 00       		.byte	0
  64 003f 00       		.byte	0
  65 0040 00       		.byte	0
  66 0041 00       		.byte	0
  67 0042 00       		.byte	0
  68 0043 00       		.byte	0
  69 0044 00       		.byte	0
  70 0045 00       		.byte	0
  71 0046 00       		.byte	0
  72 0047 1A       		.byte	26
  73              		.comm	idmanager_vars,91,4
  74              		.text
  75              		.align	1
  76              		.global	idmanager_init
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu softvfp
  82              	idmanager_init:
  83              	.LFB3:
  84              		.file 1 "build\\openmote-cc2538_armgcc\\openstack\\cross-layers\\idmanager.c"
   1:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "opendefs.h"
   2:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "idmanager.h"
   3:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "eui64.h"
   4:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "packetfunctions.h"
   5:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "openserial.h"
   6:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "neighbors.h"
   7:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "schedule.h"
   8:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "IEEE802154_security.h"
   9:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** // telosb needs debugpins to indicate the ISR activity
  10:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #include "debugpins.h"
  11:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  12:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** //=========================== variables =======================================
  13:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  14:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** idmanager_vars_t idmanager_vars;
  15:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  16:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** //=========================== prototypes ======================================
  17:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  18:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** //=========================== public ==========================================
  19:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  20:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** void idmanager_init(void) {
  85              		.loc 1 20 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 80B5     		push	{r7, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  21:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  22:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // reset local variables
  23:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memset(&idmanager_vars, 0, sizeof(idmanager_vars_t));
  95              		.loc 1 23 0
  96 0004 5B22     		movs	r2, #91
  97 0006 0021     		movs	r1, #0
  98 0008 2148     		ldr	r0, .L2
  99 000a FFF7FEFF 		bl	memset
  24:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // this is used to not wakeup in non-activeslot
  25:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.slotSkip             = FALSE;
 100              		.loc 1 25 0
 101 000e 204B     		ldr	r3, .L2
 102 0010 0022     		movs	r2, #0
 103 0012 83F84520 		strb	r2, [r3, #69]
  26:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  27:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // isDAGroot
  28:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #ifdef DAGROOT
  29:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.isDAGroot            = TRUE;
  30:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #else
  31:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.isDAGroot            = FALSE;
 104              		.loc 1 31 0
 105 0016 1E4B     		ldr	r3, .L2
 106 0018 0022     		movs	r2, #0
 107 001a 1A70     		strb	r2, [r3]
  32:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #endif
  33:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  34:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // myPANID
  35:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPANID.type         = ADDR_PANID;
 108              		.loc 1 35 0
 109 001c 1C4B     		ldr	r3, .L2
 110 001e 0422     		movs	r2, #4
 111 0020 5A70     		strb	r2, [r3, #1]
  36:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #ifdef PANID_DEFINED
  37:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPANID.panid[0]     = PANID_DEFINED & 0x00ff;
  38:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPANID.panid[1]     =(PANID_DEFINED & 0xff00)>>8;
  39:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #else
  40:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPANID.panid[0]     = 0xca;
 112              		.loc 1 40 0
 113 0022 1B4B     		ldr	r3, .L2
 114 0024 CA22     		movs	r2, #202
 115 0026 9A70     		strb	r2, [r3, #2]
  41:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPANID.panid[1]     = 0xfe;
 116              		.loc 1 41 0
 117 0028 194B     		ldr	r3, .L2
 118 002a FE22     		movs	r2, #254
 119 002c DA70     		strb	r2, [r3, #3]
  42:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #endif
  43:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // myPrefix
  44:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.type        = ADDR_PREFIX;
 120              		.loc 1 44 0
 121 002e 184B     		ldr	r3, .L2
 122 0030 0522     		movs	r2, #5
 123 0032 83F83420 		strb	r2, [r3, #52]
  45:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #ifdef DAGROOT
  46:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[0]   = 0xbb;
  47:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[1]   = 0xbb;
  48:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[2]   = 0x00;
  49:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[3]   = 0x00;
  50:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[4]   = 0x00;
  51:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[5]   = 0x00;
  52:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[6]   = 0x00;
  53:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[7]   = 0x00;
  54:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #else
  55:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // set prefix to link-local
  56:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[0]   = 0xfe;
 124              		.loc 1 56 0
 125 0036 164B     		ldr	r3, .L2
 126 0038 FE22     		movs	r2, #254
 127 003a 83F83520 		strb	r2, [r3, #53]
  57:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[1]   = 0x80;
 128              		.loc 1 57 0
 129 003e 144B     		ldr	r3, .L2
 130 0040 8022     		movs	r2, #128
 131 0042 83F83620 		strb	r2, [r3, #54]
  58:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[2]   = 0x00;
 132              		.loc 1 58 0
 133 0046 124B     		ldr	r3, .L2
 134 0048 0022     		movs	r2, #0
 135 004a 83F83720 		strb	r2, [r3, #55]
  59:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[3]   = 0x00;
 136              		.loc 1 59 0
 137 004e 104B     		ldr	r3, .L2
 138 0050 0022     		movs	r2, #0
 139 0052 83F83820 		strb	r2, [r3, #56]
  60:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[4]   = 0x00;
 140              		.loc 1 60 0
 141 0056 0E4B     		ldr	r3, .L2
 142 0058 0022     		movs	r2, #0
 143 005a 83F83920 		strb	r2, [r3, #57]
  61:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[5]   = 0x00;
 144              		.loc 1 61 0
 145 005e 0C4B     		ldr	r3, .L2
 146 0060 0022     		movs	r2, #0
 147 0062 83F83A20 		strb	r2, [r3, #58]
  62:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[6]   = 0x00;
 148              		.loc 1 62 0
 149 0066 0A4B     		ldr	r3, .L2
 150 0068 0022     		movs	r2, #0
 151 006a 83F83B20 		strb	r2, [r3, #59]
  63:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.myPrefix.prefix[7]   = 0x00;
 152              		.loc 1 63 0
 153 006e 084B     		ldr	r3, .L2
 154 0070 0022     		movs	r2, #0
 155 0072 83F83C20 		strb	r2, [r3, #60]
  64:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** #endif
  65:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  66:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // my64bID
  67:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.my64bID.type         = ADDR_64B;
 156              		.loc 1 67 0
 157 0076 064B     		ldr	r3, .L2
 158 0078 0222     		movs	r2, #2
 159 007a 83F82320 		strb	r2, [r3, #35]
  68:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    eui64_get(idmanager_vars.my64bID.addr_64b);
 160              		.loc 1 68 0
 161 007e 0548     		ldr	r0, .L2+4
 162 0080 FFF7FEFF 		bl	eui64_get
  69:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  70:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // my16bID
  71:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    packetfunctions_mac64bToMac16b(&idmanager_vars.my64bID,&idmanager_vars.my16bID);
 163              		.loc 1 71 0
 164 0084 0449     		ldr	r1, .L2+8
 165 0086 0548     		ldr	r0, .L2+12
 166 0088 FFF7FEFF 		bl	packetfunctions_mac64bToMac16b
  72:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 167              		.loc 1 72 0
 168 008c 00BF     		nop
 169 008e 80BD     		pop	{r7, pc}
 170              	.L3:
 171              		.align	2
 172              	.L2:
 173 0090 00000000 		.word	idmanager_vars
 174 0094 24000000 		.word	idmanager_vars+36
 175 0098 12000000 		.word	idmanager_vars+18
 176 009c 23000000 		.word	idmanager_vars+35
 177              		.cfi_endproc
 178              	.LFE3:
 180              		.align	1
 181              		.global	idmanager_getIsDAGroot
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu softvfp
 187              	idmanager_getIsDAGroot:
 188              	.LFB4:
  73:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  74:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** bool idmanager_getIsDAGroot(void) {
 189              		.loc 1 74 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 00a0 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 00a2 82B0     		sub	sp, sp, #8
 198              		.cfi_def_cfa_offset 16
 199 00a4 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  75:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    bool res;
  76:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    INTERRUPT_DECLARATION();
  77:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  78:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    DISABLE_INTERRUPTS();
 201              		.loc 1 78 0
 202 00a6 FFF7FEFF 		bl	IntMasterDisable
  79:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    res=idmanager_vars.isDAGroot;
 203              		.loc 1 79 0
 204 00aa 054B     		ldr	r3, .L6
 205 00ac 1B78     		ldrb	r3, [r3]
 206 00ae FB71     		strb	r3, [r7, #7]
  80:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    ENABLE_INTERRUPTS();
 207              		.loc 1 80 0
 208 00b0 FFF7FEFF 		bl	IntMasterEnable
  81:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return res;
 209              		.loc 1 81 0
 210 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  82:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 211              		.loc 1 82 0
 212 00b6 1846     		mov	r0, r3
 213 00b8 0837     		adds	r7, r7, #8
 214              		.cfi_def_cfa_offset 8
 215 00ba BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 00bc 80BD     		pop	{r7, pc}
 219              	.L7:
 220 00be 00BF     		.align	2
 221              	.L6:
 222 00c0 00000000 		.word	idmanager_vars
 223              		.cfi_endproc
 224              	.LFE4:
 226              		.align	1
 227              		.global	idmanager_setIsDAGroot
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu softvfp
 233              	idmanager_setIsDAGroot:
 234              	.LFB5:
  83:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  84:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** void idmanager_setIsDAGroot(bool newRole) {
 235              		.loc 1 84 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 8
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239 00c4 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 00c6 82B0     		sub	sp, sp, #8
 244              		.cfi_def_cfa_offset 16
 245 00c8 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247 00ca 0346     		mov	r3, r0
 248 00cc FB71     		strb	r3, [r7, #7]
  85:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    INTERRUPT_DECLARATION();
  86:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    DISABLE_INTERRUPTS();
 249              		.loc 1 86 0
 250 00ce FFF7FEFF 		bl	IntMasterDisable
  87:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_vars.isDAGroot = newRole;
 251              		.loc 1 87 0
 252 00d2 064A     		ldr	r2, .L9
 253 00d4 FB79     		ldrb	r3, [r7, #7]
 254 00d6 1370     		strb	r3, [r2]
  88:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    icmpv6rpl_updateMyDAGrankAndParentSelection();
 255              		.loc 1 88 0
 256 00d8 FFF7FEFF 		bl	icmpv6rpl_updateMyDAGrankAndParentSelection
  89:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    schedule_startDAGroot();
 257              		.loc 1 89 0
 258 00dc FFF7FEFF 		bl	schedule_startDAGroot
  90:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    ENABLE_INTERRUPTS();
 259              		.loc 1 90 0
 260 00e0 FFF7FEFF 		bl	IntMasterEnable
  91:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 261              		.loc 1 91 0
 262 00e4 00BF     		nop
 263 00e6 0837     		adds	r7, r7, #8
 264              		.cfi_def_cfa_offset 8
 265 00e8 BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 00ea 80BD     		pop	{r7, pc}
 269              	.L10:
 270              		.align	2
 271              	.L9:
 272 00ec 00000000 		.word	idmanager_vars
 273              		.cfi_endproc
 274              	.LFE5:
 276              		.align	1
 277              		.global	idmanager_getIsSlotSkip
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu softvfp
 283              	idmanager_getIsSlotSkip:
 284              	.LFB6:
  92:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  93:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** bool idmanager_getIsSlotSkip(void) {
 285              		.loc 1 93 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 8
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289 00f0 80B5     		push	{r7, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 00f2 82B0     		sub	sp, sp, #8
 294              		.cfi_def_cfa_offset 16
 295 00f4 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
  94:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    bool res;
  95:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    INTERRUPT_DECLARATION();
  96:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
  97:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    DISABLE_INTERRUPTS();
 297              		.loc 1 97 0
 298 00f6 FFF7FEFF 		bl	IntMasterDisable
  98:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    res=idmanager_vars.slotSkip;
 299              		.loc 1 98 0
 300 00fa 054B     		ldr	r3, .L13
 301 00fc 93F84530 		ldrb	r3, [r3, #69]
 302 0100 FB71     		strb	r3, [r7, #7]
  99:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    ENABLE_INTERRUPTS();
 303              		.loc 1 99 0
 304 0102 FFF7FEFF 		bl	IntMasterEnable
 100:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return res;
 305              		.loc 1 100 0
 306 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 101:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 307              		.loc 1 101 0
 308 0108 1846     		mov	r0, r3
 309 010a 0837     		adds	r7, r7, #8
 310              		.cfi_def_cfa_offset 8
 311 010c BD46     		mov	sp, r7
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 010e 80BD     		pop	{r7, pc}
 315              	.L14:
 316              		.align	2
 317              	.L13:
 318 0110 00000000 		.word	idmanager_vars
 319              		.cfi_endproc
 320              	.LFE6:
 322              		.align	1
 323              		.global	idmanager_getMyID
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu softvfp
 329              	idmanager_getMyID:
 330              	.LFB7:
 102:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 103:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** open_addr_t* idmanager_getMyID(uint8_t type) {
 331              		.loc 1 103 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 16
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0114 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0116 84B0     		sub	sp, sp, #16
 340              		.cfi_def_cfa_offset 24
 341 0118 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 011a 0346     		mov	r3, r0
 344 011c FB71     		strb	r3, [r7, #7]
 104:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    open_addr_t* res;
 105:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    INTERRUPT_DECLARATION();
 106:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    DISABLE_INTERRUPTS();
 345              		.loc 1 106 0
 346 011e FFF7FEFF 		bl	IntMasterDisable
 107:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    switch (type) {
 347              		.loc 1 107 0
 348 0122 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 349 0124 013B     		subs	r3, r3, #1
 350 0126 042B     		cmp	r3, #4
 351 0128 18D8     		bhi	.L16
 352 012a 01A2     		adr	r2, .L18
 353 012c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 354              		.p2align 2
 355              	.L18:
 356 0130 45010000 		.word	.L17+1
 357 0134 4B010000 		.word	.L19+1
 358 0138 5D010000 		.word	.L16+1
 359 013c 51010000 		.word	.L20+1
 360 0140 57010000 		.word	.L21+1
 361              		.p2align 1
 362              	.L17:
 108:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_16B:
 109:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= &idmanager_vars.my16bID;
 363              		.loc 1 109 0
 364 0144 0E4B     		ldr	r3, .L24
 365 0146 FB60     		str	r3, [r7, #12]
 110:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 366              		.loc 1 110 0
 367 0148 12E0     		b	.L22
 368              	.L19:
 111:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_64B:
 112:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= &idmanager_vars.my64bID;
 369              		.loc 1 112 0
 370 014a 0E4B     		ldr	r3, .L24+4
 371 014c FB60     		str	r3, [r7, #12]
 113:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 372              		.loc 1 113 0
 373 014e 0FE0     		b	.L22
 374              	.L20:
 114:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_PANID:
 115:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= &idmanager_vars.myPANID;
 375              		.loc 1 115 0
 376 0150 0D4B     		ldr	r3, .L24+8
 377 0152 FB60     		str	r3, [r7, #12]
 116:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 378              		.loc 1 116 0
 379 0154 0CE0     		b	.L22
 380              	.L21:
 117:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_PREFIX:
 118:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= &idmanager_vars.myPrefix;
 381              		.loc 1 118 0
 382 0156 0D4B     		ldr	r3, .L24+12
 383 0158 FB60     		str	r3, [r7, #12]
 119:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 384              		.loc 1 119 0
 385 015a 09E0     		b	.L22
 386              	.L16:
 120:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_128B:
 121:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         // you don't ask for my full address, rather for prefix, then 64b
 122:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      default:
 123:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         openserial_printCritical(COMPONENT_IDMANAGER,ERR_WRONG_ADDR_TYPE,
 387              		.loc 1 123 0
 388 015c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 389 015e 9AB2     		uxth	r2, r3
 390 0160 0023     		movs	r3, #0
 391 0162 3221     		movs	r1, #50
 392 0164 0220     		movs	r0, #2
 393 0166 FFF7FEFF 		bl	openserial_printCritical
 124:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)type,
 125:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)0);
 126:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= NULL;
 394              		.loc 1 126 0
 395 016a 0023     		movs	r3, #0
 396 016c FB60     		str	r3, [r7, #12]
 127:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 397              		.loc 1 127 0
 398 016e 00BF     		nop
 399              	.L22:
 128:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    }
 129:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    ENABLE_INTERRUPTS();
 400              		.loc 1 129 0
 401 0170 FFF7FEFF 		bl	IntMasterEnable
 130:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return res;
 402              		.loc 1 130 0
 403 0174 FB68     		ldr	r3, [r7, #12]
 131:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 404              		.loc 1 131 0
 405 0176 1846     		mov	r0, r3
 406 0178 1037     		adds	r7, r7, #16
 407              		.cfi_def_cfa_offset 8
 408 017a BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 017c 80BD     		pop	{r7, pc}
 412              	.L25:
 413 017e 00BF     		.align	2
 414              	.L24:
 415 0180 12000000 		.word	idmanager_vars+18
 416 0184 23000000 		.word	idmanager_vars+35
 417 0188 01000000 		.word	idmanager_vars+1
 418 018c 34000000 		.word	idmanager_vars+52
 419              		.cfi_endproc
 420              	.LFE7:
 422              		.align	1
 423              		.global	idmanager_setMyID
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu softvfp
 429              	idmanager_setMyID:
 430              	.LFB8:
 132:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 133:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** owerror_t idmanager_setMyID(open_addr_t* newID) {
 431              		.loc 1 133 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435 0190 B0B5     		push	{r4, r5, r7, lr}
 436              		.cfi_def_cfa_offset 16
 437              		.cfi_offset 4, -16
 438              		.cfi_offset 5, -12
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
 441 0192 82B0     		sub	sp, sp, #8
 442              		.cfi_def_cfa_offset 24
 443 0194 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 445 0196 7860     		str	r0, [r7, #4]
 134:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    INTERRUPT_DECLARATION();
 135:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    DISABLE_INTERRUPTS();
 446              		.loc 1 135 0
 447 0198 FFF7FEFF 		bl	IntMasterDisable
 136:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    switch (newID->type) {
 448              		.loc 1 136 0
 449 019c 7B68     		ldr	r3, [r7, #4]
 450 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 01a0 013B     		subs	r3, r3, #1
 452 01a2 042B     		cmp	r3, #4
 453 01a4 44D8     		bhi	.L27
 454 01a6 01A2     		adr	r2, .L29
 455 01a8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 456              		.p2align 2
 457              	.L29:
 458 01ac C1010000 		.word	.L28+1
 459 01b0 DD010000 		.word	.L30+1
 460 01b4 31020000 		.word	.L27+1
 461 01b8 F9010000 		.word	.L31+1
 462 01bc 15020000 		.word	.L32+1
 463              		.p2align 1
 464              	.L28:
 137:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_16B:
 138:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         memcpy(&idmanager_vars.my16bID,newID,sizeof(open_addr_t));
 465              		.loc 1 138 0
 466 01c0 254B     		ldr	r3, .L35
 467 01c2 7A68     		ldr	r2, [r7, #4]
 468 01c4 1233     		adds	r3, r3, #18
 469 01c6 1568     		ldr	r5, [r2]	@ unaligned
 470 01c8 5468     		ldr	r4, [r2, #4]	@ unaligned
 471 01ca 9068     		ldr	r0, [r2, #8]	@ unaligned
 472 01cc D168     		ldr	r1, [r2, #12]	@ unaligned
 473 01ce 1D60     		str	r5, [r3]	@ unaligned
 474 01d0 5C60     		str	r4, [r3, #4]	@ unaligned
 475 01d2 9860     		str	r0, [r3, #8]	@ unaligned
 476 01d4 D960     		str	r1, [r3, #12]	@ unaligned
 477 01d6 127C     		ldrb	r2, [r2, #16]
 478 01d8 1A74     		strb	r2, [r3, #16]
 139:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 479              		.loc 1 139 0
 480 01da 35E0     		b	.L33
 481              	.L30:
 140:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_64B:
 141:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         memcpy(&idmanager_vars.my64bID,newID,sizeof(open_addr_t));
 482              		.loc 1 141 0
 483 01dc 1E4B     		ldr	r3, .L35
 484 01de 7A68     		ldr	r2, [r7, #4]
 485 01e0 2333     		adds	r3, r3, #35
 486 01e2 1568     		ldr	r5, [r2]	@ unaligned
 487 01e4 5468     		ldr	r4, [r2, #4]	@ unaligned
 488 01e6 9068     		ldr	r0, [r2, #8]	@ unaligned
 489 01e8 D168     		ldr	r1, [r2, #12]	@ unaligned
 490 01ea 1D60     		str	r5, [r3]	@ unaligned
 491 01ec 5C60     		str	r4, [r3, #4]	@ unaligned
 492 01ee 9860     		str	r0, [r3, #8]	@ unaligned
 493 01f0 D960     		str	r1, [r3, #12]	@ unaligned
 494 01f2 127C     		ldrb	r2, [r2, #16]
 495 01f4 1A74     		strb	r2, [r3, #16]
 142:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 496              		.loc 1 142 0
 497 01f6 27E0     		b	.L33
 498              	.L31:
 143:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_PANID:
 144:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         memcpy(&idmanager_vars.myPANID,newID,sizeof(open_addr_t));
 499              		.loc 1 144 0
 500 01f8 174B     		ldr	r3, .L35
 501 01fa 7A68     		ldr	r2, [r7, #4]
 502 01fc 0133     		adds	r3, r3, #1
 503 01fe 1568     		ldr	r5, [r2]	@ unaligned
 504 0200 5468     		ldr	r4, [r2, #4]	@ unaligned
 505 0202 9068     		ldr	r0, [r2, #8]	@ unaligned
 506 0204 D168     		ldr	r1, [r2, #12]	@ unaligned
 507 0206 1D60     		str	r5, [r3]	@ unaligned
 508 0208 5C60     		str	r4, [r3, #4]	@ unaligned
 509 020a 9860     		str	r0, [r3, #8]	@ unaligned
 510 020c D960     		str	r1, [r3, #12]	@ unaligned
 511 020e 127C     		ldrb	r2, [r2, #16]
 512 0210 1A74     		strb	r2, [r3, #16]
 145:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 513              		.loc 1 145 0
 514 0212 19E0     		b	.L33
 515              	.L32:
 146:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_PREFIX:
 147:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         memcpy(&idmanager_vars.myPrefix,newID,sizeof(open_addr_t));
 516              		.loc 1 147 0
 517 0214 104B     		ldr	r3, .L35
 518 0216 7A68     		ldr	r2, [r7, #4]
 519 0218 3433     		adds	r3, r3, #52
 520 021a 1568     		ldr	r5, [r2]	@ unaligned
 521 021c 5468     		ldr	r4, [r2, #4]	@ unaligned
 522 021e 9068     		ldr	r0, [r2, #8]	@ unaligned
 523 0220 D168     		ldr	r1, [r2, #12]	@ unaligned
 524 0222 1D60     		str	r5, [r3]	@ unaligned
 525 0224 5C60     		str	r4, [r3, #4]	@ unaligned
 526 0226 9860     		str	r0, [r3, #8]	@ unaligned
 527 0228 D960     		str	r1, [r3, #12]	@ unaligned
 528 022a 127C     		ldrb	r2, [r2, #16]
 529 022c 1A74     		strb	r2, [r3, #16]
 148:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 530              		.loc 1 148 0
 531 022e 0BE0     		b	.L33
 532              	.L27:
 149:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_128B:
 150:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         //don't set 128b, but rather prefix and 64b
 151:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      default:
 152:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         openserial_printCritical(COMPONENT_IDMANAGER,ERR_WRONG_ADDR_TYPE,
 153:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)newID->type,
 533              		.loc 1 153 0
 534 0230 7B68     		ldr	r3, [r7, #4]
 535 0232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 152:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)newID->type,
 536              		.loc 1 152 0
 537 0234 9AB2     		uxth	r2, r3
 538 0236 0123     		movs	r3, #1
 539 0238 3221     		movs	r1, #50
 540 023a 0220     		movs	r0, #2
 541 023c FFF7FEFF 		bl	openserial_printCritical
 154:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)1);
 155:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 542              		.loc 1 155 0
 543 0240 FFF7FEFF 		bl	IntMasterEnable
 156:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return E_FAIL;
 544              		.loc 1 156 0
 545 0244 0123     		movs	r3, #1
 546 0246 02E0     		b	.L34
 547              	.L33:
 157:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    }
 158:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    ENABLE_INTERRUPTS();
 548              		.loc 1 158 0
 549 0248 FFF7FEFF 		bl	IntMasterEnable
 159:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return E_SUCCESS;
 550              		.loc 1 159 0
 551 024c 0023     		movs	r3, #0
 552              	.L34:
 160:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 553              		.loc 1 160 0
 554 024e 1846     		mov	r0, r3
 555 0250 0837     		adds	r7, r7, #8
 556              		.cfi_def_cfa_offset 16
 557 0252 BD46     		mov	sp, r7
 558              		.cfi_def_cfa_register 13
 559              		@ sp needed
 560 0254 B0BD     		pop	{r4, r5, r7, pc}
 561              	.L36:
 562 0256 00BF     		.align	2
 563              	.L35:
 564 0258 00000000 		.word	idmanager_vars
 565              		.cfi_endproc
 566              	.LFE8:
 568              		.align	1
 569              		.global	idmanager_isMyAddress
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu softvfp
 575              	idmanager_isMyAddress:
 576              	.LFB9:
 161:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 162:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** bool idmanager_isMyAddress(open_addr_t* addr) {
 577              		.loc 1 162 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 32
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 025c 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 025e 88B0     		sub	sp, sp, #32
 586              		.cfi_def_cfa_offset 40
 587 0260 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0262 7860     		str	r0, [r7, #4]
 163:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    open_addr_t temp_my128bID;
 164:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    bool res;
 165:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    INTERRUPT_DECLARATION();
 166:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    DISABLE_INTERRUPTS();
 590              		.loc 1 166 0
 591 0264 FFF7FEFF 		bl	IntMasterDisable
 167:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 168:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    switch (addr->type) {
 592              		.loc 1 168 0
 593 0268 7B68     		ldr	r3, [r7, #4]
 594 026a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 595 026c 013B     		subs	r3, r3, #1
 596 026e 042B     		cmp	r3, #4
 597 0270 52D8     		bhi	.L38
 598 0272 01A2     		adr	r2, .L40
 599 0274 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 600              		.p2align 2
 601              	.L40:
 602 0278 8D020000 		.word	.L39+1
 603 027c A1020000 		.word	.L41+1
 604 0280 B5020000 		.word	.L42+1
 605 0284 F1020000 		.word	.L43+1
 606 0288 05030000 		.word	.L44+1
 607              		.p2align 1
 608              	.L39:
 169:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_16B:
 170:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= packetfunctions_sameAddress(addr,&idmanager_vars.my16bID);
 609              		.loc 1 170 0
 610 028c 2A49     		ldr	r1, .L47
 611 028e 7868     		ldr	r0, [r7, #4]
 612 0290 FFF7FEFF 		bl	packetfunctions_sameAddress
 613 0294 0346     		mov	r3, r0
 614 0296 FB77     		strb	r3, [r7, #31]
 171:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 615              		.loc 1 171 0
 616 0298 FFF7FEFF 		bl	IntMasterEnable
 172:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return res;
 617              		.loc 1 172 0
 618 029c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 619 029e 46E0     		b	.L46
 620              	.L41:
 173:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_64B:
 174:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= packetfunctions_sameAddress(addr,&idmanager_vars.my64bID);
 621              		.loc 1 174 0
 622 02a0 2649     		ldr	r1, .L47+4
 623 02a2 7868     		ldr	r0, [r7, #4]
 624 02a4 FFF7FEFF 		bl	packetfunctions_sameAddress
 625 02a8 0346     		mov	r3, r0
 626 02aa FB77     		strb	r3, [r7, #31]
 175:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 627              		.loc 1 175 0
 628 02ac FFF7FEFF 		bl	IntMasterEnable
 176:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return res;
 629              		.loc 1 176 0
 630 02b0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 631 02b2 3CE0     		b	.L46
 632              	.L42:
 177:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_128B:
 178:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         // build temporary my128bID
 179:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         temp_my128bID.type = ADDR_128B;
 633              		.loc 1 179 0
 634 02b4 0323     		movs	r3, #3
 635 02b6 3B73     		strb	r3, [r7, #12]
 180:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         memcpy(&temp_my128bID.addr_128b[0],&idmanager_vars.myPrefix.prefix,8);
 636              		.loc 1 180 0
 637 02b8 214A     		ldr	r2, .L47+8
 638 02ba 07F10D03 		add	r3, r7, #13
 639 02be 3532     		adds	r2, r2, #53
 640 02c0 1168     		ldr	r1, [r2]	@ unaligned
 641 02c2 5268     		ldr	r2, [r2, #4]	@ unaligned
 642 02c4 1960     		str	r1, [r3]	@ unaligned
 643 02c6 5A60     		str	r2, [r3, #4]	@ unaligned
 181:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         memcpy(&temp_my128bID.addr_128b[8],&idmanager_vars.my64bID.addr_64b,8);
 644              		.loc 1 181 0
 645 02c8 1D4A     		ldr	r2, .L47+8
 646 02ca 07F11503 		add	r3, r7, #21
 647 02ce 2432     		adds	r2, r2, #36
 648 02d0 1168     		ldr	r1, [r2]	@ unaligned
 649 02d2 5268     		ldr	r2, [r2, #4]	@ unaligned
 650 02d4 1960     		str	r1, [r3]	@ unaligned
 651 02d6 5A60     		str	r2, [r3, #4]	@ unaligned
 182:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 183:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= packetfunctions_sameAddress(addr,&temp_my128bID);
 652              		.loc 1 183 0
 653 02d8 07F10C03 		add	r3, r7, #12
 654 02dc 1946     		mov	r1, r3
 655 02de 7868     		ldr	r0, [r7, #4]
 656 02e0 FFF7FEFF 		bl	packetfunctions_sameAddress
 657 02e4 0346     		mov	r3, r0
 658 02e6 FB77     		strb	r3, [r7, #31]
 184:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 659              		.loc 1 184 0
 660 02e8 FFF7FEFF 		bl	IntMasterEnable
 185:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return res;
 661              		.loc 1 185 0
 662 02ec FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 663 02ee 1EE0     		b	.L46
 664              	.L43:
 186:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_PANID:
 187:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= packetfunctions_sameAddress(addr,&idmanager_vars.myPANID);
 665              		.loc 1 187 0
 666 02f0 1449     		ldr	r1, .L47+12
 667 02f2 7868     		ldr	r0, [r7, #4]
 668 02f4 FFF7FEFF 		bl	packetfunctions_sameAddress
 669 02f8 0346     		mov	r3, r0
 670 02fa FB77     		strb	r3, [r7, #31]
 188:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 671              		.loc 1 188 0
 672 02fc FFF7FEFF 		bl	IntMasterEnable
 189:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return res;
 673              		.loc 1 189 0
 674 0300 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 675 0302 14E0     		b	.L46
 676              	.L44:
 190:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ADDR_PREFIX:
 191:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         res= packetfunctions_sameAddress(addr,&idmanager_vars.myPrefix);
 677              		.loc 1 191 0
 678 0304 1049     		ldr	r1, .L47+16
 679 0306 7868     		ldr	r0, [r7, #4]
 680 0308 FFF7FEFF 		bl	packetfunctions_sameAddress
 681 030c 0346     		mov	r3, r0
 682 030e FB77     		strb	r3, [r7, #31]
 192:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 683              		.loc 1 192 0
 684 0310 FFF7FEFF 		bl	IntMasterEnable
 193:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return res;
 685              		.loc 1 193 0
 686 0314 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 687 0316 0AE0     		b	.L46
 688              	.L38:
 194:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      default:
 195:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         openserial_printCritical(COMPONENT_IDMANAGER,ERR_WRONG_ADDR_TYPE,
 196:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)addr->type,
 689              		.loc 1 196 0
 690 0318 7B68     		ldr	r3, [r7, #4]
 691 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 195:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)addr->type,
 692              		.loc 1 195 0
 693 031c 9AB2     		uxth	r2, r3
 694 031e 0223     		movs	r3, #2
 695 0320 3221     		movs	r1, #50
 696 0322 0220     		movs	r0, #2
 697 0324 FFF7FEFF 		bl	openserial_printCritical
 197:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****               (errorparameter_t)2);
 198:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         ENABLE_INTERRUPTS();
 698              		.loc 1 198 0
 699 0328 FFF7FEFF 		bl	IntMasterEnable
 199:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         return FALSE;
 700              		.loc 1 199 0
 701 032c 0023     		movs	r3, #0
 702              	.L46:
 200:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    }
 201:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 703              		.loc 1 201 0 discriminator 1
 704 032e 1846     		mov	r0, r3
 705 0330 2037     		adds	r7, r7, #32
 706              		.cfi_def_cfa_offset 8
 707 0332 BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 0334 80BD     		pop	{r7, pc}
 711              	.L48:
 712 0336 00BF     		.align	2
 713              	.L47:
 714 0338 12000000 		.word	idmanager_vars+18
 715 033c 23000000 		.word	idmanager_vars+35
 716 0340 00000000 		.word	idmanager_vars
 717 0344 01000000 		.word	idmanager_vars+1
 718 0348 34000000 		.word	idmanager_vars+52
 719              		.cfi_endproc
 720              	.LFE9:
 722              		.align	1
 723              		.global	idmanager_triggerAboutRoot
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu softvfp
 729              	idmanager_triggerAboutRoot:
 730              	.LFB10:
 202:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 203:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** void idmanager_triggerAboutRoot(void) {
 731              		.loc 1 203 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 72
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 034c 80B5     		push	{r7, lr}
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 034e 92B0     		sub	sp, sp, #72
 740              		.cfi_def_cfa_offset 80
 741 0350 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
 204:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    uint8_t         number_bytes_from_input_buffer;
 205:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    uint8_t         input_buffer[1+8+1+16];
 206:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    open_addr_t     myPrefix;
 207:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    uint8_t         dodagid[16];
 208:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    uint8_t         keyIndex;
 209:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    uint8_t*        keyValue;
 210:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 211:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    //=== get command from OpenSerial
 212:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    number_bytes_from_input_buffer = openserial_getInputBuffer(input_buffer,sizeof(input_buffer));
 743              		.loc 1 212 0
 744 0352 07F12403 		add	r3, r7, #36
 745 0356 1A21     		movs	r1, #26
 746 0358 1846     		mov	r0, r3
 747 035a FFF7FEFF 		bl	openserial_getInputBuffer
 748 035e 0346     		mov	r3, r0
 749 0360 87F84730 		strb	r3, [r7, #71]
 213:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    if (number_bytes_from_input_buffer!=sizeof(input_buffer)) {
 750              		.loc 1 213 0
 751 0364 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 752 0368 1A2B     		cmp	r3, #26
 753 036a 08D0     		beq	.L50
 214:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****       openserial_printError(COMPONENT_IDMANAGER,ERR_INPUTBUFFER_LENGTH,
 754              		.loc 1 214 0
 755 036c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 756 0370 9AB2     		uxth	r2, r3
 757 0372 0023     		movs	r3, #0
 758 0374 3521     		movs	r1, #53
 759 0376 0220     		movs	r0, #2
 760 0378 FFF7FEFF 		bl	openserial_printError
 215:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****             (errorparameter_t)number_bytes_from_input_buffer,
 216:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****             (errorparameter_t)0);
 217:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****       return;
 761              		.loc 1 217 0
 762 037c 62E0     		b	.L49
 763              	.L50:
 218:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    };
 219:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 220:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    //=== handle command
 221:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 222:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // take action (byte 0)
 223:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    switch (input_buffer[0]) {
 764              		.loc 1 223 0
 765 037e 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 766 0382 542B     		cmp	r3, #84
 767 0384 14D0     		beq	.L53
 768 0386 592B     		cmp	r3, #89
 769 0388 02D0     		beq	.L54
 770 038a 4E2B     		cmp	r3, #78
 771 038c 08D0     		beq	.L55
 772 038e 24E0     		b	.L52
 773              	.L54:
 224:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ACTION_YES:
 225:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         idmanager_setIsDAGroot(TRUE);
 774              		.loc 1 225 0
 775 0390 0120     		movs	r0, #1
 776 0392 FFF7FEFF 		bl	idmanager_setIsDAGroot
 226:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         idmanager_vars.slotSkip = FALSE;
 777              		.loc 1 226 0
 778 0396 2D4B     		ldr	r3, .L60
 779 0398 0022     		movs	r2, #0
 780 039a 83F84520 		strb	r2, [r3, #69]
 227:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 781              		.loc 1 227 0
 782 039e 1CE0     		b	.L52
 783              	.L55:
 228:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ACTION_NO:
 229:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         idmanager_setIsDAGroot(FALSE);
 784              		.loc 1 229 0
 785 03a0 0020     		movs	r0, #0
 786 03a2 FFF7FEFF 		bl	idmanager_setIsDAGroot
 230:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         idmanager_vars.slotSkip = TRUE;
 787              		.loc 1 230 0
 788 03a6 294B     		ldr	r3, .L60
 789 03a8 0122     		movs	r2, #1
 790 03aa 83F84520 		strb	r2, [r3, #69]
 231:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 791              		.loc 1 231 0
 792 03ae 14E0     		b	.L52
 793              	.L53:
 232:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****      case ACTION_TOGGLE:
 233:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         if (idmanager_getIsDAGroot()) {
 794              		.loc 1 233 0
 795 03b0 FFF7FEFF 		bl	idmanager_getIsDAGroot
 796 03b4 0346     		mov	r3, r0
 797 03b6 002B     		cmp	r3, #0
 798 03b8 07D0     		beq	.L56
 234:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****            idmanager_setIsDAGroot(FALSE);
 799              		.loc 1 234 0
 800 03ba 0020     		movs	r0, #0
 801 03bc FFF7FEFF 		bl	idmanager_setIsDAGroot
 235:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****            idmanager_vars.slotSkip = TRUE;
 802              		.loc 1 235 0
 803 03c0 224B     		ldr	r3, .L60
 804 03c2 0122     		movs	r2, #1
 805 03c4 83F84520 		strb	r2, [r3, #69]
 236:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         } else {
 237:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****            idmanager_setIsDAGroot(TRUE);
 238:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****            idmanager_vars.slotSkip = FALSE;
 239:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         }
 240:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         break;
 806              		.loc 1 240 0
 807 03c8 06E0     		b	.L59
 808              	.L56:
 237:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****            idmanager_vars.slotSkip = FALSE;
 809              		.loc 1 237 0
 810 03ca 0120     		movs	r0, #1
 811 03cc FFF7FEFF 		bl	idmanager_setIsDAGroot
 238:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****         }
 812              		.loc 1 238 0
 813 03d0 1E4B     		ldr	r3, .L60
 814 03d2 0022     		movs	r2, #0
 815 03d4 83F84520 		strb	r2, [r3, #69]
 816              	.L59:
 817              		.loc 1 240 0
 818 03d8 00BF     		nop
 819              	.L52:
 241:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    }
 242:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 243:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // store prefix (bytes 1-8)
 244:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    myPrefix.type = ADDR_PREFIX;
 820              		.loc 1 244 0
 821 03da 0523     		movs	r3, #5
 822 03dc 3B74     		strb	r3, [r7, #16]
 245:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(
 823              		.loc 1 245 0
 824 03de 07F11103 		add	r3, r7, #17
 825 03e2 07F12502 		add	r2, r7, #37
 826 03e6 1168     		ldr	r1, [r2]	@ unaligned
 827 03e8 5268     		ldr	r2, [r2, #4]	@ unaligned
 828 03ea 1960     		str	r1, [r3]	@ unaligned
 829 03ec 5A60     		str	r2, [r3, #4]	@ unaligned
 246:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****       myPrefix.prefix,
 247:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****       &input_buffer[1],
 248:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****       sizeof(myPrefix.prefix)
 249:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    );
 250:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    idmanager_setMyID(&myPrefix);
 830              		.loc 1 250 0
 831 03ee 07F11003 		add	r3, r7, #16
 832 03f2 1846     		mov	r0, r3
 833 03f4 FFF7FEFF 		bl	idmanager_setMyID
 251:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 252:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // indicate DODAGid to RPL
 253:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(&dodagid[0],idmanager_vars.myPrefix.prefix,8);  // prefix
 834              		.loc 1 253 0
 835 03f8 144A     		ldr	r2, .L60
 836 03fa 3B46     		mov	r3, r7
 837 03fc 3532     		adds	r2, r2, #53
 838 03fe 1068     		ldr	r0, [r2]	@ unaligned
 839 0400 5168     		ldr	r1, [r2, #4]	@ unaligned
 840 0402 03C3     		stmia	r3!, {r0, r1}
 254:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(&dodagid[8],idmanager_vars.my64bID.addr_64b,8); // eui64
 841              		.loc 1 254 0
 842 0404 114A     		ldr	r2, .L60
 843 0406 07F10803 		add	r3, r7, #8
 844 040a 2432     		adds	r2, r2, #36
 845 040c 1068     		ldr	r0, [r2]	@ unaligned
 846 040e 5168     		ldr	r1, [r2, #4]	@ unaligned
 847 0410 03C3     		stmia	r3!, {r0, r1}
 255:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    icmpv6rpl_writeDODAGid(dodagid);
 848              		.loc 1 255 0
 849 0412 3B46     		mov	r3, r7
 850 0414 1846     		mov	r0, r3
 851 0416 FFF7FEFF 		bl	icmpv6rpl_writeDODAGid
 256:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 257:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // store L2 security key index and key value
 258:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    // for the moment, keys K1 and K2 are the same
 259:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    keyIndex = input_buffer[9];
 852              		.loc 1 259 0
 853 041a 97F82D30 		ldrb	r3, [r7, #45]
 854 041e 87F84630 		strb	r3, [r7, #70]
 260:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    keyValue = &input_buffer[10];
 855              		.loc 1 260 0
 856 0422 07F12403 		add	r3, r7, #36
 857 0426 0A33     		adds	r3, r3, #10
 858 0428 3B64     		str	r3, [r7, #64]
 261:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    IEEE802154_security_setBeaconKey(keyIndex, keyValue);
 859              		.loc 1 261 0
 860 042a 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
 861 042e 396C     		ldr	r1, [r7, #64]
 862 0430 1846     		mov	r0, r3
 863 0432 FFF7FEFF 		bl	IEEE802154_security_setBeaconKey
 262:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    IEEE802154_security_setDataKey(keyIndex, keyValue);
 864              		.loc 1 262 0
 865 0436 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
 866 043a 396C     		ldr	r1, [r7, #64]
 867 043c 1846     		mov	r0, r3
 868 043e FFF7FEFF 		bl	IEEE802154_security_setDataKey
 263:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 264:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return;
 869              		.loc 1 264 0
 870 0442 00BF     		nop
 871              	.L49:
 265:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 872              		.loc 1 265 0
 873 0444 4837     		adds	r7, r7, #72
 874              		.cfi_def_cfa_offset 8
 875 0446 BD46     		mov	sp, r7
 876              		.cfi_def_cfa_register 13
 877              		@ sp needed
 878 0448 80BD     		pop	{r7, pc}
 879              	.L61:
 880 044a 00BF     		.align	2
 881              	.L60:
 882 044c 00000000 		.word	idmanager_vars
 883              		.cfi_endproc
 884              	.LFE10:
 886              		.align	1
 887              		.global	idmanager_setJoinKey
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu softvfp
 893              	idmanager_setJoinKey:
 894              	.LFB11:
 266:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 267:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** void idmanager_setJoinKey(uint8_t *key) {
 895              		.loc 1 267 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 8
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 0450 90B4     		push	{r4, r7}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 4, -8
 903              		.cfi_offset 7, -4
 904 0452 82B0     		sub	sp, sp, #8
 905              		.cfi_def_cfa_offset 16
 906 0454 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0456 7860     		str	r0, [r7, #4]
 268:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****     memcpy(idmanager_vars.joinKey, key, 16);
 909              		.loc 1 268 0
 910 0458 074B     		ldr	r3, .L63
 911 045a 7A68     		ldr	r2, [r7, #4]
 912 045c 4633     		adds	r3, r3, #70
 913 045e 1468     		ldr	r4, [r2]	@ unaligned
 914 0460 5068     		ldr	r0, [r2, #4]	@ unaligned
 915 0462 9168     		ldr	r1, [r2, #8]	@ unaligned
 916 0464 D268     		ldr	r2, [r2, #12]	@ unaligned
 917 0466 1C60     		str	r4, [r3]	@ unaligned
 918 0468 5860     		str	r0, [r3, #4]	@ unaligned
 919 046a 9960     		str	r1, [r3, #8]	@ unaligned
 920 046c DA60     		str	r2, [r3, #12]	@ unaligned
 269:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 921              		.loc 1 269 0
 922 046e 00BF     		nop
 923 0470 0837     		adds	r7, r7, #8
 924              		.cfi_def_cfa_offset 8
 925 0472 BD46     		mov	sp, r7
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 0474 90BC     		pop	{r4, r7}
 929              		.cfi_restore 7
 930              		.cfi_restore 4
 931              		.cfi_def_cfa_offset 0
 932 0476 7047     		bx	lr
 933              	.L64:
 934              		.align	2
 935              	.L63:
 936 0478 00000000 		.word	idmanager_vars
 937              		.cfi_endproc
 938              	.LFE11:
 940              		.align	1
 941              		.global	idmanager_getJoinKey
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu softvfp
 947              	idmanager_getJoinKey:
 948              	.LFB12:
 270:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 271:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** void idmanager_getJoinKey(uint8_t **pKey) {
 949              		.loc 1 271 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 8
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954 047c 80B4     		push	{r7}
 955              		.cfi_def_cfa_offset 4
 956              		.cfi_offset 7, -4
 957 047e 83B0     		sub	sp, sp, #12
 958              		.cfi_def_cfa_offset 16
 959 0480 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 961 0482 7860     		str	r0, [r7, #4]
 272:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****     *pKey = idmanager_vars.joinKey;
 962              		.loc 1 272 0
 963 0484 7B68     		ldr	r3, [r7, #4]
 964 0486 034A     		ldr	r2, .L67
 965 0488 1A60     		str	r2, [r3]
 273:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****     return;
 966              		.loc 1 273 0
 967 048a 00BF     		nop
 274:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 968              		.loc 1 274 0
 969 048c 0C37     		adds	r7, r7, #12
 970              		.cfi_def_cfa_offset 4
 971 048e BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0490 80BC     		pop	{r7}
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 0492 7047     		bx	lr
 978              	.L68:
 979              		.align	2
 980              	.L67:
 981 0494 46000000 		.word	idmanager_vars+70
 982              		.cfi_endproc
 983              	.LFE12:
 985              		.align	1
 986              		.global	idmanager_setJoinAsn
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu softvfp
 992              	idmanager_setJoinAsn:
 993              	.LFB13:
 275:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 276:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** void idmanager_setJoinAsn(asn_t* asn) {
 994              		.loc 1 276 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999 0498 80B4     		push	{r7}
 1000              		.cfi_def_cfa_offset 4
 1001              		.cfi_offset 7, -4
 1002 049a 83B0     		sub	sp, sp, #12
 1003              		.cfi_def_cfa_offset 16
 1004 049c 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 049e 7860     		str	r0, [r7, #4]
 277:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****     memcpy(&idmanager_vars.joinAsn, asn, sizeof(asn_t));
 1007              		.loc 1 277 0
 1008 04a0 054B     		ldr	r3, .L70
 1009 04a2 7A68     		ldr	r2, [r7, #4]
 1010 04a4 5633     		adds	r3, r3, #86
 1011 04a6 1168     		ldr	r1, [r2]	@ unaligned
 1012 04a8 1960     		str	r1, [r3]	@ unaligned
 1013 04aa 1279     		ldrb	r2, [r2, #4]
 1014 04ac 1A71     		strb	r2, [r3, #4]
 278:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 1015              		.loc 1 278 0
 1016 04ae 00BF     		nop
 1017 04b0 0C37     		adds	r7, r7, #12
 1018              		.cfi_def_cfa_offset 4
 1019 04b2 BD46     		mov	sp, r7
 1020              		.cfi_def_cfa_register 13
 1021              		@ sp needed
 1022 04b4 80BC     		pop	{r7}
 1023              		.cfi_restore 7
 1024              		.cfi_def_cfa_offset 0
 1025 04b6 7047     		bx	lr
 1026              	.L71:
 1027              		.align	2
 1028              	.L70:
 1029 04b8 00000000 		.word	idmanager_vars
 1030              		.cfi_endproc
 1031              	.LFE13:
 1033              		.align	1
 1034              		.global	debugPrint_id
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1040              	debugPrint_id:
 1041              	.LFB14:
 279:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 280:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** /**
 281:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** \brief Trigger this module to print status information, over serial.
 282:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 283:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** debugPrint_* functions are used by the openserial module to continuously print
 284:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** status information about several modules in the OpenWSN stack.
 285:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 286:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** \returns TRUE if this function printed something, FALSE otherwise.
 287:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** */
 288:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** bool debugPrint_id(void) {
 1042              		.loc 1 288 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 24
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046 04bc 80B5     		push	{r7, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 7, -8
 1049              		.cfi_offset 14, -4
 1050 04be 86B0     		sub	sp, sp, #24
 1051              		.cfi_def_cfa_offset 32
 1052 04c0 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 289:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    debugIDManagerEntry_t output;
 290:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 291:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    output.isDAGroot = idmanager_vars.isDAGroot;
 1054              		.loc 1 291 0
 1055 04c2 144B     		ldr	r3, .L74
 1056 04c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1057 04c6 3B70     		strb	r3, [r7]
 292:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(output.myPANID,idmanager_vars.myPANID.panid,2);
 1058              		.loc 1 292 0
 1059 04c8 124B     		ldr	r3, .L74
 1060 04ca 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1061 04cc 9BB2     		uxth	r3, r3
 1062 04ce A7F80130 		strh	r3, [r7, #1]	@ unaligned
 293:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(output.my16bID,idmanager_vars.my16bID.addr_16b,2);
 1063              		.loc 1 293 0
 1064 04d2 104B     		ldr	r3, .L74
 1065 04d4 B3F81330 		ldrh	r3, [r3, #19]	@ unaligned
 1066 04d8 9BB2     		uxth	r3, r3
 1067 04da A7F80330 		strh	r3, [r7, #3]	@ unaligned
 294:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(output.my64bID,idmanager_vars.my64bID.addr_64b,8);
 1068              		.loc 1 294 0
 1069 04de 0D4A     		ldr	r2, .L74
 1070 04e0 7B1D     		adds	r3, r7, #5
 1071 04e2 2432     		adds	r2, r2, #36
 1072 04e4 1168     		ldr	r1, [r2]	@ unaligned
 1073 04e6 5268     		ldr	r2, [r2, #4]	@ unaligned
 1074 04e8 1960     		str	r1, [r3]	@ unaligned
 1075 04ea 5A60     		str	r2, [r3, #4]	@ unaligned
 295:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    memcpy(output.myPrefix,idmanager_vars.myPrefix.prefix,8);
 1076              		.loc 1 295 0
 1077 04ec 094A     		ldr	r2, .L74
 1078 04ee 07F10D03 		add	r3, r7, #13
 1079 04f2 3532     		adds	r2, r2, #53
 1080 04f4 1168     		ldr	r1, [r2]	@ unaligned
 1081 04f6 5268     		ldr	r2, [r2, #4]	@ unaligned
 1082 04f8 1960     		str	r1, [r3]	@ unaligned
 1083 04fa 5A60     		str	r2, [r3, #4]	@ unaligned
 296:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 297:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    openserial_printStatus(STATUS_ID,(uint8_t*)&output,sizeof(debugIDManagerEntry_t));
 1084              		.loc 1 297 0
 1085 04fc 3B46     		mov	r3, r7
 1086 04fe 1522     		movs	r2, #21
 1087 0500 1946     		mov	r1, r3
 1088 0502 0120     		movs	r0, #1
 1089 0504 FFF7FEFF 		bl	openserial_printStatus
 298:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return TRUE;
 1090              		.loc 1 298 0
 1091 0508 0123     		movs	r3, #1
 299:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 1092              		.loc 1 299 0
 1093 050a 1846     		mov	r0, r3
 1094 050c 1837     		adds	r7, r7, #24
 1095              		.cfi_def_cfa_offset 8
 1096 050e BD46     		mov	sp, r7
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 0510 80BD     		pop	{r7, pc}
 1100              	.L75:
 1101 0512 00BF     		.align	2
 1102              	.L74:
 1103 0514 00000000 		.word	idmanager_vars
 1104              		.cfi_endproc
 1105              	.LFE14:
 1107              		.align	1
 1108              		.global	debugPrint_joined
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu softvfp
 1114              	debugPrint_joined:
 1115              	.LFB15:
 300:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** 
 301:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** bool debugPrint_joined(void) {
 1116              		.loc 1 301 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0518 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 051a 82B0     		sub	sp, sp, #8
 1125              		.cfi_def_cfa_offset 16
 1126 051c 00AF     		add	r7, sp, #0
 1127              		.cfi_def_cfa_register 7
 302:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    asn_t output;
 303:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    output.byte4         =  idmanager_vars.joinAsn.byte4;
 1128              		.loc 1 303 0
 1129 051e 0D4B     		ldr	r3, .L78
 1130 0520 93F85630 		ldrb	r3, [r3, #86]	@ zero_extendqisi2
 1131 0524 3B70     		strb	r3, [r7]
 304:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    output.bytes2and3    =  idmanager_vars.joinAsn.bytes2and3;
 1132              		.loc 1 304 0
 1133 0526 0B4B     		ldr	r3, .L78
 1134 0528 B3F85730 		ldrh	r3, [r3, #87]	@ unaligned
 1135 052c 9BB2     		uxth	r3, r3
 1136 052e A7F80130 		strh	r3, [r7, #1]	@ unaligned
 305:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    output.bytes0and1    =  idmanager_vars.joinAsn.bytes0and1;
 1137              		.loc 1 305 0
 1138 0532 084B     		ldr	r3, .L78
 1139 0534 B3F85930 		ldrh	r3, [r3, #89]	@ unaligned
 1140 0538 9BB2     		uxth	r3, r3
 1141 053a A7F80330 		strh	r3, [r7, #3]	@ unaligned
 306:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    openserial_printStatus(STATUS_JOINED,(uint8_t*)&output,sizeof(output));
 1142              		.loc 1 306 0
 1143 053e 3B46     		mov	r3, r7
 1144 0540 0522     		movs	r2, #5
 1145 0542 1946     		mov	r1, r3
 1146 0544 0B20     		movs	r0, #11
 1147 0546 FFF7FEFF 		bl	openserial_printStatus
 307:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c ****    return TRUE;
 1148              		.loc 1 307 0
 1149 054a 0123     		movs	r3, #1
 308:build\openmote-cc2538_armgcc\openstack\cross-layers/idmanager.c **** }
 1150              		.loc 1 308 0
 1151 054c 1846     		mov	r0, r3
 1152 054e 0837     		adds	r7, r7, #8
 1153              		.cfi_def_cfa_offset 8
 1154 0550 BD46     		mov	sp, r7
 1155              		.cfi_def_cfa_register 13
 1156              		@ sp needed
 1157 0552 80BD     		pop	{r7, pc}
 1158              	.L79:
 1159              		.align	2
 1160              	.L78:
 1161 0554 00000000 		.word	idmanager_vars
 1162              		.cfi_endproc
 1163              	.LFE15:
 1165              	.Letext0:
 1166              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1167              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1168              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1169              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1170              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 1171              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1172              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 1173              		.file 9 "inc/opendefs.h"
 1174              		.file 10 "build\\openmote-cc2538_armgcc\\openstack\\cross-layers\\idmanager.h"
 1175              		.file 11 "openstack\\03b-IPv6/icmpv6rpl.h"
DEFINED SYMBOLS
                            *ABS*:00000000 idmanager.c
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:44     .rodata:00000030 linklocalprefix
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:56     .rodata:00000038 all_routers_multicast
                            *COM*:0000005b idmanager_vars
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:75     .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:82     .text:00000000 idmanager_init
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:173    .text:00000090 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:180    .text:000000a0 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:187    .text:000000a0 idmanager_getIsDAGroot
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:222    .text:000000c0 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:226    .text:000000c4 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:233    .text:000000c4 idmanager_setIsDAGroot
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:272    .text:000000ec $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:276    .text:000000f0 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:283    .text:000000f0 idmanager_getIsSlotSkip
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:318    .text:00000110 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:322    .text:00000114 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:329    .text:00000114 idmanager_getMyID
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:356    .text:00000130 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:361    .text:00000144 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:415    .text:00000180 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:422    .text:00000190 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:429    .text:00000190 idmanager_setMyID
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:458    .text:000001ac $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:463    .text:000001c0 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:564    .text:00000258 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:568    .text:0000025c $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:575    .text:0000025c idmanager_isMyAddress
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:602    .text:00000278 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:607    .text:0000028c $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:714    .text:00000338 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:722    .text:0000034c $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:729    .text:0000034c idmanager_triggerAboutRoot
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:882    .text:0000044c $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:886    .text:00000450 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:893    .text:00000450 idmanager_setJoinKey
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:936    .text:00000478 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:940    .text:0000047c $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:947    .text:0000047c idmanager_getJoinKey
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:981    .text:00000494 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:985    .text:00000498 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:992    .text:00000498 idmanager_setJoinAsn
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1029   .text:000004b8 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1033   .text:000004bc $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1040   .text:000004bc debugPrint_id
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1103   .text:00000514 $d
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1107   .text:00000518 $t
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1114   .text:00000518 debugPrint_joined
C:\Users\Lee\AppData\Local\Temp\ccibtt6A.s:1161   .text:00000554 $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.openserial.h.32.441d977a0123852ed1e9b0f7b956952f
                           .group:00000000 wm4.opentimers.h.8.eb1cab84a6e82ba9569a1990291c92ba
                           .group:00000000 wm4.icmpv6rpl.h.15.ea1c33c2ed88145f3bad15ef7ace3b0f
                           .group:00000000 wm4.neighbors.h.15.7d3ab5965b5b1193d3498491ae404451
                           .group:00000000 wm4.schedule.h.2.655275e038307b96d02df4174b9f26be
                           .group:00000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69
                           .group:00000000 wm4.IEEE802154_security.h.35.26212369b49c5e0c3bd4f8181fa7153e

UNDEFINED SYMBOLS
memset
eui64_get
packetfunctions_mac64bToMac16b
IntMasterDisable
IntMasterEnable
icmpv6rpl_updateMyDAGrankAndParentSelection
schedule_startDAGroot
openserial_printCritical
packetfunctions_sameAddress
openserial_getInputBuffer
openserial_printError
icmpv6rpl_writeDODAGid
IEEE802154_security_setBeaconKey
IEEE802154_security_setDataKey
openserial_printStatus
