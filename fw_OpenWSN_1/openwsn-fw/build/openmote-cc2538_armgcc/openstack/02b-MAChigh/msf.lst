   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"msf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	all_routers_multicast:
  45 0030 FF       		.byte	-1
  46 0031 02       		.byte	2
  47 0032 00       		.byte	0
  48 0033 00       		.byte	0
  49 0034 00       		.byte	0
  50 0035 00       		.byte	0
  51 0036 00       		.byte	0
  52 0037 00       		.byte	0
  53 0038 00       		.byte	0
  54 0039 00       		.byte	0
  55 003a 00       		.byte	0
  56 003b 00       		.byte	0
  57 003c 00       		.byte	0
  58 003d 00       		.byte	0
  59 003e 00       		.byte	0
  60 003f 1A       		.byte	26
  61              		.align	2
  64              	linklocalprefix:
  65 0040 FE       		.byte	-2
  66 0041 80       		.byte	-128
  67 0042 00       		.byte	0
  68 0043 00       		.byte	0
  69 0044 00       		.byte	0
  70 0045 00       		.byte	0
  71 0046 00       		.byte	0
  72 0047 00       		.byte	0
  73              		.align	2
  76              	chTemplate_default:
  77 0048 05       		.byte	5
  78 0049 06       		.byte	6
  79 004a 0C       		.byte	12
  80 004b 07       		.byte	7
  81 004c 0F       		.byte	15
  82 004d 04       		.byte	4
  83 004e 0E       		.byte	14
  84 004f 0B       		.byte	11
  85 0050 08       		.byte	8
  86 0051 00       		.byte	0
  87 0052 01       		.byte	1
  88 0053 02       		.byte	2
  89 0054 0D       		.byte	13
  90 0055 03       		.byte	3
  91 0056 09       		.byte	9
  92 0057 0A       		.byte	10
  93              		.align	2
  96              	ebIEsBytestream:
  97 0058 1A       		.byte	26
  98 0059 88       		.byte	-120
  99 005a 06       		.byte	6
 100 005b 1A       		.byte	26
 101 005c 00       		.byte	0
 102 005d 00       		.byte	0
 103 005e 00       		.byte	0
 104 005f 00       		.byte	0
 105 0060 00       		.byte	0
 106 0061 00       		.byte	0
 107 0062 01       		.byte	1
 108 0063 1C       		.byte	28
 109 0064 00       		.byte	0
 110 0065 01       		.byte	1
 111 0066 C8       		.byte	-56
 112 0067 00       		.byte	0
 113 0068 0A       		.byte	10
 114 0069 1B       		.byte	27
 115 006a 01       		.byte	1
 116 006b 00       		.byte	0
 117 006c 0D       		.byte	13
 118 006d 00       		.byte	0
 119 006e 01       		.byte	1
 120 006f 00       		.byte	0
 121 0070 00       		.byte	0
 122 0071 00       		.byte	0
 123 0072 00       		.byte	0
 124 0073 0F       		.byte	15
 125              		.comm	msf_vars,10,4
 126              		.text
 127              		.align	1
 128              		.global	msf_init
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu softvfp
 134              	msf_init:
 135              	.LFB0:
 136              		.file 1 "build\\openmote-cc2538_armgcc\\openstack\\02b-MAChigh\\msf.c"
   1:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "opendefs.h"
   2:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "msf.h"
   3:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "neighbors.h"
   4:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "sixtop.h"
   5:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "scheduler.h"
   6:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "schedule.h"
   7:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "openapps.h"
   8:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "openrandom.h"
   9:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "idmanager.h"
  10:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "icmpv6rpl.h"
  11:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "IEEE802154E.h"
  12:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #include "openqueue.h"
  13:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  14:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== definition =====================================
  15:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  16:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== variables =======================================
  17:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  18:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** msf_vars_t msf_vars;
  19:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  20:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== prototypes ======================================
  21:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  22:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** // sixtop callback
  23:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** uint16_t msf_getMetadata(void);
  24:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** metadata_t msf_translateMetadata(void);
  25:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_handleRCError(uint8_t code, open_addr_t* address);
  26:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  27:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_housekeeping_cb(opentimers_id_t id);
  28:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_housekeeping_task(void);
  29:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  30:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_waitretry_cb(opentimers_id_t id);
  31:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  32:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_clear_task(void);
  33:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** // msf private
  34:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_trigger6pAdd(void);
  35:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_trigger6pDelete(void);
  36:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_housekeeping(void);
  37:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  38:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== public ==========================================
  39:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  40:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_init(void) {
 137              		.loc 1 40 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 24
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 B0B5     		push	{r4, r5, r7, lr}
 142              		.cfi_def_cfa_offset 16
 143              		.cfi_offset 4, -16
 144              		.cfi_offset 5, -12
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 88B0     		sub	sp, sp, #32
 148              		.cfi_def_cfa_offset 48
 149 0004 02AF     		add	r7, sp, #8
 150              		.cfi_def_cfa 7, 40
  41:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  42:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     open_addr_t     temp_neighbor;
  43:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  44:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     memset(&msf_vars,0,sizeof(msf_vars_t));
 151              		.loc 1 44 0
 152 0006 0A22     		movs	r2, #10
 153 0008 0021     		movs	r1, #0
 154 000a 3848     		ldr	r0, .L2
 155 000c FFF7FEFF 		bl	memset
  45:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.numAppPacketsPerSlotFrame = 0;
 156              		.loc 1 45 0
 157 0010 364B     		ldr	r3, .L2
 158 0012 0022     		movs	r2, #0
 159 0014 5A70     		strb	r2, [r3, #1]
  46:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     sixtop_setSFcallback(
 160              		.loc 1 46 0
 161 0016 364B     		ldr	r3, .L2+4
 162 0018 364A     		ldr	r2, .L2+8
 163 001a 3749     		ldr	r1, .L2+12
 164 001c 3748     		ldr	r0, .L2+16
 165 001e FFF7FEFF 		bl	sixtop_setSFcallback
  47:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         (sixtop_sf_getsfid)msf_getsfid,
  48:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         (sixtop_sf_getmetadata)msf_getMetadata,
  49:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         (sixtop_sf_translatemetadata)msf_translateMetadata,
  50:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         (sixtop_sf_handle_callback)msf_handleRCError
  51:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     );
  52:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  53:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     memset(&temp_neighbor,0,sizeof(temp_neighbor));
 166              		.loc 1 53 0
 167 0022 3B1D     		adds	r3, r7, #4
 168 0024 1122     		movs	r2, #17
 169 0026 0021     		movs	r1, #0
 170 0028 1846     		mov	r0, r3
 171 002a FFF7FEFF 		bl	memset
  54:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     temp_neighbor.type             = ADDR_ANYCAST;
 172              		.loc 1 54 0
 173 002e 0623     		movs	r3, #6
 174 0030 3B71     		strb	r3, [r7, #4]
  55:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     schedule_addActiveSlot(
  56:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_hashFunction_getSlotoffset(256*idmanager_getMyID(ADDR_64B)->addr_64b[6]+idmanager_getMy
 175              		.loc 1 56 0
 176 0032 0220     		movs	r0, #2
 177 0034 FFF7FEFF 		bl	idmanager_getMyID
 178 0038 0346     		mov	r3, r0
 179 003a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  55:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     schedule_addActiveSlot(
 180              		.loc 1 55 0
 181 003c 9BB2     		uxth	r3, r3
 182 003e 1B02     		lsls	r3, r3, #8
 183 0040 9CB2     		uxth	r4, r3
 184              		.loc 1 56 0
 185 0042 0220     		movs	r0, #2
 186 0044 FFF7FEFF 		bl	idmanager_getMyID
 187 0048 0346     		mov	r3, r0
 188 004a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 189 004c 9BB2     		uxth	r3, r3
  55:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     schedule_addActiveSlot(
 190              		.loc 1 55 0
 191 004e 2344     		add	r3, r3, r4
 192 0050 9BB2     		uxth	r3, r3
 193 0052 1846     		mov	r0, r3
 194 0054 FFF7FEFF 		bl	msf_hashFunction_getSlotoffset
 195 0058 0346     		mov	r3, r0
 196 005a 1D46     		mov	r5, r3
  57:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         CELLTYPE_TXRX,                        // type of slot
  58:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         FALSE,                                // shared?
  59:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_hashFunction_getChanneloffset(256*idmanager_getMyID(ADDR_64B)->addr_64b[6]+idmanager_ge
 197              		.loc 1 59 0
 198 005c 0220     		movs	r0, #2
 199 005e FFF7FEFF 		bl	idmanager_getMyID
 200 0062 0346     		mov	r3, r0
 201 0064 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  55:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     schedule_addActiveSlot(
 202              		.loc 1 55 0
 203 0066 9BB2     		uxth	r3, r3
 204 0068 1B02     		lsls	r3, r3, #8
 205 006a 9CB2     		uxth	r4, r3
 206              		.loc 1 59 0
 207 006c 0220     		movs	r0, #2
 208 006e FFF7FEFF 		bl	idmanager_getMyID
 209 0072 0346     		mov	r3, r0
 210 0074 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 211 0076 9BB2     		uxth	r3, r3
  55:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     schedule_addActiveSlot(
 212              		.loc 1 55 0
 213 0078 2344     		add	r3, r3, r4
 214 007a 9BB2     		uxth	r3, r3
 215 007c 1846     		mov	r0, r3
 216 007e FFF7FEFF 		bl	msf_hashFunction_getChanneloffset
 217 0082 0346     		mov	r3, r0
 218 0084 1A46     		mov	r2, r3
 219 0086 3B1D     		adds	r3, r7, #4
 220 0088 0093     		str	r3, [sp]
 221 008a 1346     		mov	r3, r2
 222 008c 0022     		movs	r2, #0
 223 008e 0321     		movs	r1, #3
 224 0090 2846     		mov	r0, r5
 225 0092 FFF7FEFF 		bl	schedule_addActiveSlot
  60:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         &temp_neighbor                        // neighbor
  61:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     );
  62:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  63:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.housekeepingTimerId = opentimers_create(TIMER_GENERAL_PURPOSE, TASKPRIO_MSF);
 226              		.loc 1 63 0
 227 0096 0A21     		movs	r1, #10
 228 0098 FF20     		movs	r0, #255
 229 009a FFF7FEFF 		bl	opentimers_create
 230 009e 0346     		mov	r3, r0
 231 00a0 1A46     		mov	r2, r3
 232 00a2 124B     		ldr	r3, .L2
 233 00a4 5A71     		strb	r2, [r3, #5]
  64:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.housekeepingPeriod  = HOUSEKEEPING_PERIOD;
 234              		.loc 1 64 0
 235 00a6 114B     		ldr	r3, .L2
 236 00a8 47F23052 		movw	r2, #30000
 237 00ac DA80     		strh	r2, [r3, #6]	@ movhi
  65:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     opentimers_scheduleIn(
 238              		.loc 1 65 0
 239 00ae 0F4B     		ldr	r3, .L2
 240 00b0 5C79     		ldrb	r4, [r3, #5]	@ zero_extendqisi2
  66:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_vars.housekeepingTimerId,
  67:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         openrandom_getRandomizePeriod(msf_vars.housekeepingPeriod, msf_vars.housekeepingPeriod),
 241              		.loc 1 67 0
 242 00b2 0E4B     		ldr	r3, .L2
 243 00b4 DA88     		ldrh	r2, [r3, #6]
 244 00b6 0D4B     		ldr	r3, .L2
 245 00b8 DB88     		ldrh	r3, [r3, #6]
 246 00ba 1946     		mov	r1, r3
 247 00bc 1046     		mov	r0, r2
 248 00be FFF7FEFF 		bl	openrandom_getRandomizePeriod
 249 00c2 0346     		mov	r3, r0
  65:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     opentimers_scheduleIn(
 250              		.loc 1 65 0
 251 00c4 1946     		mov	r1, r3
 252 00c6 0E4B     		ldr	r3, .L2+20
 253 00c8 0093     		str	r3, [sp]
 254 00ca 0023     		movs	r3, #0
 255 00cc 0022     		movs	r2, #0
 256 00ce 2046     		mov	r0, r4
 257 00d0 FFF7FEFF 		bl	opentimers_scheduleIn
  68:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         TIME_MS,
  69:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         TIMER_PERIODIC,
  70:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_timer_housekeeping_cb
  71:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     );
  72:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.waitretryTimerId    = opentimers_create(TIMER_GENERAL_PURPOSE, TASKPRIO_MSF);
 258              		.loc 1 72 0
 259 00d4 0A21     		movs	r1, #10
 260 00d6 FF20     		movs	r0, #255
 261 00d8 FFF7FEFF 		bl	opentimers_create
 262 00dc 0346     		mov	r3, r0
 263 00de 1A46     		mov	r2, r3
 264 00e0 024B     		ldr	r3, .L2
 265 00e2 1A72     		strb	r2, [r3, #8]
  73:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 266              		.loc 1 73 0
 267 00e4 00BF     		nop
 268 00e6 1837     		adds	r7, r7, #24
 269              		.cfi_def_cfa_offset 16
 270 00e8 BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 00ea B0BD     		pop	{r4, r5, r7, pc}
 274              	.L3:
 275              		.align	2
 276              	.L2:
 277 00ec 00000000 		.word	msf_vars
 278 00f0 00000000 		.word	msf_handleRCError
 279 00f4 00000000 		.word	msf_translateMetadata
 280 00f8 00000000 		.word	msf_getMetadata
 281 00fc 00000000 		.word	msf_getsfid
 282 0100 00000000 		.word	msf_timer_housekeeping_cb
 283              		.cfi_endproc
 284              	.LFE0:
 286              		.align	1
 287              		.global	msf_updateCellsPassed
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu softvfp
 293              	msf_updateCellsPassed:
 294              	.LFB1:
  74:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  75:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** // called by schedule
  76:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void    msf_updateCellsPassed(open_addr_t* neighbor){
 295              		.loc 1 76 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299 0104 80B5     		push	{r7, lr}
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0106 82B0     		sub	sp, sp, #8
 304              		.cfi_def_cfa_offset 16
 305 0108 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 307 010a 7860     		str	r0, [r7, #4]
  77:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #ifdef MSF_ADAPTING_TO_TRAFFIC
  78:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (icmpv6rpl_isPreferredParent(neighbor)==FALSE){
 308              		.loc 1 78 0
 309 010c 7868     		ldr	r0, [r7, #4]
 310 010e FFF7FEFF 		bl	icmpv6rpl_isPreferredParent
 311 0112 0346     		mov	r3, r0
 312 0114 83F00103 		eor	r3, r3, #1
 313 0118 DBB2     		uxtb	r3, r3
 314 011a 002B     		cmp	r3, #0
 315 011c 20D1     		bne	.L9
  79:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
  80:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
  81:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  82:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.numCellsPassed++;
 316              		.loc 1 82 0
 317 011e 124B     		ldr	r3, .L10
 318 0120 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 319 0122 0133     		adds	r3, r3, #1
 320 0124 DAB2     		uxtb	r2, r3
 321 0126 104B     		ldr	r3, .L10
 322 0128 DA70     		strb	r2, [r3, #3]
  83:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (msf_vars.numCellsPassed == MAX_NUMCELLS){
 323              		.loc 1 83 0
 324 012a 0F4B     		ldr	r3, .L10
 325 012c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 326 012e 402B     		cmp	r3, #64
 327 0130 17D1     		bne	.L4
  84:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if (msf_vars.numCellsUsed > LIM_NUMCELLSUSED_HIGH){
 328              		.loc 1 84 0
 329 0132 0D4B     		ldr	r3, .L10
 330 0134 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 331 0136 302B     		cmp	r3, #48
 332 0138 03D9     		bls	.L7
  85:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             scheduler_push_task(msf_trigger6pAdd,TASKPRIO_MSF);
 333              		.loc 1 85 0
 334 013a 0A21     		movs	r1, #10
 335 013c 0B48     		ldr	r0, .L10+4
 336 013e FFF7FEFF 		bl	scheduler_push_task
 337              	.L7:
  86:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
  87:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if (msf_vars.numCellsUsed < LIM_NUMCELLSUSED_LOW){
 338              		.loc 1 87 0
 339 0142 094B     		ldr	r3, .L10
 340 0144 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 341 0146 0F2B     		cmp	r3, #15
 342 0148 03D8     		bhi	.L8
  88:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             scheduler_push_task(msf_trigger6pDelete,TASKPRIO_MSF);
 343              		.loc 1 88 0
 344 014a 0A21     		movs	r1, #10
 345 014c 0848     		ldr	r0, .L10+8
 346 014e FFF7FEFF 		bl	scheduler_push_task
 347              	.L8:
  89:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
  90:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_vars.numCellsPassed = 0;
 348              		.loc 1 90 0
 349 0152 054B     		ldr	r3, .L10
 350 0154 0022     		movs	r2, #0
 351 0156 DA70     		strb	r2, [r3, #3]
  91:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_vars.numCellsUsed   = 0;
 352              		.loc 1 91 0
 353 0158 034B     		ldr	r3, .L10
 354 015a 0022     		movs	r2, #0
 355 015c 1A71     		strb	r2, [r3, #4]
 356 015e 00E0     		b	.L4
 357              	.L9:
  79:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 358              		.loc 1 79 0
 359 0160 00BF     		nop
 360              	.L4:
  92:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
  93:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** #endif
  94:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 361              		.loc 1 94 0
 362 0162 0837     		adds	r7, r7, #8
 363              		.cfi_def_cfa_offset 8
 364 0164 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0166 80BD     		pop	{r7, pc}
 368              	.L11:
 369              		.align	2
 370              	.L10:
 371 0168 00000000 		.word	msf_vars
 372 016c 00000000 		.word	msf_trigger6pAdd
 373 0170 00000000 		.word	msf_trigger6pDelete
 374              		.cfi_endproc
 375              	.LFE1:
 377              		.align	1
 378              		.global	msf_updateCellsUsed
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	msf_updateCellsUsed:
 385              	.LFB2:
  95:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  96:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void    msf_updateCellsUsed(open_addr_t* neighbor){
 386              		.loc 1 96 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0174 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0176 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0178 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 017a 7860     		str	r0, [r7, #4]
  97:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
  98:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (icmpv6rpl_isPreferredParent(neighbor)==FALSE){
 399              		.loc 1 98 0
 400 017c 7868     		ldr	r0, [r7, #4]
 401 017e FFF7FEFF 		bl	icmpv6rpl_isPreferredParent
 402 0182 0346     		mov	r3, r0
 403 0184 83F00103 		eor	r3, r3, #1
 404 0188 DBB2     		uxtb	r3, r3
 405 018a 002B     		cmp	r3, #0
 406 018c 06D1     		bne	.L15
  99:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 100:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 101:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 102:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.numCellsUsed++;
 407              		.loc 1 102 0
 408 018e 054B     		ldr	r3, .L16
 409 0190 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 410 0192 0133     		adds	r3, r3, #1
 411 0194 DAB2     		uxtb	r2, r3
 412 0196 034B     		ldr	r3, .L16
 413 0198 1A71     		strb	r2, [r3, #4]
 414 019a 00E0     		b	.L12
 415              	.L15:
  99:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 416              		.loc 1 99 0
 417 019c 00BF     		nop
 418              	.L12:
 103:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 419              		.loc 1 103 0
 420 019e 0837     		adds	r7, r7, #8
 421              		.cfi_def_cfa_offset 8
 422 01a0 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 01a2 80BD     		pop	{r7, pc}
 426              	.L17:
 427              		.align	2
 428              	.L16:
 429 01a4 00000000 		.word	msf_vars
 430              		.cfi_endproc
 431              	.LFE2:
 433              		.align	1
 434              		.global	msf_trigger6pClear
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu softvfp
 440              	msf_trigger6pClear:
 441              	.LFB3:
 104:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 105:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void    msf_trigger6pClear(open_addr_t* neighbor){
 442              		.loc 1 105 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 01a8 80B5     		push	{r7, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 01aa 88B0     		sub	sp, sp, #32
 451              		.cfi_def_cfa_offset 40
 452 01ac 06AF     		add	r7, sp, #24
 453              		.cfi_def_cfa 7, 16
 454 01ae 7860     		str	r0, [r7, #4]
 106:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 107:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_hasManagedTxCellToNeighbor(neighbor)){
 455              		.loc 1 107 0
 456 01b0 7868     		ldr	r0, [r7, #4]
 457 01b2 FFF7FEFF 		bl	schedule_hasManagedTxCellToNeighbor
 458 01b6 0346     		mov	r3, r0
 459 01b8 002B     		cmp	r3, #0
 460 01ba 0FD0     		beq	.L20
 108:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         sixtop_request(
 461              		.loc 1 108 0
 462 01bc 0023     		movs	r3, #0
 463 01be 0493     		str	r3, [sp, #16]
 464 01c0 0023     		movs	r3, #0
 465 01c2 0393     		str	r3, [sp, #12]
 466 01c4 0023     		movs	r3, #0
 467 01c6 0293     		str	r3, [sp, #8]
 468 01c8 0023     		movs	r3, #0
 469 01ca 0193     		str	r3, [sp, #4]
 470 01cc 0023     		movs	r3, #0
 471 01ce 0093     		str	r3, [sp]
 472 01d0 0123     		movs	r3, #1
 473 01d2 0122     		movs	r2, #1
 474 01d4 7968     		ldr	r1, [r7, #4]
 475 01d6 0720     		movs	r0, #7
 476 01d8 FFF7FEFF 		bl	sixtop_request
 477              	.L20:
 109:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             IANA_6TOP_CMD_CLEAR,                // code
 110:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             neighbor,                           // neighbor
 111:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             NUMCELLS_MSF,                       // number cells
 112:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             CELLOPTIONS_MSF,                    // cellOptions
 113:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             NULL,                               // celllist to add (not used)
 114:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             NULL,                               // celllist to delete (not used)
 115:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             IANA_6TISCH_SFID_MSF,               // sfid
 116:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             0,                                  // list command offset (not used)
 117:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             0                                   // list command maximum celllist (not used)
 118:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         );
 119:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 120:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 478              		.loc 1 120 0
 479 01dc 00BF     		nop
 480 01de 0837     		adds	r7, r7, #8
 481              		.cfi_def_cfa_offset 8
 482 01e0 BD46     		mov	sp, r7
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 01e2 80BD     		pop	{r7, pc}
 486              		.cfi_endproc
 487              	.LFE3:
 489              		.align	1
 490              		.global	msf_getsfid
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu softvfp
 496              	msf_getsfid:
 497              	.LFB4:
 121:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== callback =========================================
 122:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 123:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** uint8_t msf_getsfid(void){
 498              		.loc 1 123 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503 01e4 80B4     		push	{r7}
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 7, -4
 506 01e6 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 124:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     return IANA_6TISCH_SFID_MSF;
 508              		.loc 1 124 0
 509 01e8 0023     		movs	r3, #0
 125:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 510              		.loc 1 125 0
 511 01ea 1846     		mov	r0, r3
 512 01ec BD46     		mov	sp, r7
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 01ee 80BC     		pop	{r7}
 516              		.cfi_restore 7
 517              		.cfi_def_cfa_offset 0
 518 01f0 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE4:
 522              		.align	1
 523              		.global	msf_getMetadata
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu softvfp
 529              	msf_getMetadata:
 530              	.LFB5:
 126:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 127:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** uint16_t msf_getMetadata(void){
 531              		.loc 1 127 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 01f2 80B4     		push	{r7}
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 01f4 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 128:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     return SCHEDULE_MINIMAL_6TISCH_DEFAULT_SLOTFRAME_HANDLE;
 541              		.loc 1 128 0
 542 01f6 0023     		movs	r3, #0
 129:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 543              		.loc 1 129 0
 544 01f8 1846     		mov	r0, r3
 545 01fa BD46     		mov	sp, r7
 546              		.cfi_def_cfa_register 13
 547              		@ sp needed
 548 01fc 80BC     		pop	{r7}
 549              		.cfi_restore 7
 550              		.cfi_def_cfa_offset 0
 551 01fe 7047     		bx	lr
 552              		.cfi_endproc
 553              	.LFE5:
 555              		.align	1
 556              		.global	msf_translateMetadata
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu softvfp
 562              	msf_translateMetadata:
 563              	.LFB6:
 130:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 131:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** metadata_t msf_translateMetadata(void){
 564              		.loc 1 131 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569 0200 80B4     		push	{r7}
 570              		.cfi_def_cfa_offset 4
 571              		.cfi_offset 7, -4
 572 0202 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 132:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     return METADATA_TYPE_FRAMEID;
 574              		.loc 1 132 0
 575 0204 0023     		movs	r3, #0
 133:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 576              		.loc 1 133 0
 577 0206 1846     		mov	r0, r3
 578 0208 BD46     		mov	sp, r7
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 020a 80BC     		pop	{r7}
 582              		.cfi_restore 7
 583              		.cfi_def_cfa_offset 0
 584 020c 7047     		bx	lr
 585              		.cfi_endproc
 586              	.LFE6:
 588              		.align	1
 589              		.global	msf_handleRCError
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu softvfp
 595              	msf_handleRCError:
 596              	.LFB7:
 134:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 135:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_handleRCError(uint8_t code, open_addr_t* address){
 597              		.loc 1 135 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 16
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 020e 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0210 86B0     		sub	sp, sp, #24
 606              		.cfi_def_cfa_offset 32
 607 0212 02AF     		add	r7, sp, #8
 608              		.cfi_def_cfa 7, 24
 609 0214 0346     		mov	r3, r0
 610 0216 3960     		str	r1, [r7]
 611 0218 FB71     		strb	r3, [r7, #7]
 136:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint16_t waitDuration;
 137:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 138:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (
 612              		.loc 1 138 0
 613 021a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 614 021c 032B     		cmp	r3, #3
 615 021e 02D0     		beq	.L28
 139:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_RESET        ||
 616              		.loc 1 139 0
 617 0220 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 618 0222 092B     		cmp	r3, #9
 619 0224 1CD1     		bne	.L33
 620              	.L28:
 140:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_LOCKED
 141:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     ){
 142:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // waitretry
 143:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_vars.waitretry = TRUE;
 621              		.loc 1 143 0
 622 0226 184B     		ldr	r3, .L35
 623 0228 0122     		movs	r2, #1
 624 022a 5A72     		strb	r2, [r3, #9]
 144:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         waitDuration = WAITDURATION_MIN+openrandom_get16b()%WAITDURATION_RANDOM_RANGE;
 625              		.loc 1 144 0
 626 022c FFF7FEFF 		bl	openrandom_get16b
 627 0230 0346     		mov	r3, r0
 628 0232 164A     		ldr	r2, .L35+4
 629 0234 A2FB0312 		umull	r1, r2, r2, r3
 630 0238 520B     		lsrs	r2, r2, #13
 631 023a 47F23051 		movw	r1, #30000
 632 023e 01FB02F2 		mul	r2, r1, r2
 633 0242 9B1A     		subs	r3, r3, r2
 634 0244 9BB2     		uxth	r3, r3
 635 0246 03F5EA43 		add	r3, r3, #29952
 636 024a 3033     		adds	r3, r3, #48
 637 024c FB81     		strh	r3, [r7, #14]	@ movhi
 145:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         opentimers_scheduleIn(
 638              		.loc 1 145 0
 639 024e 0E4B     		ldr	r3, .L35
 640 0250 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 641 0252 F989     		ldrh	r1, [r7, #14]
 642 0254 0E4B     		ldr	r3, .L35+8
 643 0256 0093     		str	r3, [sp]
 644 0258 0123     		movs	r3, #1
 645 025a 0022     		movs	r2, #0
 646 025c FFF7FEFF 		bl	opentimers_scheduleIn
 647              	.L33:
 146:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             msf_vars.waitretryTimerId,
 147:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             waitDuration,
 148:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             TIME_MS,
 149:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             TIMER_ONESHOT,
 150:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             msf_timer_waitretry_cb
 151:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         );
 152:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 153:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 154:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (
 155:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_ERROR        ||
 156:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_VER_ERR      ||
 157:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_SFID_ERR
 158:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     ){
 159:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // quarantine
 160:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 161:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 162:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (
 648              		.loc 1 162 0
 649 0260 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 650 0262 062B     		cmp	r3, #6
 651 0264 02D0     		beq	.L30
 163:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_SEQNUM_ERR   ||
 652              		.loc 1 163 0
 653 0266 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 654 0268 072B     		cmp	r3, #7
 655 026a 03D1     		bne	.L31
 656              	.L30:
 164:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         code==IANA_6TOP_RC_CELLLIST_ERR
 165:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     ){
 166:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // clear
 167:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         scheduler_push_task(msf_timer_clear_task,TASKPRIO_MSF);
 657              		.loc 1 167 0
 658 026c 0A21     		movs	r1, #10
 659 026e 0948     		ldr	r0, .L35+12
 660 0270 FFF7FEFF 		bl	scheduler_push_task
 661              	.L31:
 168:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 169:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 170:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (code==IANA_6TOP_RC_BUSY){
 662              		.loc 1 170 0
 663 0274 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 664 0276 082B     		cmp	r3, #8
 665 0278 02D1     		bne	.L34
 171:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // mark neighbor f6NORES
 172:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         neighbors_setNeighborNoResource(address);
 666              		.loc 1 172 0
 667 027a 3868     		ldr	r0, [r7]
 668 027c FFF7FEFF 		bl	neighbors_setNeighborNoResource
 669              	.L34:
 173:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 174:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 670              		.loc 1 174 0
 671 0280 00BF     		nop
 672 0282 1037     		adds	r7, r7, #16
 673              		.cfi_def_cfa_offset 8
 674 0284 BD46     		mov	sp, r7
 675              		.cfi_def_cfa_register 13
 676              		@ sp needed
 677 0286 80BD     		pop	{r7, pc}
 678              	.L36:
 679              		.align	2
 680              	.L35:
 681 0288 00000000 		.word	msf_vars
 682 028c 73B2E745 		.word	1172812403
 683 0290 00000000 		.word	msf_timer_waitretry_cb
 684 0294 00000000 		.word	msf_timer_clear_task
 685              		.cfi_endproc
 686              	.LFE7:
 688              		.align	1
 689              		.global	msf_timer_waitretry_cb
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 693              		.fpu softvfp
 695              	msf_timer_waitretry_cb:
 696              	.LFB8:
 175:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 176:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_waitretry_cb(opentimers_id_t id){
 697              		.loc 1 176 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702 0298 80B4     		push	{r7}
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 029a 83B0     		sub	sp, sp, #12
 706              		.cfi_def_cfa_offset 16
 707 029c 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 029e 0346     		mov	r3, r0
 710 02a0 FB71     		strb	r3, [r7, #7]
 177:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.waitretry = FALSE;
 711              		.loc 1 177 0
 712 02a2 044B     		ldr	r3, .L38
 713 02a4 0022     		movs	r2, #0
 714 02a6 5A72     		strb	r2, [r3, #9]
 178:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 715              		.loc 1 178 0
 716 02a8 00BF     		nop
 717 02aa 0C37     		adds	r7, r7, #12
 718              		.cfi_def_cfa_offset 4
 719 02ac BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 02ae 80BC     		pop	{r7}
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 02b0 7047     		bx	lr
 726              	.L39:
 727 02b2 00BF     		.align	2
 728              	.L38:
 729 02b4 00000000 		.word	msf_vars
 730              		.cfi_endproc
 731              	.LFE8:
 733              		.align	1
 734              		.global	msf_timer_housekeeping_cb
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu softvfp
 740              	msf_timer_housekeeping_cb:
 741              	.LFB9:
 179:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 180:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_housekeeping_cb(opentimers_id_t id){
 742              		.loc 1 180 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 16
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 02b8 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 02ba 84B0     		sub	sp, sp, #16
 751              		.cfi_def_cfa_offset 24
 752 02bc 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 02be 0346     		mov	r3, r0
 755 02c0 FB71     		strb	r3, [r7, #7]
 181:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     PORT_TIMER_WIDTH newDuration;
 182:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 183:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     // update the timer period
 184:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     newDuration = openrandom_getRandomizePeriod(msf_vars.housekeepingPeriod, msf_vars.housekeepingP
 756              		.loc 1 184 0
 757 02c2 0B4B     		ldr	r3, .L41
 758 02c4 DA88     		ldrh	r2, [r3, #6]
 759 02c6 0A4B     		ldr	r3, .L41
 760 02c8 DB88     		ldrh	r3, [r3, #6]
 761 02ca 1946     		mov	r1, r3
 762 02cc 1046     		mov	r0, r2
 763 02ce FFF7FEFF 		bl	openrandom_getRandomizePeriod
 764 02d2 0346     		mov	r3, r0
 765 02d4 FB60     		str	r3, [r7, #12]
 185:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     opentimers_updateDuration(msf_vars.housekeepingTimerId, newDuration);
 766              		.loc 1 185 0
 767 02d6 064B     		ldr	r3, .L41
 768 02d8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 769 02da F968     		ldr	r1, [r7, #12]
 770 02dc 1846     		mov	r0, r3
 771 02de FFF7FEFF 		bl	opentimers_updateDuration
 186:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 187:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     // calling the task directly as the timer_cb function is executed in
 188:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     // task mode by opentimer already
 189:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_timer_housekeeping_task();
 772              		.loc 1 189 0
 773 02e2 FFF7FEFF 		bl	msf_timer_housekeeping_task
 190:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 774              		.loc 1 190 0
 775 02e6 00BF     		nop
 776 02e8 1037     		adds	r7, r7, #16
 777              		.cfi_def_cfa_offset 8
 778 02ea BD46     		mov	sp, r7
 779              		.cfi_def_cfa_register 13
 780              		@ sp needed
 781 02ec 80BD     		pop	{r7, pc}
 782              	.L42:
 783 02ee 00BF     		.align	2
 784              	.L41:
 785 02f0 00000000 		.word	msf_vars
 786              		.cfi_endproc
 787              	.LFE9:
 789              		.align	1
 790              		.global	msf_timer_housekeeping_task
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu softvfp
 796              	msf_timer_housekeeping_task:
 797              	.LFB10:
 191:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 192:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== tasks ============================================
 193:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 194:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_housekeeping_task(void){
 798              		.loc 1 194 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 02f4 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 02f6 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 195:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 196:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_housekeeping();
 808              		.loc 1 196 0
 809 02f8 FFF7FEFF 		bl	msf_housekeeping
 197:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 810              		.loc 1 197 0
 811 02fc 00BF     		nop
 812 02fe 80BD     		pop	{r7, pc}
 813              		.cfi_endproc
 814              	.LFE10:
 816              		.align	1
 817              		.global	msf_timer_clear_task
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu softvfp
 823              	msf_timer_clear_task:
 824              	.LFB11:
 198:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 199:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_timer_clear_task(void){
 825              		.loc 1 199 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 24
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829 0300 80B5     		push	{r7, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0302 8CB0     		sub	sp, sp, #48
 834              		.cfi_def_cfa_offset 56
 835 0304 06AF     		add	r7, sp, #24
 836              		.cfi_def_cfa 7, 32
 200:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     open_addr_t    neighbor;
 201:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     bool           foundNeighbor;
 202:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 203:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     // get preferred parent
 204:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     foundNeighbor = icmpv6rpl_getPreferredParentEui64(&neighbor);
 837              		.loc 1 204 0
 838 0306 3B1D     		adds	r3, r7, #4
 839 0308 1846     		mov	r0, r3
 840 030a FFF7FEFF 		bl	icmpv6rpl_getPreferredParentEui64
 841 030e 0346     		mov	r3, r0
 842 0310 FB75     		strb	r3, [r7, #23]
 205:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (foundNeighbor==FALSE) {
 843              		.loc 1 205 0
 844 0312 FB7D     		ldrb	r3, [r7, #23]
 845 0314 83F00103 		eor	r3, r3, #1
 846 0318 DBB2     		uxtb	r3, r3
 847 031a 002B     		cmp	r3, #0
 848 031c 10D1     		bne	.L47
 206:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 207:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 208:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 209:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     sixtop_request(
 849              		.loc 1 209 0
 850 031e 391D     		adds	r1, r7, #4
 851 0320 0023     		movs	r3, #0
 852 0322 0493     		str	r3, [sp, #16]
 853 0324 0023     		movs	r3, #0
 854 0326 0393     		str	r3, [sp, #12]
 855 0328 0023     		movs	r3, #0
 856 032a 0293     		str	r3, [sp, #8]
 857 032c 0023     		movs	r3, #0
 858 032e 0193     		str	r3, [sp, #4]
 859 0330 0023     		movs	r3, #0
 860 0332 0093     		str	r3, [sp]
 861 0334 0123     		movs	r3, #1
 862 0336 0122     		movs	r2, #1
 863 0338 0720     		movs	r0, #7
 864 033a FFF7FEFF 		bl	sixtop_request
 865 033e 00E0     		b	.L44
 866              	.L47:
 206:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 867              		.loc 1 206 0
 868 0340 00BF     		nop
 869              	.L44:
 210:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         IANA_6TOP_CMD_CLEAR,                // code
 211:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         &neighbor,                          // neighbor
 212:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NUMCELLS_MSF,                       // number cells
 213:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         CELLOPTIONS_MSF,                    // cellOptions
 214:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NULL,                               // celllist to add (not used)
 215:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NULL,                               // celllist to delete (not used)
 216:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         IANA_6TISCH_SFID_MSF,               // sfid
 217:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         0,                                  // list command offset (not used)
 218:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         0                                   // list command maximum celllist (not used)
 219:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     );
 220:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 870              		.loc 1 220 0
 871 0342 1837     		adds	r7, r7, #24
 872              		.cfi_def_cfa_offset 8
 873 0344 BD46     		mov	sp, r7
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 0346 80BD     		pop	{r7, pc}
 877              		.cfi_endproc
 878              	.LFE11:
 880              		.align	1
 881              		.global	msf_trigger6pAdd
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu softvfp
 887              	msf_trigger6pAdd:
 888              	.LFB12:
 221:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 222:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** //=========================== private =========================================
 223:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 224:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_trigger6pAdd(void){
 889              		.loc 1 224 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 48
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0348 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 034a 92B0     		sub	sp, sp, #72
 898              		.cfi_def_cfa_offset 80
 899 034c 06AF     		add	r7, sp, #24
 900              		.cfi_def_cfa 7, 56
 225:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     open_addr_t    neighbor;
 226:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     bool           foundNeighbor;
 227:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     cellInfo_ht    celllist_add[CELLLIST_MAX_LEN];
 228:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 229:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (ieee154e_isSynch()==FALSE) {
 901              		.loc 1 229 0
 902 034e FFF7FEFF 		bl	ieee154e_isSynch
 903 0352 0346     		mov	r3, r0
 904 0354 83F00103 		eor	r3, r3, #1
 905 0358 DBB2     		uxtb	r3, r3
 906 035a 002B     		cmp	r3, #0
 907 035c 2FD1     		bne	.L55
 230:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 231:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 232:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 233:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (msf_vars.waitretry){
 908              		.loc 1 233 0
 909 035e 1D4B     		ldr	r3, .L59
 910 0360 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 911 0362 002B     		cmp	r3, #0
 912 0364 2DD1     		bne	.L56
 234:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 235:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 236:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 237:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     // get preferred parent
 238:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     foundNeighbor = icmpv6rpl_getPreferredParentEui64(&neighbor);
 913              		.loc 1 238 0
 914 0366 07F11C03 		add	r3, r7, #28
 915 036a 1846     		mov	r0, r3
 916 036c FFF7FEFF 		bl	icmpv6rpl_getPreferredParentEui64
 917 0370 0346     		mov	r3, r0
 918 0372 87F82F30 		strb	r3, [r7, #47]
 239:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (foundNeighbor==FALSE) {
 919              		.loc 1 239 0
 920 0376 97F82F30 		ldrb	r3, [r7, #47]
 921 037a 83F00103 		eor	r3, r3, #1
 922 037e DBB2     		uxtb	r3, r3
 923 0380 002B     		cmp	r3, #0
 924 0382 20D1     		bne	.L57
 240:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 241:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 242:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 243:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (msf_candidateAddCellList(celllist_add,NUMCELLS_MSF)==FALSE){
 925              		.loc 1 243 0
 926 0384 3B46     		mov	r3, r7
 927 0386 0121     		movs	r1, #1
 928 0388 1846     		mov	r0, r3
 929 038a FFF7FEFF 		bl	msf_candidateAddCellList
 930 038e 0346     		mov	r3, r0
 931 0390 83F00103 		eor	r3, r3, #1
 932 0394 DBB2     		uxtb	r3, r3
 933 0396 002B     		cmp	r3, #0
 934 0398 17D1     		bne	.L58
 244:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // failed to get cell list to add
 245:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 246:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 247:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 248:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     sixtop_request(
 935              		.loc 1 248 0
 936 039a 07F11C01 		add	r1, r7, #28
 937 039e 0023     		movs	r3, #0
 938 03a0 0493     		str	r3, [sp, #16]
 939 03a2 0023     		movs	r3, #0
 940 03a4 0393     		str	r3, [sp, #12]
 941 03a6 0023     		movs	r3, #0
 942 03a8 0293     		str	r3, [sp, #8]
 943 03aa 0023     		movs	r3, #0
 944 03ac 0193     		str	r3, [sp, #4]
 945 03ae 3B46     		mov	r3, r7
 946 03b0 0093     		str	r3, [sp]
 947 03b2 0123     		movs	r3, #1
 948 03b4 0122     		movs	r2, #1
 949 03b6 0120     		movs	r0, #1
 950 03b8 FFF7FEFF 		bl	sixtop_request
 951 03bc 06E0     		b	.L48
 952              	.L55:
 230:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 953              		.loc 1 230 0
 954 03be 00BF     		nop
 955 03c0 04E0     		b	.L48
 956              	.L56:
 234:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 957              		.loc 1 234 0
 958 03c2 00BF     		nop
 959 03c4 02E0     		b	.L48
 960              	.L57:
 240:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 961              		.loc 1 240 0
 962 03c6 00BF     		nop
 963 03c8 00E0     		b	.L48
 964              	.L58:
 245:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 965              		.loc 1 245 0
 966 03ca 00BF     		nop
 967              	.L48:
 249:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         IANA_6TOP_CMD_ADD,                  // code
 250:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         &neighbor,                          // neighbor
 251:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NUMCELLS_MSF,                       // number cells
 252:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         CELLOPTIONS_MSF,                    // cellOptions
 253:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         celllist_add,                       // celllist to add
 254:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NULL,                               // celllist to delete (not used)
 255:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         IANA_6TISCH_SFID_MSF,               // sfid
 256:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         0,                                  // list command offset (not used)
 257:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         0                                   // list command maximum celllist (not used)
 258:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     );
 259:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 968              		.loc 1 259 0
 969 03cc 3037     		adds	r7, r7, #48
 970              		.cfi_def_cfa_offset 8
 971 03ce BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 03d0 80BD     		pop	{r7, pc}
 975              	.L60:
 976 03d2 00BF     		.align	2
 977              	.L59:
 978 03d4 00000000 		.word	msf_vars
 979              		.cfi_endproc
 980              	.LFE12:
 982              		.align	1
 983              		.global	msf_trigger6pDelete
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu softvfp
 989              	msf_trigger6pDelete:
 990              	.LFB13:
 260:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 261:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_trigger6pDelete(void){
 991              		.loc 1 261 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 48
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 03d8 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 03da 92B0     		sub	sp, sp, #72
 1000              		.cfi_def_cfa_offset 80
 1001 03dc 06AF     		add	r7, sp, #24
 1002              		.cfi_def_cfa 7, 56
 262:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     open_addr_t    neighbor;
 263:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     bool           foundNeighbor;
 264:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     cellInfo_ht    celllist_delete[CELLLIST_MAX_LEN];
 265:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 266:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (ieee154e_isSynch()==FALSE) {
 1003              		.loc 1 266 0
 1004 03de FFF7FEFF 		bl	ieee154e_isSynch
 1005 03e2 0346     		mov	r3, r0
 1006 03e4 83F00103 		eor	r3, r3, #1
 1007 03e8 DBB2     		uxtb	r3, r3
 1008 03ea 002B     		cmp	r3, #0
 1009 03ec 39D1     		bne	.L69
 267:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 268:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 269:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 270:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (msf_vars.waitretry){
 1010              		.loc 1 270 0
 1011 03ee 234B     		ldr	r3, .L74
 1012 03f0 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1013 03f2 002B     		cmp	r3, #0
 1014 03f4 37D1     		bne	.L70
 271:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 272:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 273:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 274:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     // get preferred parent
 275:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     foundNeighbor = icmpv6rpl_getPreferredParentEui64(&neighbor);
 1015              		.loc 1 275 0
 1016 03f6 07F11C03 		add	r3, r7, #28
 1017 03fa 1846     		mov	r0, r3
 1018 03fc FFF7FEFF 		bl	icmpv6rpl_getPreferredParentEui64
 1019 0400 0346     		mov	r3, r0
 1020 0402 87F82F30 		strb	r3, [r7, #47]
 276:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (foundNeighbor==FALSE) {
 1021              		.loc 1 276 0
 1022 0406 97F82F30 		ldrb	r3, [r7, #47]
 1023 040a 83F00103 		eor	r3, r3, #1
 1024 040e DBB2     		uxtb	r3, r3
 1025 0410 002B     		cmp	r3, #0
 1026 0412 2AD1     		bne	.L71
 277:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 278:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 279:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 280:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_getNumberOfManagedTxCells(&neighbor)<=1){
 1027              		.loc 1 280 0
 1028 0414 07F11C03 		add	r3, r7, #28
 1029 0418 1846     		mov	r0, r3
 1030 041a FFF7FEFF 		bl	schedule_getNumberOfManagedTxCells
 1031 041e 0346     		mov	r3, r0
 1032 0420 012B     		cmp	r3, #1
 1033 0422 24D9     		bls	.L72
 281:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // at least one managed Tx cell presents
 282:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 283:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 284:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 285:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (msf_candidateRemoveCellList(celllist_delete,&neighbor,NUMCELLS_MSF)==FALSE){
 1034              		.loc 1 285 0
 1035 0424 07F11C01 		add	r1, r7, #28
 1036 0428 3B46     		mov	r3, r7
 1037 042a 0122     		movs	r2, #1
 1038 042c 1846     		mov	r0, r3
 1039 042e FFF7FEFF 		bl	msf_candidateRemoveCellList
 1040 0432 0346     		mov	r3, r0
 1041 0434 83F00103 		eor	r3, r3, #1
 1042 0438 DBB2     		uxtb	r3, r3
 1043 043a 002B     		cmp	r3, #0
 1044 043c 19D1     		bne	.L73
 286:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // failed to get cell list to delete
 287:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 288:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 289:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     sixtop_request(
 1045              		.loc 1 289 0
 1046 043e 07F11C01 		add	r1, r7, #28
 1047 0442 0023     		movs	r3, #0
 1048 0444 0493     		str	r3, [sp, #16]
 1049 0446 0023     		movs	r3, #0
 1050 0448 0393     		str	r3, [sp, #12]
 1051 044a 0023     		movs	r3, #0
 1052 044c 0293     		str	r3, [sp, #8]
 1053 044e 3B46     		mov	r3, r7
 1054 0450 0193     		str	r3, [sp, #4]
 1055 0452 0023     		movs	r3, #0
 1056 0454 0093     		str	r3, [sp]
 1057 0456 0123     		movs	r3, #1
 1058 0458 0122     		movs	r2, #1
 1059 045a 0220     		movs	r0, #2
 1060 045c FFF7FEFF 		bl	sixtop_request
 1061 0460 08E0     		b	.L61
 1062              	.L69:
 267:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1063              		.loc 1 267 0
 1064 0462 00BF     		nop
 1065 0464 06E0     		b	.L61
 1066              	.L70:
 271:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1067              		.loc 1 271 0
 1068 0466 00BF     		nop
 1069 0468 04E0     		b	.L61
 1070              	.L71:
 277:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1071              		.loc 1 277 0
 1072 046a 00BF     		nop
 1073 046c 02E0     		b	.L61
 1074              	.L72:
 282:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1075              		.loc 1 282 0
 1076 046e 00BF     		nop
 1077 0470 00E0     		b	.L61
 1078              	.L73:
 287:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1079              		.loc 1 287 0
 1080 0472 00BF     		nop
 1081              	.L61:
 290:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         IANA_6TOP_CMD_DELETE,   // code
 291:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         &neighbor,              // neighbor
 292:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NUMCELLS_MSF,           // number cells
 293:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         CELLOPTIONS_MSF,        // cellOptions
 294:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         NULL,                   // celllist to add (not used)
 295:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         celllist_delete,        // celllist to delete
 296:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         IANA_6TISCH_SFID_MSF,   // sfid
 297:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         0,                      // list command offset (not used)
 298:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         0                       // list command maximum celllist (not used)
 299:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     );
 300:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1082              		.loc 1 300 0
 1083 0474 3037     		adds	r7, r7, #48
 1084              		.cfi_def_cfa_offset 8
 1085 0476 BD46     		mov	sp, r7
 1086              		.cfi_def_cfa_register 13
 1087              		@ sp needed
 1088 0478 80BD     		pop	{r7, pc}
 1089              	.L75:
 1090 047a 00BF     		.align	2
 1091              	.L74:
 1092 047c 00000000 		.word	msf_vars
 1093              		.cfi_endproc
 1094              	.LFE13:
 1096              		.align	1
 1097              		.global	msf_appPktPeriod
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu softvfp
 1103              	msf_appPktPeriod:
 1104              	.LFB14:
 301:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 302:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_appPktPeriod(uint8_t numAppPacketsPerSlotFrame){
 1105              		.loc 1 302 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110 0480 80B4     		push	{r7}
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0482 83B0     		sub	sp, sp, #12
 1114              		.cfi_def_cfa_offset 16
 1115 0484 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0486 0346     		mov	r3, r0
 1118 0488 FB71     		strb	r3, [r7, #7]
 303:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.numAppPacketsPerSlotFrame = numAppPacketsPerSlotFrame;
 1119              		.loc 1 303 0
 1120 048a 044A     		ldr	r2, .L77
 1121 048c FB79     		ldrb	r3, [r7, #7]
 1122 048e 5370     		strb	r3, [r2, #1]
 304:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1123              		.loc 1 304 0
 1124 0490 00BF     		nop
 1125 0492 0C37     		adds	r7, r7, #12
 1126              		.cfi_def_cfa_offset 4
 1127 0494 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 0496 80BC     		pop	{r7}
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
 1133 0498 7047     		bx	lr
 1134              	.L78:
 1135 049a 00BF     		.align	2
 1136              	.L77:
 1137 049c 00000000 		.word	msf_vars
 1138              		.cfi_endproc
 1139              	.LFE14:
 1141              		.align	1
 1142              		.global	msf_candidateAddCellList
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu softvfp
 1148              	msf_candidateAddCellList:
 1149              	.LFB15:
 305:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 306:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** bool msf_candidateAddCellList(
 307:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****       cellInfo_ht* cellList,
 308:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****       uint8_t      requiredCells
 309:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****    ){
 1150              		.loc 1 309 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 16
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 04a0 90B5     		push	{r4, r7, lr}
 1155              		.cfi_def_cfa_offset 12
 1156              		.cfi_offset 4, -12
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 04a2 85B0     		sub	sp, sp, #20
 1160              		.cfi_def_cfa_offset 32
 1161 04a4 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 1163 04a6 7860     		str	r0, [r7, #4]
 1164 04a8 0B46     		mov	r3, r1
 1165 04aa FB70     		strb	r3, [r7, #3]
 310:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint8_t i;
 311:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     frameLength_t slotoffset;
 312:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint8_t numCandCells;
 313:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 314:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     memset(cellList,0,CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 1166              		.loc 1 314 0
 1167 04ac 1922     		movs	r2, #25
 1168 04ae 0021     		movs	r1, #0
 1169 04b0 7868     		ldr	r0, [r7, #4]
 1170 04b2 FFF7FEFF 		bl	memset
 315:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     numCandCells=0;
 1171              		.loc 1 315 0
 1172 04b6 0023     		movs	r3, #0
 1173 04b8 BB73     		strb	r3, [r7, #14]
 316:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     for(i=0;i<CELLLIST_MAX_LEN;i++){
 1174              		.loc 1 316 0
 1175 04ba 0023     		movs	r3, #0
 1176 04bc FB73     		strb	r3, [r7, #15]
 1177 04be 39E0     		b	.L80
 1178              	.L82:
 317:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         slotoffset = openrandom_get16b()%schedule_getFrameLength();
 1179              		.loc 1 317 0
 1180 04c0 FFF7FEFF 		bl	openrandom_get16b
 1181 04c4 0346     		mov	r3, r0
 1182 04c6 1C46     		mov	r4, r3
 1183 04c8 FFF7FEFF 		bl	schedule_getFrameLength
 1184 04cc 0346     		mov	r3, r0
 1185 04ce B4FBF3F2 		udiv	r2, r4, r3
 1186 04d2 03FB02F3 		mul	r3, r3, r2
 1187 04d6 E31A     		subs	r3, r4, r3
 1188 04d8 BB81     		strh	r3, [r7, #12]	@ movhi
 318:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if(schedule_isSlotOffsetAvailable(slotoffset)==TRUE){
 1189              		.loc 1 318 0
 1190 04da BB89     		ldrh	r3, [r7, #12]
 1191 04dc 1846     		mov	r0, r3
 1192 04de FFF7FEFF 		bl	schedule_isSlotOffsetAvailable
 1193 04e2 0346     		mov	r3, r0
 1194 04e4 002B     		cmp	r3, #0
 1195 04e6 22D0     		beq	.L81
 319:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             cellList[numCandCells].slotoffset       = slotoffset;
 1196              		.loc 1 319 0
 1197 04e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1198 04ea 1346     		mov	r3, r2
 1199 04ec 9B00     		lsls	r3, r3, #2
 1200 04ee 1344     		add	r3, r3, r2
 1201 04f0 7A68     		ldr	r2, [r7, #4]
 1202 04f2 1344     		add	r3, r3, r2
 1203 04f4 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1204 04f6 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 320:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             cellList[numCandCells].channeloffset    = openrandom_get16b()&0x0F;
 1205              		.loc 1 320 0
 1206 04fa FFF7FEFF 		bl	openrandom_get16b
 1207 04fe 0346     		mov	r3, r0
 1208 0500 1946     		mov	r1, r3
 1209 0502 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1210 0504 1346     		mov	r3, r2
 1211 0506 9B00     		lsls	r3, r3, #2
 1212 0508 1344     		add	r3, r3, r2
 1213 050a 7A68     		ldr	r2, [r7, #4]
 1214 050c 1344     		add	r3, r3, r2
 1215 050e 01F00F02 		and	r2, r1, #15
 1216 0512 92B2     		uxth	r2, r2
 1217 0514 A3F80320 		strh	r2, [r3, #3]	@ unaligned
 321:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             cellList[numCandCells].isUsed           = TRUE;
 1218              		.loc 1 321 0
 1219 0518 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1220 051a 1346     		mov	r3, r2
 1221 051c 9B00     		lsls	r3, r3, #2
 1222 051e 1344     		add	r3, r3, r2
 1223 0520 7A68     		ldr	r2, [r7, #4]
 1224 0522 1344     		add	r3, r3, r2
 1225 0524 0122     		movs	r2, #1
 1226 0526 1A70     		strb	r2, [r3]
 322:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             numCandCells++;
 1227              		.loc 1 322 0
 1228 0528 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1229 052a 0133     		adds	r3, r3, #1
 1230 052c BB73     		strb	r3, [r7, #14]
 1231              	.L81:
 316:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         slotoffset = openrandom_get16b()%schedule_getFrameLength();
 1232              		.loc 1 316 0 discriminator 2
 1233 052e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1234 0530 0133     		adds	r3, r3, #1
 1235 0532 FB73     		strb	r3, [r7, #15]
 1236              	.L80:
 316:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         slotoffset = openrandom_get16b()%schedule_getFrameLength();
 1237              		.loc 1 316 0 is_stmt 0 discriminator 1
 1238 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1239 0536 042B     		cmp	r3, #4
 1240 0538 C2D9     		bls	.L82
 323:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
 324:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 325:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 326:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (numCandCells<requiredCells || requiredCells==0) {
 1241              		.loc 1 326 0 is_stmt 1
 1242 053a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1243 053c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1244 053e 9A42     		cmp	r2, r3
 1245 0540 02D3     		bcc	.L83
 1246              		.loc 1 326 0 is_stmt 0 discriminator 1
 1247 0542 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1248 0544 002B     		cmp	r3, #0
 1249 0546 01D1     		bne	.L84
 1250              	.L83:
 327:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return FALSE;
 1251              		.loc 1 327 0 is_stmt 1
 1252 0548 0023     		movs	r3, #0
 1253 054a 00E0     		b	.L85
 1254              	.L84:
 328:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     } else {
 329:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return TRUE;
 1255              		.loc 1 329 0
 1256 054c 0123     		movs	r3, #1
 1257              	.L85:
 330:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 331:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1258              		.loc 1 331 0
 1259 054e 1846     		mov	r0, r3
 1260 0550 1437     		adds	r7, r7, #20
 1261              		.cfi_def_cfa_offset 12
 1262 0552 BD46     		mov	sp, r7
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 0554 90BD     		pop	{r4, r7, pc}
 1266              		.cfi_endproc
 1267              	.LFE15:
 1269              		.align	1
 1270              		.global	msf_candidateRemoveCellList
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu softvfp
 1276              	msf_candidateRemoveCellList:
 1277              	.LFB16:
 332:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 333:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** bool msf_candidateRemoveCellList(
 334:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****       cellInfo_ht* cellList,
 335:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****       open_addr_t* neighbor,
 336:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****       uint8_t      requiredCells
 337:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****    ){
 1278              		.loc 1 337 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 48
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0556 90B5     		push	{r4, r7, lr}
 1283              		.cfi_def_cfa_offset 12
 1284              		.cfi_offset 4, -12
 1285              		.cfi_offset 7, -8
 1286              		.cfi_offset 14, -4
 1287 0558 8DB0     		sub	sp, sp, #52
 1288              		.cfi_def_cfa_offset 64
 1289 055a 00AF     		add	r7, sp, #0
 1290              		.cfi_def_cfa_register 7
 1291 055c F860     		str	r0, [r7, #12]
 1292 055e B960     		str	r1, [r7, #8]
 1293 0560 1346     		mov	r3, r2
 1294 0562 FB71     		strb	r3, [r7, #7]
 338:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint8_t              i;
 339:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint8_t              numCandCells;
 340:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     slotinfo_element_t   info;
 341:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 342:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     memset(cellList,0,CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 1295              		.loc 1 342 0
 1296 0564 1922     		movs	r2, #25
 1297 0566 0021     		movs	r1, #0
 1298 0568 F868     		ldr	r0, [r7, #12]
 1299 056a FFF7FEFF 		bl	memset
 343:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     numCandCells    = 0;
 1300              		.loc 1 343 0
 1301 056e 0023     		movs	r3, #0
 1302 0570 87F82E30 		strb	r3, [r7, #46]
 344:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     for(i=0;i<schedule_getFrameLength();i++){
 1303              		.loc 1 344 0
 1304 0574 0023     		movs	r3, #0
 1305 0576 87F82F30 		strb	r3, [r7, #47]
 1306 057a 3BE0     		b	.L87
 1307              	.L90:
 345:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         schedule_getSlotInfo(i,&info);
 1308              		.loc 1 345 0
 1309 057c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 1310 0580 9BB2     		uxth	r3, r3
 1311 0582 07F11402 		add	r2, r7, #20
 1312 0586 1146     		mov	r1, r2
 1313 0588 1846     		mov	r0, r3
 1314 058a FFF7FEFF 		bl	schedule_getSlotInfo
 346:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if(info.link_type == CELLTYPE_TX){
 1315              		.loc 1 346 0
 1316 058e 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 1317 0592 012B     		cmp	r3, #1
 1318 0594 29D1     		bne	.L88
 347:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             cellList[numCandCells].slotoffset       = i;
 1319              		.loc 1 347 0
 1320 0596 97F82E20 		ldrb	r2, [r7, #46]	@ zero_extendqisi2
 1321 059a 1346     		mov	r3, r2
 1322 059c 9B00     		lsls	r3, r3, #2
 1323 059e 1344     		add	r3, r3, r2
 1324 05a0 FA68     		ldr	r2, [r7, #12]
 1325 05a2 1344     		add	r3, r3, r2
 1326 05a4 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 1327 05a8 92B2     		uxth	r2, r2
 1328 05aa A3F80120 		strh	r2, [r3, #1]	@ unaligned
 348:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             cellList[numCandCells].channeloffset    = info.channelOffset;
 1329              		.loc 1 348 0
 1330 05ae 97F82A10 		ldrb	r1, [r7, #42]	@ zero_extendqisi2
 1331 05b2 97F82E20 		ldrb	r2, [r7, #46]	@ zero_extendqisi2
 1332 05b6 1346     		mov	r3, r2
 1333 05b8 9B00     		lsls	r3, r3, #2
 1334 05ba 1344     		add	r3, r3, r2
 1335 05bc FA68     		ldr	r2, [r7, #12]
 1336 05be 1344     		add	r3, r3, r2
 1337 05c0 8AB2     		uxth	r2, r1
 1338 05c2 A3F80320 		strh	r2, [r3, #3]	@ unaligned
 349:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             cellList[numCandCells].isUsed           = TRUE;
 1339              		.loc 1 349 0
 1340 05c6 97F82E20 		ldrb	r2, [r7, #46]	@ zero_extendqisi2
 1341 05ca 1346     		mov	r3, r2
 1342 05cc 9B00     		lsls	r3, r3, #2
 1343 05ce 1344     		add	r3, r3, r2
 1344 05d0 FA68     		ldr	r2, [r7, #12]
 1345 05d2 1344     		add	r3, r3, r2
 1346 05d4 0122     		movs	r2, #1
 1347 05d6 1A70     		strb	r2, [r3]
 350:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             numCandCells++;
 1348              		.loc 1 350 0
 1349 05d8 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 1350 05dc 0133     		adds	r3, r3, #1
 1351 05de 87F82E30 		strb	r3, [r7, #46]
 351:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             if (numCandCells==CELLLIST_MAX_LEN){
 1352              		.loc 1 351 0
 1353 05e2 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 1354 05e6 052B     		cmp	r3, #5
 1355 05e8 0DD0     		beq	.L94
 1356              	.L88:
 344:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         schedule_getSlotInfo(i,&info);
 1357              		.loc 1 344 0 discriminator 2
 1358 05ea 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 1359 05ee 0133     		adds	r3, r3, #1
 1360 05f0 87F82F30 		strb	r3, [r7, #47]
 1361              	.L87:
 344:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         schedule_getSlotInfo(i,&info);
 1362              		.loc 1 344 0 is_stmt 0 discriminator 1
 1363 05f4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 1364 05f8 9CB2     		uxth	r4, r3
 1365 05fa FFF7FEFF 		bl	schedule_getFrameLength
 1366 05fe 0346     		mov	r3, r0
 1367 0600 9C42     		cmp	r4, r3
 1368 0602 BBD3     		bcc	.L90
 1369 0604 00E0     		b	.L89
 1370              	.L94:
 352:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 break;
 1371              		.loc 1 352 0 is_stmt 1
 1372 0606 00BF     		nop
 1373              	.L89:
 353:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             }
 354:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
 355:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 356:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 357:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if(numCandCells<requiredCells){
 1374              		.loc 1 357 0
 1375 0608 97F82E20 		ldrb	r2, [r7, #46]	@ zero_extendqisi2
 1376 060c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1377 060e 9A42     		cmp	r2, r3
 1378 0610 01D2     		bcs	.L91
 358:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return FALSE;
 1379              		.loc 1 358 0
 1380 0612 0023     		movs	r3, #0
 1381 0614 00E0     		b	.L93
 1382              	.L91:
 359:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }else{
 360:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return TRUE;
 1383              		.loc 1 360 0
 1384 0616 0123     		movs	r3, #1
 1385              	.L93:
 361:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 362:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1386              		.loc 1 362 0 discriminator 1
 1387 0618 1846     		mov	r0, r3
 1388 061a 3437     		adds	r7, r7, #52
 1389              		.cfi_def_cfa_offset 12
 1390 061c BD46     		mov	sp, r7
 1391              		.cfi_def_cfa_register 13
 1392              		@ sp needed
 1393 061e 90BD     		pop	{r4, r7, pc}
 1394              		.cfi_endproc
 1395              	.LFE16:
 1397              		.align	1
 1398              		.global	msf_housekeeping
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1402              		.fpu softvfp
 1404              	msf_housekeeping:
 1405              	.LFB17:
 363:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 364:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void msf_housekeeping(void){
 1406              		.loc 1 364 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 128
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410 0620 80B5     		push	{r7, lr}
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0622 A6B0     		sub	sp, sp, #152
 1415              		.cfi_def_cfa_offset 160
 1416 0624 06AF     		add	r7, sp, #24
 1417              		.cfi_def_cfa 7, 136
 365:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 366:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     open_addr_t    parentNeighbor;
 367:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     open_addr_t    nonParentNeighbor;
 368:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     bool           foundNeighbor;
 369:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     cellInfo_ht    celllist_add[CELLLIST_MAX_LEN];
 370:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     cellInfo_ht    celllist_delete[CELLLIST_MAX_LEN];
 371:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 372:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint16_t       moteId;
 373:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint16_t       slotoffset;
 374:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint16_t       temp_slotoffset;
 375:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     uint8_t        channeloffset;
 376:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 377:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     slotinfo_element_t  info;
 378:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 379:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (ieee154e_isSynch()==FALSE) {
 1418              		.loc 1 379 0
 1419 0626 FFF7FEFF 		bl	ieee154e_isSynch
 1420 062a 0346     		mov	r3, r0
 1421 062c 83F00103 		eor	r3, r3, #1
 1422 0630 DBB2     		uxtb	r3, r3
 1423 0632 002B     		cmp	r3, #0
 1424 0634 40F00A81 		bne	.L111
 380:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 381:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 382:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 383:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     foundNeighbor = icmpv6rpl_getPreferredParentEui64(&parentNeighbor);
 1425              		.loc 1 383 0
 1426 0638 07F16803 		add	r3, r7, #104
 1427 063c 1846     		mov	r0, r3
 1428 063e FFF7FEFF 		bl	icmpv6rpl_getPreferredParentEui64
 1429 0642 0346     		mov	r3, r0
 1430 0644 87F87F30 		strb	r3, [r7, #127]
 384:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (foundNeighbor==FALSE) {
 1431              		.loc 1 384 0
 1432 0648 97F87F30 		ldrb	r3, [r7, #127]
 1433 064c 83F00103 		eor	r3, r3, #1
 1434 0650 DBB2     		uxtb	r3, r3
 1435 0652 002B     		cmp	r3, #0
 1436 0654 40F0FC80 		bne	.L112
 385:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 386:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 387:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 388:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_hasNonParentAutonomousTxRxCellUnicast(&parentNeighbor, &nonParentNeighbor)==TRUE){
 1437              		.loc 1 388 0
 1438 0658 07F15402 		add	r2, r7, #84
 1439 065c 07F16803 		add	r3, r7, #104
 1440 0660 1146     		mov	r1, r2
 1441 0662 1846     		mov	r0, r3
 1442 0664 FFF7FEFF 		bl	schedule_hasNonParentAutonomousTxRxCellUnicast
 1443 0668 0346     		mov	r3, r0
 1444 066a 002B     		cmp	r3, #0
 1445 066c 1ED0     		beq	.L99
 389:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 390:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if (schedule_hasManagedTxCellToNeighbor(&nonParentNeighbor)){
 1446              		.loc 1 390 0
 1447 066e 07F15403 		add	r3, r7, #84
 1448 0672 1846     		mov	r0, r3
 1449 0674 FFF7FEFF 		bl	schedule_hasManagedTxCellToNeighbor
 1450 0678 0346     		mov	r3, r0
 1451 067a 002B     		cmp	r3, #0
 1452 067c 11D0     		beq	.L100
 391:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             // send a clear request to previous
 392:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 393:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             sixtop_request(
 1453              		.loc 1 393 0
 1454 067e 07F15401 		add	r1, r7, #84
 1455 0682 0023     		movs	r3, #0
 1456 0684 0493     		str	r3, [sp, #16]
 1457 0686 0023     		movs	r3, #0
 1458 0688 0393     		str	r3, [sp, #12]
 1459 068a 0023     		movs	r3, #0
 1460 068c 0293     		str	r3, [sp, #8]
 1461 068e 0023     		movs	r3, #0
 1462 0690 0193     		str	r3, [sp, #4]
 1463 0692 0023     		movs	r3, #0
 1464 0694 0093     		str	r3, [sp]
 1465 0696 0123     		movs	r3, #1
 1466 0698 0122     		movs	r2, #1
 1467 069a 0720     		movs	r0, #7
 1468 069c FFF7FEFF 		bl	sixtop_request
 394:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 IANA_6TOP_CMD_CLEAR,                // code
 395:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 &nonParentNeighbor,                  // neighbor
 396:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 NUMCELLS_MSF,                       // number cells
 397:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 CELLOPTIONS_MSF,                    // cellOptions
 398:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 NULL,                               // celllist to add (not used)
 399:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 NULL,                               // celllist to delete (not used)
 400:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 IANA_6TISCH_SFID_MSF,               // sfid
 401:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 0,                                  // list command offset (not used)
 402:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 0                                   // list command maximum celllist (not used)
 403:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             );
 404:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             return;
 1469              		.loc 1 404 0
 1470 06a0 DFE0     		b	.L95
 1471              	.L100:
 405:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         } else {
 406:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             // remove the non-parent autonomous TxRxUnicast cell
 407:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 408:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             neighbor_removeAutonomousTxRxCellUnicast(&nonParentNeighbor);
 1472              		.loc 1 408 0
 1473 06a2 07F15403 		add	r3, r7, #84
 1474 06a6 1846     		mov	r0, r3
 1475 06a8 FFF7FEFF 		bl	neighbor_removeAutonomousTxRxCellUnicast
 1476              	.L99:
 409:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
 410:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 411:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 412:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_hasAutonomousTxRxCellUnicast(&parentNeighbor)==FALSE){
 1477              		.loc 1 412 0
 1478 06ac 07F16803 		add	r3, r7, #104
 1479 06b0 1846     		mov	r0, r3
 1480 06b2 FFF7FEFF 		bl	schedule_hasAutonomousTxRxCellUnicast
 1481 06b6 0346     		mov	r3, r0
 1482 06b8 83F00103 		eor	r3, r3, #1
 1483 06bc DBB2     		uxtb	r3, r3
 1484 06be 002B     		cmp	r3, #0
 1485 06c0 78D0     		beq	.L101
 413:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 414:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         moteId          = 256*parentNeighbor.addr_64b[6]+parentNeighbor.addr_64b[7];
 1486              		.loc 1 414 0
 1487 06c2 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1488 06c6 9BB2     		uxth	r3, r3
 1489 06c8 1B02     		lsls	r3, r3, #8
 1490 06ca 9AB2     		uxth	r2, r3
 1491 06cc 97F87030 		ldrb	r3, [r7, #112]	@ zero_extendqisi2
 1492 06d0 9BB2     		uxth	r3, r3
 1493 06d2 1344     		add	r3, r3, r2
 1494 06d4 A7F87C30 		strh	r3, [r7, #124]	@ movhi
 415:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         slotoffset      = msf_hashFunction_getSlotoffset(moteId);
 1495              		.loc 1 415 0
 1496 06d8 B7F87C30 		ldrh	r3, [r7, #124]
 1497 06dc 1846     		mov	r0, r3
 1498 06de FFF7FEFF 		bl	msf_hashFunction_getSlotoffset
 1499 06e2 0346     		mov	r3, r0
 1500 06e4 A7F87A30 		strh	r3, [r7, #122]	@ movhi
 416:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         channeloffset   = msf_hashFunction_getChanneloffset(moteId);
 1501              		.loc 1 416 0
 1502 06e8 B7F87C30 		ldrh	r3, [r7, #124]
 1503 06ec 1846     		mov	r0, r3
 1504 06ee FFF7FEFF 		bl	msf_hashFunction_getChanneloffset
 1505 06f2 0346     		mov	r3, r0
 1506 06f4 87F87930 		strb	r3, [r7, #121]
 417:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 418:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         // the neighbor is selected as parent
 419:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if (
 420:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             schedule_getAutonomousTxRxCellAnycast(&temp_slotoffset) &&
 1507              		.loc 1 420 0
 1508 06f8 07F11A03 		add	r3, r7, #26
 1509 06fc 1846     		mov	r0, r3
 1510 06fe FFF7FEFF 		bl	schedule_getAutonomousTxRxCellAnycast
 1511 0702 0346     		mov	r3, r0
 419:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             schedule_getAutonomousTxRxCellAnycast(&temp_slotoffset) &&
 1512              		.loc 1 419 0
 1513 0704 002B     		cmp	r3, #0
 1514 0706 08D0     		beq	.L102
 421:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             temp_slotoffset == slotoffset
 1515              		.loc 1 421 0
 1516 0708 7B8B     		ldrh	r3, [r7, #26]
 420:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             temp_slotoffset == slotoffset
 1517              		.loc 1 420 0
 1518 070a B7F87A20 		ldrh	r2, [r7, #122]
 1519 070e 9A42     		cmp	r2, r3
 1520 0710 03D1     		bne	.L102
 422:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         ){
 423:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             msf_setHashCollisionFlag(TRUE);
 1521              		.loc 1 423 0
 1522 0712 0120     		movs	r0, #1
 1523 0714 FFF7FEFF 		bl	msf_setHashCollisionFlag
 1524 0718 4CE0     		b	.L101
 1525              	.L102:
 424:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         } else {
 425:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             if (schedule_isSlotOffsetAvailable(slotoffset)){
 1526              		.loc 1 425 0
 1527 071a B7F87A30 		ldrh	r3, [r7, #122]
 1528 071e 1846     		mov	r0, r3
 1529 0720 FFF7FEFF 		bl	schedule_isSlotOffsetAvailable
 1530 0724 0346     		mov	r3, r0
 1531 0726 002B     		cmp	r3, #0
 1532 0728 0CD0     		beq	.L103
 426:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 // reserve the autonomous cell to this neighbor
 427:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 schedule_addActiveSlot(
 1533              		.loc 1 427 0
 1534 072a 97F87920 		ldrb	r2, [r7, #121]	@ zero_extendqisi2
 1535 072e B7F87A00 		ldrh	r0, [r7, #122]
 1536 0732 07F16803 		add	r3, r7, #104
 1537 0736 0093     		str	r3, [sp]
 1538 0738 1346     		mov	r3, r2
 1539 073a 0122     		movs	r2, #1
 1540 073c 0321     		movs	r1, #3
 1541 073e FFF7FEFF 		bl	schedule_addActiveSlot
 1542 0742 37E0     		b	.L101
 1543              	.L103:
 428:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     slotoffset,                                 // slot offset
 429:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     CELLTYPE_TXRX,                              // type of slot
 430:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     TRUE,                                       // shared?
 431:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     channeloffset,                              // channel offset
 432:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     &(parentNeighbor)                           // neighbor
 433:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 );
 434:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             } else {
 435:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 // the autonomous cell has been occupied by other slot
 436:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 // trigger a 6P relocate packet to relocate that slot
 437:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 438:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 // prepare the celllist to delete
 439:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 schedule_getSlotInfo(slotoffset, &info);
 1544              		.loc 1 439 0
 1545 0744 3A46     		mov	r2, r7
 1546 0746 B7F87A30 		ldrh	r3, [r7, #122]
 1547 074a 1146     		mov	r1, r2
 1548 074c 1846     		mov	r0, r3
 1549 074e FFF7FEFF 		bl	schedule_getSlotInfo
 440:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 memset(celllist_delete, 0, CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 1550              		.loc 1 440 0
 1551 0752 07F11C03 		add	r3, r7, #28
 1552 0756 1922     		movs	r2, #25
 1553 0758 0021     		movs	r1, #0
 1554 075a 1846     		mov	r0, r3
 1555 075c FFF7FEFF 		bl	memset
 441:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 celllist_delete[0].isUsed               = TRUE;
 1556              		.loc 1 441 0
 1557 0760 0123     		movs	r3, #1
 1558 0762 3B77     		strb	r3, [r7, #28]
 442:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 celllist_delete[0].slotoffset           = slotoffset;
 1559              		.loc 1 442 0
 1560 0764 B7F87A30 		ldrh	r3, [r7, #122]	@ movhi
 1561 0768 A7F81D30 		strh	r3, [r7, #29]	@ unaligned
 443:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 celllist_delete[0].channeloffset        = info.channelOffset;
 1562              		.loc 1 443 0
 1563 076c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1564 076e 9BB2     		uxth	r3, r3
 1565 0770 A7F81F30 		strh	r3, [r7, #31]	@ unaligned
 444:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 445:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 // prepare the celllist to add
 446:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 if (msf_candidateAddCellList(celllist_add,NUMCELLS_MSF)==FALSE){
 1566              		.loc 1 446 0
 1567 0774 07F13803 		add	r3, r7, #56
 1568 0778 0121     		movs	r1, #1
 1569 077a 1846     		mov	r0, r3
 1570 077c FFF7FEFF 		bl	msf_candidateAddCellList
 1571 0780 0346     		mov	r3, r0
 1572 0782 83F00103 		eor	r3, r3, #1
 1573 0786 DBB2     		uxtb	r3, r3
 1574 0788 002B     		cmp	r3, #0
 1575 078a 63D1     		bne	.L113
 447:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     // failed to get cell list to add
 448:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     return;
 449:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 }
 450:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 451:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 sixtop_request(
 452:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     IANA_6TOP_CMD_RELOCATE,   // code
 453:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     &(info.address),          // neighbor
 454:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     NUMCELLS_MSF,             // number cells
 455:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     info.link_type,           // cellOptions
 1576              		.loc 1 455 0
 1577 078c 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
 451:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     IANA_6TOP_CMD_RELOCATE,   // code
 1578              		.loc 1 451 0
 1579 078e 3946     		mov	r1, r7
 1580 0790 0023     		movs	r3, #0
 1581 0792 0493     		str	r3, [sp, #16]
 1582 0794 0023     		movs	r3, #0
 1583 0796 0393     		str	r3, [sp, #12]
 1584 0798 0023     		movs	r3, #0
 1585 079a 0293     		str	r3, [sp, #8]
 1586 079c 07F11C03 		add	r3, r7, #28
 1587 07a0 0193     		str	r3, [sp, #4]
 1588 07a2 07F13803 		add	r3, r7, #56
 1589 07a6 0093     		str	r3, [sp]
 1590 07a8 1346     		mov	r3, r2
 1591 07aa 0122     		movs	r2, #1
 1592 07ac 0320     		movs	r0, #3
 1593 07ae FFF7FEFF 		bl	sixtop_request
 456:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     celllist_add,             // celllist to add
 457:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     celllist_delete,          // celllist to delete
 458:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     IANA_6TISCH_SFID_MSF,     // sfid
 459:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     0,                        // list command offset (not used)
 460:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                     0                         // list command maximum celllist (not used)
 461:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 );
 462:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 return;
 1594              		.loc 1 462 0
 1595 07b2 56E0     		b	.L95
 1596              	.L101:
 463:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             }
 464:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
 465:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 466:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 467:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_getNumberOfManagedTxCells(&parentNeighbor)==0){
 1597              		.loc 1 467 0
 1598 07b4 07F16803 		add	r3, r7, #104
 1599 07b8 1846     		mov	r0, r3
 1600 07ba FFF7FEFF 		bl	schedule_getNumberOfManagedTxCells
 1601 07be 0346     		mov	r3, r0
 1602 07c0 002B     		cmp	r3, #0
 1603 07c2 02D1     		bne	.L105
 468:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         msf_trigger6pAdd();
 1604              		.loc 1 468 0
 1605 07c4 FFF7FEFF 		bl	msf_trigger6pAdd
 469:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 1606              		.loc 1 469 0
 1607 07c8 4BE0     		b	.L95
 1608              	.L105:
 470:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 471:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 472:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (msf_vars.waitretry){
 1609              		.loc 1 472 0
 1610 07ca 274B     		ldr	r3, .L117
 1611 07cc 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1612 07ce 002B     		cmp	r3, #0
 1613 07d0 42D1     		bne	.L114
 473:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 474:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 475:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 476:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_isNumTxWrapped(&parentNeighbor)==FALSE){
 1614              		.loc 1 476 0
 1615 07d2 07F16803 		add	r3, r7, #104
 1616 07d6 1846     		mov	r0, r3
 1617 07d8 FFF7FEFF 		bl	schedule_isNumTxWrapped
 1618 07dc 0346     		mov	r3, r0
 1619 07de 83F00103 		eor	r3, r3, #1
 1620 07e2 DBB2     		uxtb	r3, r3
 1621 07e4 002B     		cmp	r3, #0
 1622 07e6 39D1     		bne	.L115
 477:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         return;
 478:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 479:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 480:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     memset(celllist_delete, 0, CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 1623              		.loc 1 480 0
 1624 07e8 07F11C03 		add	r3, r7, #28
 1625 07ec 1922     		movs	r2, #25
 1626 07ee 0021     		movs	r1, #0
 1627 07f0 1846     		mov	r0, r3
 1628 07f2 FFF7FEFF 		bl	memset
 481:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     if (schedule_getCellsToBeRelocated(&parentNeighbor, celllist_delete)){
 1629              		.loc 1 481 0
 1630 07f6 07F11C02 		add	r2, r7, #28
 1631 07fa 07F16803 		add	r3, r7, #104
 1632 07fe 1146     		mov	r1, r2
 1633 0800 1846     		mov	r0, r3
 1634 0802 FFF7FEFF 		bl	schedule_getCellsToBeRelocated
 1635 0806 0346     		mov	r3, r0
 1636 0808 002B     		cmp	r3, #0
 1637 080a 2AD0     		beq	.L95
 482:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         if (msf_candidateAddCellList(celllist_add,NUMCELLS_MSF)==FALSE){
 1638              		.loc 1 482 0
 1639 080c 07F13803 		add	r3, r7, #56
 1640 0810 0121     		movs	r1, #1
 1641 0812 1846     		mov	r0, r3
 1642 0814 FFF7FEFF 		bl	msf_candidateAddCellList
 1643 0818 0346     		mov	r3, r0
 1644 081a 83F00103 		eor	r3, r3, #1
 1645 081e DBB2     		uxtb	r3, r3
 1646 0820 002B     		cmp	r3, #0
 1647 0822 1DD1     		bne	.L116
 483:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             // failed to get cell list to add
 484:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             return;
 485:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
 486:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         sixtop_request(
 1648              		.loc 1 486 0
 1649 0824 07F16801 		add	r1, r7, #104
 1650 0828 0023     		movs	r3, #0
 1651 082a 0493     		str	r3, [sp, #16]
 1652 082c 0023     		movs	r3, #0
 1653 082e 0393     		str	r3, [sp, #12]
 1654 0830 0023     		movs	r3, #0
 1655 0832 0293     		str	r3, [sp, #8]
 1656 0834 07F11C03 		add	r3, r7, #28
 1657 0838 0193     		str	r3, [sp, #4]
 1658 083a 07F13803 		add	r3, r7, #56
 1659 083e 0093     		str	r3, [sp]
 1660 0840 0123     		movs	r3, #1
 1661 0842 0122     		movs	r2, #1
 1662 0844 0320     		movs	r0, #3
 1663 0846 FFF7FEFF 		bl	sixtop_request
 1664 084a 0AE0     		b	.L95
 1665              	.L111:
 380:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1666              		.loc 1 380 0
 1667 084c 00BF     		nop
 1668 084e 08E0     		b	.L95
 1669              	.L112:
 385:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1670              		.loc 1 385 0
 1671 0850 00BF     		nop
 1672 0852 06E0     		b	.L95
 1673              	.L113:
 448:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****                 }
 1674              		.loc 1 448 0
 1675 0854 00BF     		nop
 1676 0856 04E0     		b	.L95
 1677              	.L114:
 473:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1678              		.loc 1 473 0
 1679 0858 00BF     		nop
 1680 085a 02E0     		b	.L95
 1681              	.L115:
 477:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 1682              		.loc 1 477 0
 1683 085c 00BF     		nop
 1684 085e 00E0     		b	.L95
 1685              	.L116:
 484:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         }
 1686              		.loc 1 484 0
 1687 0860 00BF     		nop
 1688              	.L95:
 487:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             IANA_6TOP_CMD_RELOCATE,   // code
 488:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             &parentNeighbor,          // neighbor
 489:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             NUMCELLS_MSF,             // number cells
 490:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             CELLOPTIONS_MSF,          // cellOptions
 491:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             celllist_add,             // celllist to add
 492:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             celllist_delete,          // celllist to delete
 493:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             IANA_6TISCH_SFID_MSF,     // sfid
 494:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             0,                        // list command offset (not used)
 495:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             0                         // list command maximum celllist (not used)
 496:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****         );
 497:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     }
 498:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1689              		.loc 1 498 0
 1690 0862 8037     		adds	r7, r7, #128
 1691              		.cfi_def_cfa_offset 8
 1692 0864 BD46     		mov	sp, r7
 1693              		.cfi_def_cfa_register 13
 1694              		@ sp needed
 1695 0866 80BD     		pop	{r7, pc}
 1696              	.L118:
 1697              		.align	2
 1698              	.L117:
 1699 0868 00000000 		.word	msf_vars
 1700              		.cfi_endproc
 1701              	.LFE17:
 1703              		.align	1
 1704              		.global	msf_hashFunction_getSlotoffset
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu softvfp
 1710              	msf_hashFunction_getSlotoffset:
 1711              	.LFB18:
 499:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 500:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** uint16_t msf_hashFunction_getSlotoffset(uint16_t moteId){
 1712              		.loc 1 500 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 8
 1715              		@ frame_needed = 1, uses_anonymous_args = 0
 1716              		@ link register save eliminated.
 1717 086c 80B4     		push	{r7}
 1718              		.cfi_def_cfa_offset 4
 1719              		.cfi_offset 7, -4
 1720 086e 83B0     		sub	sp, sp, #12
 1721              		.cfi_def_cfa_offset 16
 1722 0870 00AF     		add	r7, sp, #0
 1723              		.cfi_def_cfa_register 7
 1724 0872 0346     		mov	r3, r0
 1725 0874 FB80     		strh	r3, [r7, #6]	@ movhi
 501:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 502:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     return SCHEDULE_MINIMAL_6TISCH_ACTIVE_CELLS + \
 1726              		.loc 1 502 0
 1727 0876 FA88     		ldrh	r2, [r7, #6]
 1728 0878 084B     		ldr	r3, .L121
 1729 087a A3FB0213 		umull	r1, r3, r3, r2
 1730 087e D908     		lsrs	r1, r3, #3
 1731 0880 0B46     		mov	r3, r1
 1732 0882 5B00     		lsls	r3, r3, #1
 1733 0884 0B44     		add	r3, r3, r1
 1734 0886 9B00     		lsls	r3, r3, #2
 1735 0888 D31A     		subs	r3, r2, r3
 1736 088a 9BB2     		uxth	r3, r3
 1737 088c 0133     		adds	r3, r3, #1
 1738 088e 9BB2     		uxth	r3, r3
 503:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****             (moteId%(SLOTFRAME_LENGTH-SCHEDULE_MINIMAL_6TISCH_ACTIVE_CELLS));
 504:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1739              		.loc 1 504 0
 1740 0890 1846     		mov	r0, r3
 1741 0892 0C37     		adds	r7, r7, #12
 1742              		.cfi_def_cfa_offset 4
 1743 0894 BD46     		mov	sp, r7
 1744              		.cfi_def_cfa_register 13
 1745              		@ sp needed
 1746 0896 80BC     		pop	{r7}
 1747              		.cfi_restore 7
 1748              		.cfi_def_cfa_offset 0
 1749 0898 7047     		bx	lr
 1750              	.L122:
 1751 089a 00BF     		.align	2
 1752              	.L121:
 1753 089c ABAAAAAA 		.word	-1431655765
 1754              		.cfi_endproc
 1755              	.LFE18:
 1757              		.align	1
 1758              		.global	msf_hashFunction_getChanneloffset
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1762              		.fpu softvfp
 1764              	msf_hashFunction_getChanneloffset:
 1765              	.LFB19:
 505:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 506:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** uint8_t msf_hashFunction_getChanneloffset(uint16_t moteId){
 1766              		.loc 1 506 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 8
 1769              		@ frame_needed = 1, uses_anonymous_args = 0
 1770              		@ link register save eliminated.
 1771 08a0 80B4     		push	{r7}
 1772              		.cfi_def_cfa_offset 4
 1773              		.cfi_offset 7, -4
 1774 08a2 83B0     		sub	sp, sp, #12
 1775              		.cfi_def_cfa_offset 16
 1776 08a4 00AF     		add	r7, sp, #0
 1777              		.cfi_def_cfa_register 7
 1778 08a6 0346     		mov	r3, r0
 1779 08a8 FB80     		strh	r3, [r7, #6]	@ movhi
 507:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 508:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     return moteId%NUM_CHANNELS;
 1780              		.loc 1 508 0
 1781 08aa FB88     		ldrh	r3, [r7, #6]	@ movhi
 1782 08ac DBB2     		uxtb	r3, r3
 1783 08ae 03F00F03 		and	r3, r3, #15
 1784 08b2 DBB2     		uxtb	r3, r3
 509:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1785              		.loc 1 509 0
 1786 08b4 1846     		mov	r0, r3
 1787 08b6 0C37     		adds	r7, r7, #12
 1788              		.cfi_def_cfa_offset 4
 1789 08b8 BD46     		mov	sp, r7
 1790              		.cfi_def_cfa_register 13
 1791              		@ sp needed
 1792 08ba 80BC     		pop	{r7}
 1793              		.cfi_restore 7
 1794              		.cfi_def_cfa_offset 0
 1795 08bc 7047     		bx	lr
 1796              		.cfi_endproc
 1797              	.LFE19:
 1799              		.align	1
 1800              		.global	msf_setHashCollisionFlag
 1801              		.syntax unified
 1802              		.thumb
 1803              		.thumb_func
 1804              		.fpu softvfp
 1806              	msf_setHashCollisionFlag:
 1807              	.LFB20:
 510:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** 
 511:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** void    msf_setHashCollisionFlag(bool isCollision){
 1808              		.loc 1 511 0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 8
 1811              		@ frame_needed = 1, uses_anonymous_args = 0
 1812              		@ link register save eliminated.
 1813 08be 80B4     		push	{r7}
 1814              		.cfi_def_cfa_offset 4
 1815              		.cfi_offset 7, -4
 1816 08c0 83B0     		sub	sp, sp, #12
 1817              		.cfi_def_cfa_offset 16
 1818 08c2 00AF     		add	r7, sp, #0
 1819              		.cfi_def_cfa_register 7
 1820 08c4 0346     		mov	r3, r0
 1821 08c6 FB71     		strb	r3, [r7, #7]
 512:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     msf_vars.f_hashCollision = isCollision;
 1822              		.loc 1 512 0
 1823 08c8 034A     		ldr	r2, .L126
 1824 08ca FB79     		ldrb	r3, [r7, #7]
 1825 08cc 1370     		strb	r3, [r2]
 513:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }
 1826              		.loc 1 513 0
 1827 08ce 00BF     		nop
 1828 08d0 0C37     		adds	r7, r7, #12
 1829              		.cfi_def_cfa_offset 4
 1830 08d2 BD46     		mov	sp, r7
 1831              		.cfi_def_cfa_register 13
 1832              		@ sp needed
 1833 08d4 80BC     		pop	{r7}
 1834              		.cfi_restore 7
 1835              		.cfi_def_cfa_offset 0
 1836 08d6 7047     		bx	lr
 1837              	.L127:
 1838              		.align	2
 1839              	.L126:
 1840 08d8 00000000 		.word	msf_vars
 1841              		.cfi_endproc
 1842              	.LFE20:
 1844              		.align	1
 1845              		.global	msf_getHashCollisionFlag
 1846              		.syntax unified
 1847              		.thumb
 1848              		.thumb_func
 1849              		.fpu softvfp
 1851              	msf_getHashCollisionFlag:
 1852              	.LFB21:
 514:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** bool    msf_getHashCollisionFlag(void){
 1853              		.loc 1 514 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 1, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 1858 08dc 80B4     		push	{r7}
 1859              		.cfi_def_cfa_offset 4
 1860              		.cfi_offset 7, -4
 1861 08de 00AF     		add	r7, sp, #0
 1862              		.cfi_def_cfa_register 7
 515:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c ****     return msf_vars.f_hashCollision;
 1863              		.loc 1 515 0
 1864 08e0 024B     		ldr	r3, .L130
 1865 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 516:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/msf.c **** }...
 1866              		.loc 1 516 0
 1867 08e4 1846     		mov	r0, r3
 1868 08e6 BD46     		mov	sp, r7
 1869              		.cfi_def_cfa_register 13
 1870              		@ sp needed
 1871 08e8 80BC     		pop	{r7}
 1872              		.cfi_restore 7
 1873              		.cfi_def_cfa_offset 0
 1874 08ea 7047     		bx	lr
 1875              	.L131:
 1876              		.align	2
 1877              	.L130:
 1878 08ec 00000000 		.word	msf_vars
 1879              		.cfi_endproc
 1880              	.LFE21:
 1882              	.Letext0:
 1883              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1884              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1885              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1886              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1887              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 1888              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1889              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 1890              		.file 9 "inc/opendefs.h"
 1891              		.file 10 "drivers\\common/opentimers.h"
 1892              		.file 11 "build\\openmote-cc2538_armgcc\\openstack\\02b-MAChigh\\msf.h"
 1893              		.file 12 "openstack\\03b-IPv6/icmpv6rpl.h"
 1894              		.file 13 "build\\openmote-cc2538_armgcc\\openstack\\02b-MAChigh\\sixtop.h"
 1895              		.file 14 "kernel/scheduler.h"
 1896              		.file 15 "build\\openmote-cc2538_armgcc\\openstack\\02b-MAChigh\\schedule.h"
 1897              		.file 16 "openstack\\cross-layers/idmanager.h"
 1898              		.file 17 "openstack\\02a-MAClow/IEEE802154E.h"
DEFINED SYMBOLS
                            *ABS*:00000000 msf.c
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:44     .rodata:00000030 all_routers_multicast
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:64     .rodata:00000040 linklocalprefix
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:76     .rodata:00000048 chTemplate_default
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:96     .rodata:00000058 ebIEsBytestream
                            *COM*:0000000a msf_vars
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:127    .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:134    .text:00000000 msf_init
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1710   .text:0000086c msf_hashFunction_getSlotoffset
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1764   .text:000008a0 msf_hashFunction_getChanneloffset
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:277    .text:000000ec $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:595    .text:0000020e msf_handleRCError
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:562    .text:00000200 msf_translateMetadata
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:529    .text:000001f2 msf_getMetadata
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:496    .text:000001e4 msf_getsfid
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:740    .text:000002b8 msf_timer_housekeeping_cb
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:286    .text:00000104 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:293    .text:00000104 msf_updateCellsPassed
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:371    .text:00000168 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:887    .text:00000348 msf_trigger6pAdd
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:989    .text:000003d8 msf_trigger6pDelete
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:377    .text:00000174 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:384    .text:00000174 msf_updateCellsUsed
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:429    .text:000001a4 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:433    .text:000001a8 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:440    .text:000001a8 msf_trigger6pClear
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:681    .text:00000288 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:695    .text:00000298 msf_timer_waitretry_cb
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:823    .text:00000300 msf_timer_clear_task
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:688    .text:00000298 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:729    .text:000002b4 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:733    .text:000002b8 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:796    .text:000002f4 msf_timer_housekeeping_task
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:785    .text:000002f0 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:789    .text:000002f4 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1404   .text:00000620 msf_housekeeping
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1148   .text:000004a0 msf_candidateAddCellList
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:978    .text:000003d4 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:982    .text:000003d8 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1276   .text:00000556 msf_candidateRemoveCellList
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1092   .text:0000047c $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1096   .text:00000480 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1103   .text:00000480 msf_appPktPeriod
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1137   .text:0000049c $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1141   .text:000004a0 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1806   .text:000008be msf_setHashCollisionFlag
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1699   .text:00000868 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1703   .text:0000086c $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1753   .text:0000089c $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1757   .text:000008a0 $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1840   .text:000008d8 $d
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1844   .text:000008dc $t
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1851   .text:000008dc msf_getHashCollisionFlag
C:\Users\Lee\AppData\Local\Temp\cc0tB0P2.s:1878   .text:000008ec $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.opentimers.h.8.eb1cab84a6e82ba9569a1990291c92ba
                           .group:00000000 wm4.msf.h.15.36743085c3ffe364b159c5a4c76ae0e0
                           .group:00000000 wm4.icmpv6rpl.h.2.f31802bcce2a0808bf5db39ce34f4322
                           .group:00000000 wm4.neighbors.h.15.7d3ab5965b5b1193d3498491ae404451
                           .group:00000000 wm4.sixtop.h.2.ee4bd0b70b528bdc38891cf2a16bad67
                           .group:00000000 wm4.scheduler.h.2.eb68556b8ec5a9773a999c64d41ac76c
                           .group:00000000 wm4.schedule.h.2.655275e038307b96d02df4174b9f26be
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.IEEE802154E.h.31.0ae4fc33f8fea842f27863b9e73e066e
                           .group:00000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69

UNDEFINED SYMBOLS
memset
sixtop_setSFcallback
idmanager_getMyID
schedule_addActiveSlot
opentimers_create
openrandom_getRandomizePeriod
opentimers_scheduleIn
icmpv6rpl_isPreferredParent
scheduler_push_task
schedule_hasManagedTxCellToNeighbor
sixtop_request
openrandom_get16b
neighbors_setNeighborNoResource
opentimers_updateDuration
icmpv6rpl_getPreferredParentEui64
ieee154e_isSynch
schedule_getNumberOfManagedTxCells
schedule_getFrameLength
schedule_isSlotOffsetAvailable
schedule_getSlotInfo
schedule_hasNonParentAutonomousTxRxCellUnicast
neighbor_removeAutonomousTxRxCellUnicast
schedule_hasAutonomousTxRxCellUnicast
schedule_getAutonomousTxRxCellAnycast
schedule_isNumTxWrapped
schedule_getCellsToBeRelocated
