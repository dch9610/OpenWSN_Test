   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"systick.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	SysTickEnable
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SysTickEnable:
  23              	.LFB0:
  24              		.file 1 "build\\openmote-cc2538_armgcc\\bsp\\boards\\openmote-cc2538\\source\\systick.c"
   1:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** /******************************************************************************
   2:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  Filename:       systick.c
   3:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  Revised:        $Date: 2013-01-21 15:25:21 +0100 (Mon, 21 Jan 2013) $
   4:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  Revision:       $Revision: 9178 $
   5:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
   6:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  Description:    Driver for the SysTick timer in NVIC.
   7:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
   8:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  10:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  11:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  Redistribution and use in source and binary forms, with or without
  12:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  modification, are permitted provided that the following conditions
  13:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  are met:
  14:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  15:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    Redistributions of source code must retain the above copyright
  16:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    notice, this list of conditions and the following disclaimer.
  17:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  18:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    documentation and/or other materials provided with the distribution.
  21:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  22:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    its contributors may be used to endorse or promote products derived
  24:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *    from this software without specific prior written permission.
  25:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  26:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** *
  38:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** ******************************************************************************/
  39:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
  40:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
  41:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
  42:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \addtogroup systick_api
  43:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! @{
  44:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
  45:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
  46:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
  47:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** #include <headers/hw_ints.h>
  48:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** #include <headers/hw_nvic.h>
  49:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** #include "debug.h"
  50:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** #include "interrupt.h"
  51:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** #include "systick.h"
  52:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
  53:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
  54:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
  55:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Enables the SysTick counter
  56:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
  57:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function starts the SysTick counter.  If an interrupt handler has been
  58:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! registered, it is called when the SysTick counter rolls over.
  59:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
  60:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \note Calling this function causes the SysTick counter to (re)commence
  61:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! counting from its current value.  The counter is not automatically reloaded
  62:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! with the period as specified in a previous call to SysTickPeriodSet().  If
  63:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! an immediate reload is required, the \b NVIC_ST_CURRENT register must be
  64:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! written to force the reload.  Any write to this register clears the SysTick
  65:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! counter to 0 and causes a reload with the supplied period on the next
  66:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! clock.
  67:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
  68:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
  69:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
  70:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
  71:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
  72:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickEnable(void)
  73:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
  25              		.loc 1 73 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 80B4     		push	{r7}
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 7, -4
  33 0002 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  74:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
  75:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Enable SysTick.
  76:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
  77:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_CTRL) |= NVIC_ST_CTRL_CLK_SRC | NVIC_ST_CTRL_ENABLE;
  35              		.loc 1 77 0
  36 0004 044B     		ldr	r3, .L2
  37 0006 1B68     		ldr	r3, [r3]
  38 0008 034A     		ldr	r2, .L2
  39 000a 43F00503 		orr	r3, r3, #5
  40 000e 1360     		str	r3, [r2]
  78:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
  41              		.loc 1 78 0
  42 0010 00BF     		nop
  43 0012 BD46     		mov	sp, r7
  44              		.cfi_def_cfa_register 13
  45              		@ sp needed
  46 0014 80BC     		pop	{r7}
  47              		.cfi_restore 7
  48              		.cfi_def_cfa_offset 0
  49 0016 7047     		bx	lr
  50              	.L3:
  51              		.align	2
  52              	.L2:
  53 0018 10E000E0 		.word	-536813552
  54              		.cfi_endproc
  55              	.LFE0:
  57              		.align	1
  58              		.global	SysTickDisable
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SysTickDisable:
  65              	.LFB1:
  79:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
  80:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
  81:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
  82:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Disables the SysTick counter
  83:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
  84:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This will stop the SysTick counter.  If an interrupt handler has been
  85:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! registered, it will no longer be called until SysTick is restarted.
  86:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
  87:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
  88:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
  89:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
  90:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
  91:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickDisable(void)
  92:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
  66              		.loc 1 92 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 001c 80B4     		push	{r7}
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 001e 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  93:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
  94:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Disable SysTick.
  95:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
  96:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_CTRL) &= ~(NVIC_ST_CTRL_ENABLE);
  76              		.loc 1 96 0
  77 0020 044B     		ldr	r3, .L5
  78 0022 1B68     		ldr	r3, [r3]
  79 0024 034A     		ldr	r2, .L5
  80 0026 23F00103 		bic	r3, r3, #1
  81 002a 1360     		str	r3, [r2]
  97:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
  82              		.loc 1 97 0
  83 002c 00BF     		nop
  84 002e BD46     		mov	sp, r7
  85              		.cfi_def_cfa_register 13
  86              		@ sp needed
  87 0030 80BC     		pop	{r7}
  88              		.cfi_restore 7
  89              		.cfi_def_cfa_offset 0
  90 0032 7047     		bx	lr
  91              	.L6:
  92              		.align	2
  93              	.L5:
  94 0034 10E000E0 		.word	-536813552
  95              		.cfi_endproc
  96              	.LFE1:
  98              		.align	1
  99              		.global	SysTickIntRegister
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	SysTickIntRegister:
 106              	.LFB2:
  98:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
  99:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 100:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 101:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Registers an interrupt handler for the SysTick interrupt
 102:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 103:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \param pfnHandler is a pointer to the function to be called when the
 104:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! SysTick interrupt occurs.
 105:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 106:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This sets the handler to be called when a SysTick interrupt occurs.
 107:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 108:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \sa See IntRegister() for important information about registering interrupt
 109:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! handlers.
 110:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 111:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
 112:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 113:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 114:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
 115:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickIntRegister(void (*pfnHandler)(void))
 116:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 107              		.loc 1 116 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0038 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 003a 82B0     		sub	sp, sp, #8
 116              		.cfi_def_cfa_offset 16
 117 003c 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
 119 003e 7860     		str	r0, [r7, #4]
 117:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 118:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Register the interrupt handler, returning an error if an error occurs.
 119:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 120:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     IntRegister(FAULT_SYSTICK, pfnHandler);
 120              		.loc 1 120 0
 121 0040 7968     		ldr	r1, [r7, #4]
 122 0042 0F20     		movs	r0, #15
 123 0044 FFF7FEFF 		bl	IntRegister
 121:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 122:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 123:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Enable the SysTick interrupt.
 124:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 125:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_CTRL) |= NVIC_ST_CTRL_INTEN;
 124              		.loc 1 125 0
 125 0048 044B     		ldr	r3, .L8
 126 004a 1B68     		ldr	r3, [r3]
 127 004c 034A     		ldr	r2, .L8
 128 004e 43F00203 		orr	r3, r3, #2
 129 0052 1360     		str	r3, [r2]
 126:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 130              		.loc 1 126 0
 131 0054 00BF     		nop
 132 0056 0837     		adds	r7, r7, #8
 133              		.cfi_def_cfa_offset 8
 134 0058 BD46     		mov	sp, r7
 135              		.cfi_def_cfa_register 13
 136              		@ sp needed
 137 005a 80BD     		pop	{r7, pc}
 138              	.L9:
 139              		.align	2
 140              	.L8:
 141 005c 10E000E0 		.word	-536813552
 142              		.cfi_endproc
 143              	.LFE2:
 145              		.align	1
 146              		.global	SysTickIntUnregister
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu softvfp
 152              	SysTickIntUnregister:
 153              	.LFB3:
 127:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 128:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 129:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 130:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Unregisters the interrupt handler for the SysTick interrupt
 131:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 132:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function will clear the handler to be called when a SysTick interrupt
 133:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! occurs.
 134:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 135:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \sa See IntRegister() for important information about registering interrupt
 136:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! handlers.
 137:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 138:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
 139:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 140:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 141:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
 142:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickIntUnregister(void)
 143:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 154              		.loc 1 143 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0060 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0062 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 144:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 145:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Disable the SysTick interrupt.
 146:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 147:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_CTRL) &= ~(NVIC_ST_CTRL_INTEN);
 164              		.loc 1 147 0
 165 0064 054B     		ldr	r3, .L11
 166 0066 1B68     		ldr	r3, [r3]
 167 0068 044A     		ldr	r2, .L11
 168 006a 23F00203 		bic	r3, r3, #2
 169 006e 1360     		str	r3, [r2]
 148:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 149:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 150:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Unregister the interrupt handler.
 151:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 152:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     IntUnregister(FAULT_SYSTICK);
 170              		.loc 1 152 0
 171 0070 0F20     		movs	r0, #15
 172 0072 FFF7FEFF 		bl	IntUnregister
 153:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 173              		.loc 1 153 0
 174 0076 00BF     		nop
 175 0078 80BD     		pop	{r7, pc}
 176              	.L12:
 177 007a 00BF     		.align	2
 178              	.L11:
 179 007c 10E000E0 		.word	-536813552
 180              		.cfi_endproc
 181              	.LFE3:
 183              		.align	1
 184              		.global	SysTickIntEnable
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu softvfp
 190              	SysTickIntEnable:
 191              	.LFB4:
 154:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 155:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 156:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 157:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Enables the SysTick interrupt
 158:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 159:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function will enable the SysTick interrupt, allowing it to be
 160:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! reflected to the processor.
 161:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 162:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \note The SysTick interrupt handler does not need to clear the SysTick
 163:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! interrupt source as this is done automatically by NVIC when the interrupt
 164:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! handler is called.
 165:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 166:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
 167:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 168:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 169:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
 170:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickIntEnable(void)
 171:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 192              		.loc 1 171 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0080 80B4     		push	{r7}
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
 200 0082 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 172:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 173:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Enable the SysTick interrupt.
 174:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 175:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_CTRL) |= NVIC_ST_CTRL_INTEN;
 202              		.loc 1 175 0
 203 0084 044B     		ldr	r3, .L14
 204 0086 1B68     		ldr	r3, [r3]
 205 0088 034A     		ldr	r2, .L14
 206 008a 43F00203 		orr	r3, r3, #2
 207 008e 1360     		str	r3, [r2]
 176:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 208              		.loc 1 176 0
 209 0090 00BF     		nop
 210 0092 BD46     		mov	sp, r7
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 0094 80BC     		pop	{r7}
 214              		.cfi_restore 7
 215              		.cfi_def_cfa_offset 0
 216 0096 7047     		bx	lr
 217              	.L15:
 218              		.align	2
 219              	.L14:
 220 0098 10E000E0 		.word	-536813552
 221              		.cfi_endproc
 222              	.LFE4:
 224              		.align	1
 225              		.global	SysTickIntDisable
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	SysTickIntDisable:
 232              	.LFB5:
 177:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 178:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 179:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 180:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Disables the SysTick interrupt
 181:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 182:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function will disable the SysTick interrupt, preventing it from being
 183:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! reflected to the processor.
 184:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 185:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
 186:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 187:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 188:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
 189:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickIntDisable(void)
 190:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 233              		.loc 1 190 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 009c 80B4     		push	{r7}
 239              		.cfi_def_cfa_offset 4
 240              		.cfi_offset 7, -4
 241 009e 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 191:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 192:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Disable the SysTick interrupt.
 193:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 194:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_CTRL) &= ~(NVIC_ST_CTRL_INTEN);
 243              		.loc 1 194 0
 244 00a0 044B     		ldr	r3, .L17
 245 00a2 1B68     		ldr	r3, [r3]
 246 00a4 034A     		ldr	r2, .L17
 247 00a6 23F00203 		bic	r3, r3, #2
 248 00aa 1360     		str	r3, [r2]
 195:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 249              		.loc 1 195 0
 250 00ac 00BF     		nop
 251 00ae BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 00b0 80BC     		pop	{r7}
 255              		.cfi_restore 7
 256              		.cfi_def_cfa_offset 0
 257 00b2 7047     		bx	lr
 258              	.L18:
 259              		.align	2
 260              	.L17:
 261 00b4 10E000E0 		.word	-536813552
 262              		.cfi_endproc
 263              	.LFE5:
 265              		.align	1
 266              		.global	SysTickPeriodSet
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu softvfp
 272              	SysTickPeriodSet:
 273              	.LFB6:
 196:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 197:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 198:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 199:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Sets the period of the SysTick counter
 200:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 201:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \param ui32Period is the number of clock ticks in each period of the SysTick
 202:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! counter; must be between 1 and 16,777,216, inclusive.
 203:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 204:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function sets the rate at which the SysTick counter wraps; this
 205:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! equates to the number of processor clocks between interrupts.
 206:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 207:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \note Calling this function does not cause the SysTick counter to reload
 208:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! immediately.  If an immediate reload is required, the \b NVIC_ST_CURRENT
 209:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! register must be written.  Any write to this register clears the SysTick
 210:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! counter to 0 and will cause a reload with the \e ui32Period supplied here on
 211:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! the next clock after the SysTick is enabled.
 212:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 213:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return None
 214:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 215:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 216:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** void
 217:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickPeriodSet(uint32_t ui32Period)
 218:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 274              		.loc 1 218 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 00b8 80B4     		push	{r7}
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 00ba 83B0     		sub	sp, sp, #12
 283              		.cfi_def_cfa_offset 16
 284 00bc 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 286 00be 7860     		str	r0, [r7, #4]
 219:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 220:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Check the arguments.
 221:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 222:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     ASSERT((ui32Period > 0) && (ui32Period <= 16777216));
 223:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 224:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 225:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Set the period of the SysTick counter.
 226:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 227:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     HWREG(NVIC_ST_RELOAD) = ui32Period - 1;
 287              		.loc 1 227 0
 288 00c0 044A     		ldr	r2, .L20
 289 00c2 7B68     		ldr	r3, [r7, #4]
 290 00c4 013B     		subs	r3, r3, #1
 291 00c6 1360     		str	r3, [r2]
 228:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 292              		.loc 1 228 0
 293 00c8 00BF     		nop
 294 00ca 0C37     		adds	r7, r7, #12
 295              		.cfi_def_cfa_offset 4
 296 00cc BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 00ce 80BC     		pop	{r7}
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 00d0 7047     		bx	lr
 303              	.L21:
 304 00d2 00BF     		.align	2
 305              	.L20:
 306 00d4 14E000E0 		.word	-536813548
 307              		.cfi_endproc
 308              	.LFE6:
 310              		.align	1
 311              		.global	SysTickPeriodGet
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	SysTickPeriodGet:
 318              	.LFB7:
 229:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 230:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 231:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 232:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Gets the period of the SysTick counter
 233:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 234:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function returns the rate at which the SysTick counter wraps; this
 235:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! equates to the number of processor clocks between interrupts.
 236:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 237:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return Returns the period of the SysTick counter.
 238:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 239:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 240:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** uint32_t
 241:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickPeriodGet(void)
 242:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 319              		.loc 1 242 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324 00d8 80B4     		push	{r7}
 325              		.cfi_def_cfa_offset 4
 326              		.cfi_offset 7, -4
 327 00da 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 243:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 244:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Return the period of the SysTick counter.
 245:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 246:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     return(HWREG(NVIC_ST_RELOAD) + 1);
 329              		.loc 1 246 0
 330 00dc 034B     		ldr	r3, .L24
 331 00de 1B68     		ldr	r3, [r3]
 332 00e0 0133     		adds	r3, r3, #1
 247:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 333              		.loc 1 247 0
 334 00e2 1846     		mov	r0, r3
 335 00e4 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 00e6 80BC     		pop	{r7}
 339              		.cfi_restore 7
 340              		.cfi_def_cfa_offset 0
 341 00e8 7047     		bx	lr
 342              	.L25:
 343 00ea 00BF     		.align	2
 344              	.L24:
 345 00ec 14E000E0 		.word	-536813548
 346              		.cfi_endproc
 347              	.LFE7:
 349              		.align	1
 350              		.global	SysTickValueGet
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu softvfp
 356              	SysTickValueGet:
 357              	.LFB8:
 248:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** 
 249:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 250:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 251:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! Gets the current value of the SysTick counter
 252:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 253:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! This function returns the current value of the SysTick counter; this will
 254:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! be a value between the period - 1 and zero, inclusive.
 255:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //!
 256:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //! \return Returns the current value of the SysTick counter.
 257:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //
 258:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** //*****************************************************************************
 259:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** uint32_t
 260:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** SysTickValueGet(void)
 261:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** {
 358              		.loc 1 261 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 00f0 80B4     		push	{r7}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 00f2 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 262:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 263:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     // Return the current value of the SysTick counter.
 264:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     //
 265:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c ****     return(HWREG(NVIC_ST_CURRENT));
 368              		.loc 1 265 0
 369 00f4 024B     		ldr	r3, .L28
 370 00f6 1B68     		ldr	r3, [r3]
 266:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/systick.c **** }
 371              		.loc 1 266 0
 372 00f8 1846     		mov	r0, r3
 373 00fa BD46     		mov	sp, r7
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 00fc 80BC     		pop	{r7}
 377              		.cfi_restore 7
 378              		.cfi_def_cfa_offset 0
 379 00fe 7047     		bx	lr
 380              	.L29:
 381              		.align	2
 382              	.L28:
 383 0100 18E000E0 		.word	-536813544
 384              		.cfi_endproc
 385              	.LFE8:
 387              	.Letext0:
 388              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 389              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
DEFINED SYMBOLS
                            *ABS*:00000000 systick.c
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:15     .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:22     .text:00000000 SysTickEnable
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:53     .text:00000018 $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:57     .text:0000001c $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:64     .text:0000001c SysTickDisable
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:94     .text:00000034 $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:98     .text:00000038 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:105    .text:00000038 SysTickIntRegister
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:141    .text:0000005c $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:145    .text:00000060 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:152    .text:00000060 SysTickIntUnregister
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:179    .text:0000007c $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:183    .text:00000080 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:190    .text:00000080 SysTickIntEnable
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:220    .text:00000098 $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:224    .text:0000009c $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:231    .text:0000009c SysTickIntDisable
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:261    .text:000000b4 $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:265    .text:000000b8 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:272    .text:000000b8 SysTickPeriodSet
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:306    .text:000000d4 $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:310    .text:000000d8 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:317    .text:000000d8 SysTickPeriodGet
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:345    .text:000000ec $d
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:349    .text:000000f0 $t
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:356    .text:000000f0 SysTickValueGet
C:\Users\Lee\AppData\Local\Temp\ccBcVjGf.s:383    .text:00000100 $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:00000000 wm4.hw_nvic.h.42.f3b9efa2537e728866c85de74b3e5811
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf

UNDEFINED SYMBOLS
IntRegister
IntUnregister
