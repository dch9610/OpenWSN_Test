   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"sleepmode.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	SleepModeIntRegister
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SleepModeIntRegister:
  23              	.LFB0:
  24              		.file 1 "build\\openmote-cc2538_armgcc\\bsp\\boards\\openmote-cc2538\\source\\sleepmode.c"
   1:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** /******************************************************************************
   2:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  Filename:       sleepmode.c
   3:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  Revised:        $Date: 2013-03-22 16:13:31 +0100 (Fri, 22 Mar 2013) $
   4:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  Revision:       $Revision: 9513 $
   5:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
   6:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  Description:    Driver for the Sleep Mode Timer Module.
   7:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
   8:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  10:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  11:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  Redistribution and use in source and binary forms, with or without
  12:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  modification, are permitted provided that the following conditions
  13:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  are met:
  14:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  15:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    Redistributions of source code must retain the above copyright
  16:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    notice, this list of conditions and the following disclaimer.
  17:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  18:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    documentation and/or other materials provided with the distribution.
  21:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  22:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    its contributors may be used to endorse or promote products derived
  24:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *    from this software without specific prior written permission.
  25:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  26:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** *
  38:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** ******************************************************************************/
  39:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
  40:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
  41:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
  42:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \addtogroup sleepmodetimer_api
  43:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! @{
  44:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
  45:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
  46:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
  47:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** #include <headers/hw_ints.h>
  48:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** #include <headers/hw_memmap.h>
  49:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** #include <headers/hw_smwdthrosc.h>
  50:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** #include "debug.h"
  51:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** #include "interrupt.h"
  52:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** #include "sleepmode.h"
  53:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
  54:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
  55:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
  56:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Registers an interrupt handler for Sleep Mode Timer interrupt
  57:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  58:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \param pfnHandler is a pointer to the function to be called when the
  59:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Sleep Mode Timer interrupt occurs.
  60:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  61:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function does the actual registering of the interrupt handler, thus
  62:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! enabling the global interrupt in the interrupt controller.
  63:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  64:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \sa IntRegister() for important information about registering interrupt
  65:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! handlers.
  66:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  67:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return None
  68:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
  69:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
  70:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** void
  71:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeIntRegister(void (*pfnHandler)(void))
  72:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
  25              		.loc 1 72 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 16
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 7860     		str	r0, [r7, #4]
  73:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
  74:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     // Register the interrupt handler.
  75:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
  76:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     IntRegister(INT_SMTIM, pfnHandler);
  38              		.loc 1 76 0
  39 0008 7968     		ldr	r1, [r7, #4]
  40 000a A120     		movs	r0, #161
  41 000c FFF7FEFF 		bl	IntRegister
  77:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
  78:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
  79:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     // Enable the sleep mode timer interrupt.
  80:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
  81:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     IntEnable(INT_SMTIM);
  42              		.loc 1 81 0
  43 0010 A120     		movs	r0, #161
  44 0012 FFF7FEFF 		bl	IntEnable
  82:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
  45              		.loc 1 82 0
  46 0016 00BF     		nop
  47 0018 0837     		adds	r7, r7, #8
  48              		.cfi_def_cfa_offset 8
  49 001a BD46     		mov	sp, r7
  50              		.cfi_def_cfa_register 13
  51              		@ sp needed
  52 001c 80BD     		pop	{r7, pc}
  53              		.cfi_endproc
  54              	.LFE0:
  56              		.align	1
  57              		.global	SleepModeIntUnregister
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu softvfp
  63              	SleepModeIntUnregister:
  64              	.LFB1:
  83:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
  84:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
  85:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
  86:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Unregisters an interrupt handler for the sleep mode timer interrupt
  87:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  88:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function does the actual unregistering of the interrupt handler.  This
  89:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! function clears the handler to be called when a compare
  90:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! interrupt occurs and masks off the interrupt in the interrupt controller
  91:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! so that the interrupt handler no longer is called.
  92:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  93:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \sa IntRegister() for important information about registering interrupt
  94:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! handlers.
  95:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
  96:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return None
  97:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
  98:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
  99:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** void
 100:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeIntUnregister(void)
 101:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
  65              		.loc 1 101 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 001e 80B5     		push	{r7, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0020 00AF     		add	r7, sp, #0
  74              		.cfi_def_cfa_register 7
 102:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
 103:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     // Disable the interrupt.
 104:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
 105:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     IntDisable(INT_SMTIM);
  75              		.loc 1 105 0
  76 0022 A120     		movs	r0, #161
  77 0024 FFF7FEFF 		bl	IntDisable
 106:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 107:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
 108:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     // Unregister the interrupt handler.
 109:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
 110:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     IntUnregister(INT_SMTIM);
  78              		.loc 1 110 0
  79 0028 A120     		movs	r0, #161
  80 002a FFF7FEFF 		bl	IntUnregister
 111:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
  81              		.loc 1 111 0
  82 002e 00BF     		nop
  83 0030 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE1:
  87              		.align	1
  88              		.global	SleepModeTimerCountGet
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu softvfp
  94              	SleepModeTimerCountGet:
  95              	.LFB2:
 112:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 113:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 114:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 115:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Get current value of the sleep mode timer
 116:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 117:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function returns the current value of the sleep mode timer (that is,
 118:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! the timer count)
 119:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 120:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return Current value of the sleep mode timer
 121:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 122:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 123:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** uint32_t
 124:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeTimerCountGet(void)
 125:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
  96              		.loc 1 125 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0032 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0034 83B0     		sub	sp, sp, #12
 105              		.cfi_def_cfa_offset 16
 106 0036 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
 126:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     uint32_t ui32Val;
 127:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 128:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_ST0);
 108              		.loc 1 128 0
 109 0038 0D4B     		ldr	r3, .L5
 110 003a 1B68     		ldr	r3, [r3]
 111 003c 7B60     		str	r3, [r7, #4]
 129:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_ST1) << 8;
 112              		.loc 1 129 0
 113 003e 0D4B     		ldr	r3, .L5+4
 114 0040 1B68     		ldr	r3, [r3]
 115 0042 1B02     		lsls	r3, r3, #8
 116 0044 7A68     		ldr	r2, [r7, #4]
 117 0046 1343     		orrs	r3, r3, r2
 118 0048 7B60     		str	r3, [r7, #4]
 130:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_ST2) << 16;
 119              		.loc 1 130 0
 120 004a 0B4B     		ldr	r3, .L5+8
 121 004c 1B68     		ldr	r3, [r3]
 122 004e 1B04     		lsls	r3, r3, #16
 123 0050 7A68     		ldr	r2, [r7, #4]
 124 0052 1343     		orrs	r3, r3, r2
 125 0054 7B60     		str	r3, [r7, #4]
 131:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_ST3) << 24;
 126              		.loc 1 131 0
 127 0056 094B     		ldr	r3, .L5+12
 128 0058 1B68     		ldr	r3, [r3]
 129 005a 1B06     		lsls	r3, r3, #24
 130 005c 7A68     		ldr	r2, [r7, #4]
 131 005e 1343     		orrs	r3, r3, r2
 132 0060 7B60     		str	r3, [r7, #4]
 132:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 133:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     return ui32Val;
 133              		.loc 1 133 0
 134 0062 7B68     		ldr	r3, [r7, #4]
 134:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
 135              		.loc 1 134 0
 136 0064 1846     		mov	r0, r3
 137 0066 0C37     		adds	r7, r7, #12
 138              		.cfi_def_cfa_offset 4
 139 0068 BD46     		mov	sp, r7
 140              		.cfi_def_cfa_register 13
 141              		@ sp needed
 142 006a 80BC     		pop	{r7}
 143              		.cfi_restore 7
 144              		.cfi_def_cfa_offset 0
 145 006c 7047     		bx	lr
 146              	.L6:
 147 006e 00BF     		.align	2
 148              	.L5:
 149 0070 40500D40 		.word	1074614336
 150 0074 44500D40 		.word	1074614340
 151 0078 48500D40 		.word	1074614344
 152 007c 4C500D40 		.word	1074614348
 153              		.cfi_endproc
 154              	.LFE2:
 156              		.align	1
 157              		.global	SleepModeCaptureConfig
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu softvfp
 163              	SleepModeCaptureConfig:
 164              	.LFB3:
 135:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 136:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 137:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 138:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 139:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Selects capture port and pin
 140:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 141:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \param ui32Port is the port.
 142:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \param ui32Pin is the pin number.
 143:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 144:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function sets the port and pin on which values are to be captured.
 145:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 146:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! The \e ui32Port argument must be only one of the following values:
 147:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PORT_A, \b SLEEPMODE_PORT_B,
 148:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PORT_C, \b SLEEPMODE_PORT_D,
 149:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PORT_USB.
 150:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 151:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! The \e ui32Pin argument must be only one of the following values:
 152:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PIN_0, \b SLEEPMODE_PIN_1, \b SLEEPMODE_PIN_2,
 153:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PIN_3, \b SLEEPMODE_PIN_4, \b SLEEPMODE_PIN_5,
 154:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PIN_6, \b SLEEPMODE_PIN_7.
 155:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 156:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \note if \e ui32Port is set to \b SLEEPMODE_PORT_USB, only \e ui32Pin
 157:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \b SLEEPMODE_PIN_0 can be used.
 158:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 159:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return None
 160:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 161:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 162:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** void
 163:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeCaptureConfig(uint32_t ui32Port, uint32_t ui32Pin)
 164:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
 165              		.loc 1 164 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 16
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0080 80B4     		push	{r7}
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0082 85B0     		sub	sp, sp, #20
 174              		.cfi_def_cfa_offset 24
 175 0084 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 177 0086 7860     		str	r0, [r7, #4]
 178 0088 3960     		str	r1, [r7]
 165:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     uint32_t  ui32Val;
 166:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 167:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ASSERT(ui32Port == SLEEPMODE_PORT_A ||
 168:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Port == SLEEPMODE_PORT_B ||
 169:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Port == SLEEPMODE_PORT_C ||
 170:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Port == SLEEPMODE_PORT_D ||
 171:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            (ui32Port == SLEEPMODE_PORT_USB && ui32Pin == SLEEPMODE_PIN_0));
 172:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 173:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ASSERT(ui32Pin == SLEEPMODE_PIN_0 ||
 174:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_1 ||
 175:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_2 ||
 176:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_3 ||
 177:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_4 ||
 178:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_5 ||
 179:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_6 ||
 180:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_7);
 181:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 182:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 183:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_STCC);
 179              		.loc 1 183 0
 180 008a 0A4B     		ldr	r3, .L8
 181 008c 1B68     		ldr	r3, [r3]
 182 008e FB60     		str	r3, [r7, #12]
 184:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val &= ~(SMWDTHROSC_STCC_PORT_M | SMWDTHROSC_STCC_PIN_M);
 183              		.loc 1 184 0
 184 0090 FB68     		ldr	r3, [r7, #12]
 185 0092 23F03F03 		bic	r3, r3, #63
 186 0096 FB60     		str	r3, [r7, #12]
 185:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= ui32Port | ui32Pin;
 187              		.loc 1 185 0
 188 0098 7A68     		ldr	r2, [r7, #4]
 189 009a 3B68     		ldr	r3, [r7]
 190 009c 1343     		orrs	r3, r3, r2
 191 009e FA68     		ldr	r2, [r7, #12]
 192 00a0 1343     		orrs	r3, r3, r2
 193 00a2 FB60     		str	r3, [r7, #12]
 186:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     HWREG(SMWDTHROSC_STCC) = ui32Val;
 194              		.loc 1 186 0
 195 00a4 034A     		ldr	r2, .L8
 196 00a6 FB68     		ldr	r3, [r7, #12]
 197 00a8 1360     		str	r3, [r2]
 187:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 188:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
 198              		.loc 1 188 0
 199 00aa 00BF     		nop
 200 00ac 1437     		adds	r7, r7, #20
 201              		.cfi_def_cfa_offset 4
 202 00ae BD46     		mov	sp, r7
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 00b0 80BC     		pop	{r7}
 206              		.cfi_restore 7
 207              		.cfi_def_cfa_offset 0
 208 00b2 7047     		bx	lr
 209              	.L9:
 210              		.align	2
 211              	.L8:
 212 00b4 54500D40 		.word	1074614356
 213              		.cfi_endproc
 214              	.LFE3:
 216              		.align	1
 217              		.global	SleepModeTimerCompareSet
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	SleepModeTimerCompareSet:
 224              	.LFB4:
 189:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 190:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 191:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 192:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Set compare value of the sleep mode timer
 193:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 194:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \param ui32Compare is a 32-bit compare value.
 195:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 196:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function sets the compare value of the sleep mode timer.
 197:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! A timer compare interrupt is generated when the timer value is equal to
 198:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! the compare value.
 199:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 200:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \note When setting a new compare value, the value must be at least 5 more
 201:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! than the current sleep timer value. Otherwise, the timer compare event
 202:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! might be lost.
 203:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 204:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return None
 205:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 206:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 207:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** void
 208:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeTimerCompareSet(uint32_t ui32Compare)
 209:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
 225              		.loc 1 209 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 00b8 80B4     		push	{r7}
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 7, -4
 233 00ba 83B0     		sub	sp, sp, #12
 234              		.cfi_def_cfa_offset 16
 235 00bc 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 00be 7860     		str	r0, [r7, #4]
 210:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
 211:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     // Wait for ST0, ST3 regs to be ready for writing
 212:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     //
 213:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     while(!(HWREG(SMWDTHROSC_STLOAD) & SMWDTHROSC_STLOAD_STLOAD))
 238              		.loc 1 213 0
 239 00c0 00BF     		nop
 240              	.L11:
 241              		.loc 1 213 0 is_stmt 0 discriminator 1
 242 00c2 0E4B     		ldr	r3, .L12
 243 00c4 1B68     		ldr	r3, [r3]
 244 00c6 03F00103 		and	r3, r3, #1
 245 00ca 002B     		cmp	r3, #0
 246 00cc F9D0     		beq	.L11
 214:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     {
 215:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     }
 216:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 217:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     HWREG(SMWDTHROSC_ST3) = (ui32Compare >> 24) & 0x000000ff;
 247              		.loc 1 217 0 is_stmt 1
 248 00ce 0C4A     		ldr	r2, .L12+4
 249 00d0 7B68     		ldr	r3, [r7, #4]
 250 00d2 1B0E     		lsrs	r3, r3, #24
 251 00d4 1360     		str	r3, [r2]
 218:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     HWREG(SMWDTHROSC_ST2) = (ui32Compare >> 16) & 0x000000ff;
 252              		.loc 1 218 0
 253 00d6 7B68     		ldr	r3, [r7, #4]
 254 00d8 1B0C     		lsrs	r3, r3, #16
 255 00da 0A4A     		ldr	r2, .L12+8
 256 00dc DBB2     		uxtb	r3, r3
 257 00de 1360     		str	r3, [r2]
 219:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     HWREG(SMWDTHROSC_ST1) = (ui32Compare >>  8) & 0x000000ff;
 258              		.loc 1 219 0
 259 00e0 7B68     		ldr	r3, [r7, #4]
 260 00e2 1B0A     		lsrs	r3, r3, #8
 261 00e4 084A     		ldr	r2, .L12+12
 262 00e6 DBB2     		uxtb	r3, r3
 263 00e8 1360     		str	r3, [r2]
 220:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     HWREG(SMWDTHROSC_ST0) = ui32Compare & 0x000000ff;
 264              		.loc 1 220 0
 265 00ea 084A     		ldr	r2, .L12+16
 266 00ec 7B68     		ldr	r3, [r7, #4]
 267 00ee DBB2     		uxtb	r3, r3
 268 00f0 1360     		str	r3, [r2]
 221:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
 269              		.loc 1 221 0
 270 00f2 00BF     		nop
 271 00f4 0C37     		adds	r7, r7, #12
 272              		.cfi_def_cfa_offset 4
 273 00f6 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 00f8 80BC     		pop	{r7}
 277              		.cfi_restore 7
 278              		.cfi_def_cfa_offset 0
 279 00fa 7047     		bx	lr
 280              	.L13:
 281              		.align	2
 282              	.L12:
 283 00fc 50500D40 		.word	1074614352
 284 0100 4C500D40 		.word	1074614348
 285 0104 48500D40 		.word	1074614344
 286 0108 44500D40 		.word	1074614340
 287 010c 40500D40 		.word	1074614336
 288              		.cfi_endproc
 289              	.LFE4:
 291              		.align	1
 292              		.global	SleepModeCaptureGet
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	SleepModeCaptureGet:
 299              	.LFB5:
 222:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 223:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 224:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 225:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 226:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Get last capture value
 227:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 228:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function returns the last captured value.
 229:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 230:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \note The captured value is one more than the value at the instant for the
 231:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! event on the I/O pin. Software should therefore subtract 1 from the
 232:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! captured value if absolute timing is required.
 233:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 234:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \sa SleepModeCaptureNew(), SleepModeCaptureIsValid()
 235:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 236:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return Last captured value
 237:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 238:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 239:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** uint32_t
 240:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeCaptureGet(void)
 241:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
 300              		.loc 1 241 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305 0110 80B4     		push	{r7}
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0112 83B0     		sub	sp, sp, #12
 309              		.cfi_def_cfa_offset 16
 310 0114 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 242:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     uint32_t ui32Val;
 243:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 244:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_STCV0);
 312              		.loc 1 244 0
 313 0116 0D4B     		ldr	r3, .L16
 314 0118 1B68     		ldr	r3, [r3]
 315 011a 7B60     		str	r3, [r7, #4]
 245:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_STCV1) << 8;
 316              		.loc 1 245 0
 317 011c 0C4B     		ldr	r3, .L16+4
 318 011e 1B68     		ldr	r3, [r3]
 319 0120 1B02     		lsls	r3, r3, #8
 320 0122 7A68     		ldr	r2, [r7, #4]
 321 0124 1343     		orrs	r3, r3, r2
 322 0126 7B60     		str	r3, [r7, #4]
 246:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_STCV2) << 16;
 323              		.loc 1 246 0
 324 0128 0A4B     		ldr	r3, .L16+8
 325 012a 1B68     		ldr	r3, [r3]
 326 012c 1B04     		lsls	r3, r3, #16
 327 012e 7A68     		ldr	r2, [r7, #4]
 328 0130 1343     		orrs	r3, r3, r2
 329 0132 7B60     		str	r3, [r7, #4]
 247:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_STCV3) << 24;
 330              		.loc 1 247 0
 331 0134 084B     		ldr	r3, .L16+12
 332 0136 1B68     		ldr	r3, [r3]
 333 0138 1B06     		lsls	r3, r3, #24
 334 013a 7A68     		ldr	r2, [r7, #4]
 335 013c 1343     		orrs	r3, r3, r2
 336 013e 7B60     		str	r3, [r7, #4]
 248:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 249:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     return ui32Val;
 337              		.loc 1 249 0
 338 0140 7B68     		ldr	r3, [r7, #4]
 250:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
 339              		.loc 1 250 0
 340 0142 1846     		mov	r0, r3
 341 0144 0C37     		adds	r7, r7, #12
 342              		.cfi_def_cfa_offset 4
 343 0146 BD46     		mov	sp, r7
 344              		.cfi_def_cfa_register 13
 345              		@ sp needed
 346 0148 80BC     		pop	{r7}
 347              		.cfi_restore 7
 348              		.cfi_def_cfa_offset 0
 349 014a 7047     		bx	lr
 350              	.L17:
 351              		.align	2
 352              	.L16:
 353 014c 5C500D40 		.word	1074614364
 354 0150 60500D40 		.word	1074614368
 355 0154 64500D40 		.word	1074614372
 356 0158 68500D40 		.word	1074614376
 357              		.cfi_endproc
 358              	.LFE5:
 360              		.align	1
 361              		.global	SleepModeCaptureIsValid
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu softvfp
 367              	SleepModeCaptureIsValid:
 368              	.LFB6:
 251:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 252:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 253:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 254:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Checks if capture value has been updated
 255:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 256:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function returns true if a value has been captured.
 257:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 258:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \sa SleepModeCaptureGet(), SleepModeCaptureNew()
 259:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 260:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return Returns true if capture value has been updated
 261:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 262:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 263:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** bool
 264:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeCaptureIsValid(void)
 265:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
 369              		.loc 1 265 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 015c 80B4     		push	{r7}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 015e 83B0     		sub	sp, sp, #12
 378              		.cfi_def_cfa_offset 16
 379 0160 00AF     		add	r7, sp, #0
 380              		.cfi_def_cfa_register 7
 266:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     bool bValid;
 267:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 268:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     bValid = HWREG(SMWDTHROSC_STCS) & SMWDTHROSC_STCS_VALID;
 381              		.loc 1 268 0
 382 0162 074B     		ldr	r3, .L20
 383 0164 1B68     		ldr	r3, [r3]
 384 0166 03F00103 		and	r3, r3, #1
 385 016a 002B     		cmp	r3, #0
 386 016c 14BF     		ite	ne
 387 016e 0123     		movne	r3, #1
 388 0170 0023     		moveq	r3, #0
 389 0172 FB71     		strb	r3, [r7, #7]
 269:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 270:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     return bValid;
 390              		.loc 1 270 0
 391 0174 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 271:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
 392              		.loc 1 271 0
 393 0176 1846     		mov	r0, r3
 394 0178 0C37     		adds	r7, r7, #12
 395              		.cfi_def_cfa_offset 4
 396 017a BD46     		mov	sp, r7
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 017c 80BC     		pop	{r7}
 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 017e 7047     		bx	lr
 403              	.L21:
 404              		.align	2
 405              	.L20:
 406 0180 58500D40 		.word	1074614360
 407              		.cfi_endproc
 408              	.LFE6:
 410              		.align	1
 411              		.global	SleepModeCaptureNew
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	SleepModeCaptureNew:
 418              	.LFB7:
 272:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 273:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 274:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 275:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! Prepares for a new value to  be captured
 276:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 277:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! This function prepares the capture logic to capture a new value.
 278:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 279:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! The relevant pin interrupt flag must be cleared after calling this
 280:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! function using IntPendClear().
 281:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 282:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \sa SleepModeCaptureGet(), SleepModeCaptureIsValid()
 283:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //!
 284:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //! \return None
 285:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //
 286:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** //*****************************************************************************
 287:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** void
 288:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** SleepModeCaptureNew(void)
 289:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** {
 419              		.loc 1 289 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0184 80B4     		push	{r7}
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 7, -4
 427 0186 83B0     		sub	sp, sp, #12
 428              		.cfi_def_cfa_offset 16
 429 0188 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 290:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     uint32_t  ui32Val;
 291:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** 
 292:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_STCS);
 431              		.loc 1 292 0
 432 018a 074B     		ldr	r3, .L23
 433 018c 1B68     		ldr	r3, [r3]
 434 018e 7B60     		str	r3, [r7, #4]
 293:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     ui32Val &= ~SMWDTHROSC_STCS_VALID;
 435              		.loc 1 293 0
 436 0190 7B68     		ldr	r3, [r7, #4]
 437 0192 23F00103 		bic	r3, r3, #1
 438 0196 7B60     		str	r3, [r7, #4]
 294:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c ****     HWREG(SMWDTHROSC_STCS) = ui32Val;
 439              		.loc 1 294 0
 440 0198 034A     		ldr	r2, .L23
 441 019a 7B68     		ldr	r3, [r7, #4]
 442 019c 1360     		str	r3, [r2]
 295:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\source/sleepmode.c **** }
 443              		.loc 1 295 0
 444 019e 00BF     		nop
 445 01a0 0C37     		adds	r7, r7, #12
 446              		.cfi_def_cfa_offset 4
 447 01a2 BD46     		mov	sp, r7
 448              		.cfi_def_cfa_register 13
 449              		@ sp needed
 450 01a4 80BC     		pop	{r7}
 451              		.cfi_restore 7
 452              		.cfi_def_cfa_offset 0
 453 01a6 7047     		bx	lr
 454              	.L24:
 455              		.align	2
 456              	.L23:
 457 01a8 58500D40 		.word	1074614360
 458              		.cfi_endproc
 459              	.LFE7:
 461              	.Letext0:
 462              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 463              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
DEFINED SYMBOLS
                            *ABS*:00000000 sleepmode.c
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:15     .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:22     .text:00000000 SleepModeIntRegister
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:63     .text:0000001e SleepModeIntUnregister
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:94     .text:00000032 SleepModeTimerCountGet
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:149    .text:00000070 $d
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:156    .text:00000080 $t
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:163    .text:00000080 SleepModeCaptureConfig
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:212    .text:000000b4 $d
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:216    .text:000000b8 $t
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:223    .text:000000b8 SleepModeTimerCompareSet
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:283    .text:000000fc $d
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:291    .text:00000110 $t
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:298    .text:00000110 SleepModeCaptureGet
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:353    .text:0000014c $d
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:360    .text:0000015c $t
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:367    .text:0000015c SleepModeCaptureIsValid
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:406    .text:00000180 $d
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:410    .text:00000184 $t
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:417    .text:00000184 SleepModeCaptureNew
C:\Users\Lee\AppData\Local\Temp\ccT3staF.s:457    .text:000001a8 $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:00000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:00000000 wm4.hw_smwdthrosc.h.39.ab42722bc5551495328d9a67238c9bbc
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.sleepmode.h.41.8aaaa1e0c85692d50a0ac7b45436b69e

UNDEFINED SYMBOLS
IntRegister
IntEnable
IntDisable
IntUnregister
