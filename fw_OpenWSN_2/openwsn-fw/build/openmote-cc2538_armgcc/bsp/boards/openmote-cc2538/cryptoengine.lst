   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"cryptoengine.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41              		.text
  42              		.align	1
  43              		.global	cryptoengine_init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	cryptoengine_init:
  50              	.LFB0:
  51              		.file 1 "build\\openmote-cc2538_armgcc\\bsp\\boards\\openmote-cc2538\\cryptoengine.c"
   1:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** /**
   2:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** \brief Crypto engine implementation for OpenMote-CC2538
   3:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****   
   4:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** \author Malisa Vucinic <malishav@gmail.com>, March 2015.
   5:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** */
   6:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #include <stdint.h>
   7:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
   8:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #include <headers/hw_sys_ctrl.h>
   9:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  10:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #include <source/sys_ctrl.h>
  11:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #include <source/aes.h>
  12:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #include <source/ccm.h>
  13:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  14:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #include "cryptoengine.h"
  15:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  16:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** #define DEFAULT_KEY_AREA KEY_AREA_0
  17:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  18:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  19:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** //=========================== prototypes ======================================
  20:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  21:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** static owerror_t load_key(uint8_t key[16], uint8_t* /* out */ key_location);
  22:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  23:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  24:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** //=========================== public ==========================================
  25:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  26:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_init(void) {
  52              		.loc 1 26 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  27:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    //
  28:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    // Enable AES peripheral
  29:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    //
  30:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    SysCtrlPeripheralReset(SYS_CTRL_PERIPH_AES);
  62              		.loc 1 30 0
  63 0004 40F20140 		movw	r0, #1025
  64 0008 FFF7FEFF 		bl	SysCtrlPeripheralReset
  31:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_AES);
  65              		.loc 1 31 0
  66 000c 40F20140 		movw	r0, #1025
  67 0010 FFF7FEFF 		bl	SysCtrlPeripheralEnable
  32:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    return E_SUCCESS;
  68              		.loc 1 32 0
  69 0014 0023     		movs	r3, #0
  33:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** }
  70              		.loc 1 33 0
  71 0016 1846     		mov	r0, r3
  72 0018 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE0:
  76              		.align	1
  77              		.global	cryptoengine_aes_ccms_enc
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu softvfp
  83              	cryptoengine_aes_ccms_enc:
  84              	.LFB1:
  34:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  35:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_aes_ccms_enc(uint8_t* a,
  36:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t len_a,
  37:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t* m,
  38:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t* len_m,
  39:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t* nonce,
  40:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t l,
  41:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t key[16],
  42:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t len_mac) {
  85              		.loc 1 42 0
  86              		.cfi_startproc
  87              		@ args = 16, pretend = 0, frame = 24
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 001a F0B5     		push	{r4, r5, r6, r7, lr}
  90              		.cfi_def_cfa_offset 20
  91              		.cfi_offset 4, -20
  92              		.cfi_offset 5, -16
  93              		.cfi_offset 6, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 001c 8FB0     		sub	sp, sp, #60
  97              		.cfi_def_cfa_offset 80
  98 001e 08AF     		add	r7, sp, #32
  99              		.cfi_def_cfa 7, 48
 100 0020 F860     		str	r0, [r7, #12]
 101 0022 7A60     		str	r2, [r7, #4]
 102 0024 3B60     		str	r3, [r7]
 103 0026 0B46     		mov	r3, r1
 104 0028 FB72     		strb	r3, [r7, #11]
  43:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  44:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    bool encrypt;
  45:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    uint8_t key_location;
  46:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****   
  47:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    encrypt = *len_m > 0 ? true : false;
 105              		.loc 1 47 0
 106 002a 3B68     		ldr	r3, [r7]
 107 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 108 002e 002B     		cmp	r3, #0
 109 0030 14BF     		ite	ne
 110 0032 0123     		movne	r3, #1
 111 0034 0023     		moveq	r3, #0
 112 0036 FB75     		strb	r3, [r7, #23]
  48:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  49:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 113              		.loc 1 49 0
 114 0038 07F11603 		add	r3, r7, #22
 115 003c 1946     		mov	r1, r3
 116 003e B86B     		ldr	r0, [r7, #56]
 117 0040 00F0D5F8 		bl	load_key
 118 0044 0346     		mov	r3, r0
 119 0046 002B     		cmp	r3, #0
 120 0048 41D1     		bne	.L4
  50:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(CCMAuthEncryptStart(encrypt,
  51:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               len_mac,
  52:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               nonce,
  53:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               m,
  54:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               (uint16_t) *len_m,
 121              		.loc 1 54 0
 122 004a 3B68     		ldr	r3, [r7]
 123 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(CCMAuthEncryptStart(encrypt,
 124              		.loc 1 50 0
 125 004e 9BB2     		uxth	r3, r3
 126 0050 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 127 0052 92B2     		uxth	r2, r2
 128 0054 B97D     		ldrb	r1, [r7, #22]	@ zero_extendqisi2
  55:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               a,
  56:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               (uint16_t) len_a,
  57:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               key_location,
  58:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               &m[*len_m],
 129              		.loc 1 58 0
 130 0056 3868     		ldr	r0, [r7]
 131 0058 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 132 005a 0446     		mov	r4, r0
  50:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(CCMAuthEncryptStart(encrypt,
 133              		.loc 1 50 0
 134 005c 7868     		ldr	r0, [r7, #4]
 135 005e 2044     		add	r0, r0, r4
 136 0060 97F83C60 		ldrb	r6, [r7, #60]	@ zero_extendqisi2
 137 0064 FD7D     		ldrb	r5, [r7, #23]	@ zero_extendqisi2
 138 0066 0024     		movs	r4, #0
 139 0068 0694     		str	r4, [sp, #24]
 140 006a 97F83440 		ldrb	r4, [r7, #52]	@ zero_extendqisi2
 141 006e 0594     		str	r4, [sp, #20]
 142 0070 0490     		str	r0, [sp, #16]
 143 0072 0391     		str	r1, [sp, #12]
 144 0074 0292     		str	r2, [sp, #8]
 145 0076 FA68     		ldr	r2, [r7, #12]
 146 0078 0192     		str	r2, [sp, #4]
 147 007a 0093     		str	r3, [sp]
 148 007c 7B68     		ldr	r3, [r7, #4]
 149 007e 3A6B     		ldr	r2, [r7, #48]
 150 0080 3146     		mov	r1, r6
 151 0082 2846     		mov	r0, r5
 152 0084 FFF7FEFF 		bl	CCMAuthEncryptStart
 153 0088 0346     		mov	r3, r0
 154 008a 002B     		cmp	r3, #0
 155 008c 1FD1     		bne	.L4
 156              	.L5:
  59:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               l,
  60:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               /* polling */ 0) == AES_SUCCESS) {
  61:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  62:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          do {
  63:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             ASM_NOP;
 157              		.loc 1 63 0 discriminator 1
 158              		.syntax unified
 159              	@ 63 "build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\cryptoengine.c" 1
 160 008e 00BF     		NOP
 161              	@ 0 "" 2
  64:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          } while(CCMAuthEncryptCheckResult() == 0);
 162              		.loc 1 64 0 discriminator 1
 163              		.thumb
 164              		.syntax unified
 165 0090 FFF7FEFF 		bl	CCMAuthEncryptCheckResult
 166 0094 0346     		mov	r3, r0
 167 0096 002B     		cmp	r3, #0
 168 0098 F9D0     		beq	.L5
  65:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****         
  66:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          if(CCMAuthEncryptGetResult(len_mac, 
  67:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                     (uint16_t) *len_m,
 169              		.loc 1 67 0
 170 009a 3B68     		ldr	r3, [r7]
 171 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                     (uint16_t) *len_m,
 172              		.loc 1 66 0
 173 009e 99B2     		uxth	r1, r3
  68:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                     &m[*len_m]) == AES_SUCCESS) {
 174              		.loc 1 68 0
 175 00a0 3B68     		ldr	r3, [r7]
 176 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 00a4 1A46     		mov	r2, r3
  66:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                     (uint16_t) *len_m,
 178              		.loc 1 66 0
 179 00a6 7B68     		ldr	r3, [r7, #4]
 180 00a8 1A44     		add	r2, r2, r3
 181 00aa 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 182 00ae 1846     		mov	r0, r3
 183 00b0 FFF7FEFF 		bl	CCMAuthEncryptGetResult
 184 00b4 0346     		mov	r3, r0
 185 00b6 002B     		cmp	r3, #0
 186 00b8 09D1     		bne	.L4
  69:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  70:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             *len_m += len_mac;
 187              		.loc 1 70 0
 188 00ba 3B68     		ldr	r3, [r7]
 189 00bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 190 00be 97F83C30 		ldrb	r3, [r7, #60]
 191 00c2 1344     		add	r3, r3, r2
 192 00c4 DAB2     		uxtb	r2, r3
 193 00c6 3B68     		ldr	r3, [r7]
 194 00c8 1A70     		strb	r2, [r3]
  71:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             return E_SUCCESS;
 195              		.loc 1 71 0
 196 00ca 0023     		movs	r3, #0
 197 00cc 00E0     		b	.L7
 198              	.L4:
  72:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          }
  73:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       }
  74:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    }
  75:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  76:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    return E_FAIL;
 199              		.loc 1 76 0
 200 00ce 0123     		movs	r3, #1
 201              	.L7:
  77:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** }
 202              		.loc 1 77 0 discriminator 1
 203 00d0 1846     		mov	r0, r3
 204 00d2 1C37     		adds	r7, r7, #28
 205              		.cfi_def_cfa_offset 20
 206 00d4 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 00d6 F0BD     		pop	{r4, r5, r6, r7, pc}
 210              		.cfi_endproc
 211              	.LFE1:
 213              		.align	1
 214              		.global	cryptoengine_aes_ccms_dec
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu softvfp
 220              	cryptoengine_aes_ccms_dec:
 221              	.LFB2:
  78:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  79:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_aes_ccms_dec(uint8_t* a,
  80:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t len_a,
  81:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t* m,
  82:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t* len_m,
  83:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t* nonce,
  84:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t l,
  85:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t key[16],
  86:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          uint8_t len_mac) {
 222              		.loc 1 86 0
 223              		.cfi_startproc
 224              		@ args = 16, pretend = 0, frame = 40
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 00d8 B0B5     		push	{r4, r5, r7, lr}
 227              		.cfi_def_cfa_offset 16
 228              		.cfi_offset 4, -16
 229              		.cfi_offset 5, -12
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 00da 92B0     		sub	sp, sp, #72
 233              		.cfi_def_cfa_offset 88
 234 00dc 08AF     		add	r7, sp, #32
 235              		.cfi_def_cfa 7, 56
 236 00de F860     		str	r0, [r7, #12]
 237 00e0 7A60     		str	r2, [r7, #4]
 238 00e2 3B60     		str	r3, [r7]
 239 00e4 0B46     		mov	r3, r1
 240 00e6 FB72     		strb	r3, [r7, #11]
  87:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  88:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    bool decrypt;
  89:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    uint8_t key_location;
  90:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    uint8_t tag[CBC_MAX_MAC_SIZE];
  91:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****   
  92:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    decrypt = *len_m - len_mac > 0 ? true : false;
 241              		.loc 1 92 0
 242 00e8 3B68     		ldr	r3, [r7]
 243 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 00ec 1A46     		mov	r2, r3
 245 00ee 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 246 00f2 D31A     		subs	r3, r2, r3
 247 00f4 002B     		cmp	r3, #0
 248 00f6 CCBF     		ite	gt
 249 00f8 0123     		movgt	r3, #1
 250 00fa 0023     		movle	r3, #0
 251 00fc 87F82730 		strb	r3, [r7, #39]
  93:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
  94:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 252              		.loc 1 94 0
 253 0100 07F12603 		add	r3, r7, #38
 254 0104 1946     		mov	r1, r3
 255 0106 386C     		ldr	r0, [r7, #64]
 256 0108 00F071F8 		bl	load_key
 257 010c 0346     		mov	r3, r0
 258 010e 002B     		cmp	r3, #0
 259 0110 3DD1     		bne	.L9
  95:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(CCMInvAuthDecryptStart(decrypt,
  96:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               len_mac,
  97:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               nonce,
  98:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               m,
  99:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               (uint16_t) *len_m,
 260              		.loc 1 99 0
 261 0112 3B68     		ldr	r3, [r7]
 262 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(CCMInvAuthDecryptStart(decrypt,
 263              		.loc 1 95 0
 264 0116 9BB2     		uxth	r3, r3
 265 0118 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 266 011a 92B2     		uxth	r2, r2
 267 011c 97F82610 		ldrb	r1, [r7, #38]	@ zero_extendqisi2
 268 0120 97F84450 		ldrb	r5, [r7, #68]	@ zero_extendqisi2
 269 0124 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 270 0128 0020     		movs	r0, #0
 271 012a 0690     		str	r0, [sp, #24]
 272 012c 97F83C00 		ldrb	r0, [r7, #60]	@ zero_extendqisi2
 273 0130 0590     		str	r0, [sp, #20]
 274 0132 07F11400 		add	r0, r7, #20
 275 0136 0490     		str	r0, [sp, #16]
 276 0138 0391     		str	r1, [sp, #12]
 277 013a 0292     		str	r2, [sp, #8]
 278 013c FA68     		ldr	r2, [r7, #12]
 279 013e 0192     		str	r2, [sp, #4]
 280 0140 0093     		str	r3, [sp]
 281 0142 7B68     		ldr	r3, [r7, #4]
 282 0144 BA6B     		ldr	r2, [r7, #56]
 283 0146 2946     		mov	r1, r5
 284 0148 2046     		mov	r0, r4
 285 014a FFF7FEFF 		bl	CCMInvAuthDecryptStart
 286 014e 0346     		mov	r3, r0
 287 0150 002B     		cmp	r3, #0
 288 0152 1CD1     		bne	.L9
 289              	.L10:
 100:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               a,
 101:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               (uint16_t) len_a,
 102:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               key_location,
 103:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               tag,
 104:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               l,
 105:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                               /* polling */ 0) == AES_SUCCESS) {
 106:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
 107:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          do {
 108:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             ASM_NOP;
 290              		.loc 1 108 0 discriminator 1
 291              		.syntax unified
 292              	@ 108 "build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\cryptoengine.c" 1
 293 0154 00BF     		NOP
 294              	@ 0 "" 2
 109:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          } while(CCMInvAuthDecryptCheckResult() == 0);
 295              		.loc 1 109 0 discriminator 1
 296              		.thumb
 297              		.syntax unified
 298 0156 FFF7FEFF 		bl	CCMInvAuthDecryptCheckResult
 299 015a 0346     		mov	r3, r0
 300 015c 002B     		cmp	r3, #0
 301 015e F9D0     		beq	.L10
 110:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****        
 111:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          if(CCMInvAuthDecryptGetResult(len_mac, 
 112:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                        m,
 113:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                        (uint16_t) *len_m,
 302              		.loc 1 113 0
 303 0160 3B68     		ldr	r3, [r7]
 304 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 111:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                        m,
 305              		.loc 1 111 0
 306 0164 9AB2     		uxth	r2, r3
 307 0166 07F11403 		add	r3, r7, #20
 308 016a 97F84400 		ldrb	r0, [r7, #68]	@ zero_extendqisi2
 309 016e 7968     		ldr	r1, [r7, #4]
 310 0170 FFF7FEFF 		bl	CCMInvAuthDecryptGetResult
 311 0174 0346     		mov	r3, r0
 312 0176 002B     		cmp	r3, #0
 313 0178 09D1     		bne	.L9
 114:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****                                        tag) == AES_SUCCESS) {
 115:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
 116:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             *len_m -= len_mac;
 314              		.loc 1 116 0
 315 017a 3B68     		ldr	r3, [r7]
 316 017c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 317 017e 97F84430 		ldrb	r3, [r7, #68]
 318 0182 D31A     		subs	r3, r2, r3
 319 0184 DAB2     		uxtb	r2, r3
 320 0186 3B68     		ldr	r3, [r7]
 321 0188 1A70     		strb	r2, [r3]
 117:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             return E_SUCCESS;
 322              		.loc 1 117 0
 323 018a 0023     		movs	r3, #0
 324 018c 00E0     		b	.L12
 325              	.L9:
 118:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          }
 119:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       }
 120:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    }
 121:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    return E_FAIL;
 326              		.loc 1 121 0
 327 018e 0123     		movs	r3, #1
 328              	.L12:
 122:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** }
 329              		.loc 1 122 0 discriminator 1
 330 0190 1846     		mov	r0, r3
 331 0192 2837     		adds	r7, r7, #40
 332              		.cfi_def_cfa_offset 16
 333 0194 BD46     		mov	sp, r7
 334              		.cfi_def_cfa_register 13
 335              		@ sp needed
 336 0196 B0BD     		pop	{r4, r5, r7, pc}
 337              		.cfi_endproc
 338              	.LFE2:
 340              		.align	1
 341              		.global	cryptoengine_aes_ecb_enc
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu softvfp
 347              	cryptoengine_aes_ecb_enc:
 348              	.LFB3:
 123:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
 124:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_aes_ecb_enc(uint8_t* buffer, uint8_t* key) {
 349              		.loc 1 124 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 16
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0198 80B5     		push	{r7, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 019a 86B0     		sub	sp, sp, #24
 358              		.cfi_def_cfa_offset 32
 359 019c 02AF     		add	r7, sp, #8
 360              		.cfi_def_cfa 7, 24
 361 019e 7860     		str	r0, [r7, #4]
 362 01a0 3960     		str	r1, [r7]
 125:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    uint8_t key_location;
 126:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 363              		.loc 1 126 0
 364 01a2 07F10F03 		add	r3, r7, #15
 365 01a6 1946     		mov	r1, r3
 366 01a8 3868     		ldr	r0, [r7]
 367 01aa 00F020F8 		bl	load_key
 368 01ae 0346     		mov	r3, r0
 369 01b0 002B     		cmp	r3, #0
 370 01b2 17D1     		bne	.L14
 127:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       // Polling
 128:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(AESECBStart(buffer, buffer, key_location, 1, 0) == AES_SUCCESS) {
 371              		.loc 1 128 0
 372 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 373 01b6 0023     		movs	r3, #0
 374 01b8 0093     		str	r3, [sp]
 375 01ba 0123     		movs	r3, #1
 376 01bc 7968     		ldr	r1, [r7, #4]
 377 01be 7868     		ldr	r0, [r7, #4]
 378 01c0 FFF7FEFF 		bl	AESECBStart
 379 01c4 0346     		mov	r3, r0
 380 01c6 002B     		cmp	r3, #0
 381 01c8 0CD1     		bne	.L14
 382              	.L15:
 129:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          do {
 130:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             ASM_NOP;
 383              		.loc 1 130 0 discriminator 1
 384              		.syntax unified
 385              	@ 130 "build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538\cryptoengine.c" 1
 386 01ca 00BF     		NOP
 387              	@ 0 "" 2
 131:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          } while(AESECBCheckResult() == 0);
 388              		.loc 1 131 0 discriminator 1
 389              		.thumb
 390              		.syntax unified
 391 01cc FFF7FEFF 		bl	AESECBCheckResult
 392 01d0 0346     		mov	r3, r0
 393 01d2 002B     		cmp	r3, #0
 394 01d4 F9D0     		beq	.L15
 132:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
 133:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          if(AESECBGetResult() == AES_SUCCESS) {
 395              		.loc 1 133 0
 396 01d6 FFF7FEFF 		bl	AESECBGetResult
 397 01da 0346     		mov	r3, r0
 398 01dc 002B     		cmp	r3, #0
 399 01de 01D1     		bne	.L14
 134:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****             return E_SUCCESS;
 400              		.loc 1 134 0
 401 01e0 0023     		movs	r3, #0
 402 01e2 00E0     		b	.L17
 403              	.L14:
 135:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          }
 136:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       }
 137:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    }
 138:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    return E_FAIL;
 404              		.loc 1 138 0
 405 01e4 0123     		movs	r3, #1
 406              	.L17:
 139:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** }
 407              		.loc 1 139 0 discriminator 1
 408 01e6 1846     		mov	r0, r3
 409 01e8 1037     		adds	r7, r7, #16
 410              		.cfi_def_cfa_offset 8
 411 01ea BD46     		mov	sp, r7
 412              		.cfi_def_cfa_register 13
 413              		@ sp needed
 414 01ec 80BD     		pop	{r7, pc}
 415              		.cfi_endproc
 416              	.LFE3:
 418              		.align	1
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu softvfp
 424              	load_key:
 425              	.LFB4:
 140:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
 141:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** //=========================== private ==========================================
 142:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** 
 143:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** /**
 144:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** \brief On success, returns by reference the location in key RAM where the 
 145:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    new/existing key is stored.
 146:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** */
 147:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** static owerror_t load_key(uint8_t key[16], uint8_t* /* out */ key_location) {
 426              		.loc 1 147 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 01ee 90B5     		push	{r4, r7, lr}
 431              		.cfi_def_cfa_offset 12
 432              		.cfi_offset 4, -12
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 01f0 83B0     		sub	sp, sp, #12
 436              		.cfi_def_cfa_offset 24
 437 01f2 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 439 01f4 7860     		str	r0, [r7, #4]
 440 01f6 3960     		str	r1, [r7]
 148:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    static uint8_t loaded_key[16];
 149:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    
 150:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    if(memcmp(loaded_key, key, 16) != 0) {
 441              		.loc 1 150 0
 442 01f8 1022     		movs	r2, #16
 443 01fa 7968     		ldr	r1, [r7, #4]
 444 01fc 0F48     		ldr	r0, .L21
 445 01fe FFF7FEFF 		bl	memcmp
 446 0202 0346     		mov	r3, r0
 447 0204 002B     		cmp	r3, #0
 448 0206 10D0     		beq	.L19
 151:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       memcpy(loaded_key, key, 16);
 449              		.loc 1 151 0
 450 0208 0C4A     		ldr	r2, .L21
 451 020a 7B68     		ldr	r3, [r7, #4]
 452 020c 1446     		mov	r4, r2
 453 020e 1868     		ldr	r0, [r3]	@ unaligned
 454 0210 5968     		ldr	r1, [r3, #4]	@ unaligned
 455 0212 9A68     		ldr	r2, [r3, #8]	@ unaligned
 456 0214 DB68     		ldr	r3, [r3, #12]	@ unaligned
 457 0216 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 152:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       // Load the key in key RAM
 153:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       if(AESLoadKey(loaded_key, DEFAULT_KEY_AREA) != AES_SUCCESS) {
 458              		.loc 1 153 0
 459 0218 0021     		movs	r1, #0
 460 021a 0848     		ldr	r0, .L21
 461 021c FFF7FEFF 		bl	AESLoadKey
 462 0220 0346     		mov	r3, r0
 463 0222 002B     		cmp	r3, #0
 464 0224 01D0     		beq	.L19
 154:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****          return E_FAIL;
 465              		.loc 1 154 0
 466 0226 0123     		movs	r3, #1
 467 0228 03E0     		b	.L20
 468              	.L19:
 155:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****       }
 156:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    }
 157:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    *key_location = DEFAULT_KEY_AREA;
 469              		.loc 1 157 0
 470 022a 3B68     		ldr	r3, [r7]
 471 022c 0022     		movs	r2, #0
 472 022e 1A70     		strb	r2, [r3]
 158:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c ****    return E_SUCCESS;
 473              		.loc 1 158 0
 474 0230 0023     		movs	r3, #0
 475              	.L20:
 159:build\openmote-cc2538_armgcc\bsp\boards\openmote-cc2538/cryptoengine.c **** }
 476              		.loc 1 159 0
 477 0232 1846     		mov	r0, r3
 478 0234 0C37     		adds	r7, r7, #12
 479              		.cfi_def_cfa_offset 12
 480 0236 BD46     		mov	sp, r7
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 0238 90BD     		pop	{r4, r7, pc}
 484              	.L22:
 485 023a 00BF     		.align	2
 486              	.L21:
 487 023c 00000000 		.word	loaded_key.5065
 488              		.cfi_endproc
 489              	.LFE4:
 491              		.bss
 492              		.align	2
 493              	loaded_key.5065:
 494 0000 00000000 		.space	16
 494      00000000 
 494      00000000 
 494      00000000 
 496              		.text
 497              	.Letext0:
 498              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 499              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 500              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 501              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 502              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 503              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 504              		.file 8 "bsp\\boards\\openmote-cc2538/source/aes.h"
 505              		.file 9 "bsp\\boards\\openmote-cc2538/board_info.h"
 506              		.file 10 "inc/opendefs.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cryptoengine.c
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:42     .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:49     .text:00000000 cryptoengine_init
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:83     .text:0000001a cryptoengine_aes_ccms_enc
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:424    .text:000001ee load_key
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:220    .text:000000d8 cryptoengine_aes_ccms_dec
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:347    .text:00000198 cryptoengine_aes_ecb_enc
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:487    .text:0000023c $d
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:493    .bss:00000000 loaded_key.5065
C:\Users\Lee\AppData\Local\Temp\ccSYJVCk.s:492    .bss:00000000 $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.sys_ctrl.h.62.2f03f4949954c40d60d71df89cf310cb
                           .group:00000000 wm4.hw_aes.h.39.77ecc3829d96bb0e5669b1f36ecffb12
                           .group:00000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.aes.h.66.0fb976edb685649779bd34f5f8f7ef75
                           .group:00000000 wm4.toolchain_defs.h.2.1de8df52ab2567aa1aa0a288d2325900
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451

UNDEFINED SYMBOLS
SysCtrlPeripheralReset
SysCtrlPeripheralEnable
CCMAuthEncryptStart
CCMAuthEncryptCheckResult
CCMAuthEncryptGetResult
CCMInvAuthDecryptStart
CCMInvAuthDecryptCheckResult
CCMInvAuthDecryptGetResult
AESECBStart
AESECBCheckResult
AESECBGetResult
memcmp
AESLoadKey
