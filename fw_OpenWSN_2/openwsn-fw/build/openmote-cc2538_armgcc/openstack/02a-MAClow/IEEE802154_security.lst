   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"IEEE802154_security.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	chTemplate_default:
  45 0030 05       		.byte	5
  46 0031 06       		.byte	6
  47 0032 0C       		.byte	12
  48 0033 07       		.byte	7
  49 0034 0F       		.byte	15
  50 0035 04       		.byte	4
  51 0036 0E       		.byte	14
  52 0037 0B       		.byte	11
  53 0038 08       		.byte	8
  54 0039 00       		.byte	0
  55 003a 01       		.byte	1
  56 003b 02       		.byte	2
  57 003c 0D       		.byte	13
  58 003d 03       		.byte	3
  59 003e 09       		.byte	9
  60 003f 0A       		.byte	10
  61              		.align	2
  64              	ebIEsBytestream:
  65 0040 1A       		.byte	26
  66 0041 88       		.byte	-120
  67 0042 06       		.byte	6
  68 0043 1A       		.byte	26
  69 0044 00       		.byte	0
  70 0045 00       		.byte	0
  71 0046 00       		.byte	0
  72 0047 00       		.byte	0
  73 0048 00       		.byte	0
  74 0049 00       		.byte	0
  75 004a 01       		.byte	1
  76 004b 1C       		.byte	28
  77 004c 00       		.byte	0
  78 004d 01       		.byte	1
  79 004e C8       		.byte	-56
  80 004f 00       		.byte	0
  81 0050 0A       		.byte	10
  82 0051 1B       		.byte	27
  83 0052 01       		.byte	1
  84 0053 00       		.byte	0
  85 0054 0D       		.byte	13
  86 0055 00       		.byte	0
  87 0056 01       		.byte	1
  88 0057 00       		.byte	0
  89 0058 00       		.byte	0
  90 0059 00       		.byte	0
  91 005a 00       		.byte	0
  92 005b 0F       		.byte	15
  93              		.align	2
  96              	linklocalprefix:
  97 005c FE       		.byte	-2
  98 005d 80       		.byte	-128
  99 005e 00       		.byte	0
 100 005f 00       		.byte	0
 101 0060 00       		.byte	0
 102 0061 00       		.byte	0
 103 0062 00       		.byte	0
 104 0063 00       		.byte	0
 105              		.align	2
 108              	all_routers_multicast:
 109 0064 FF       		.byte	-1
 110 0065 02       		.byte	2
 111 0066 00       		.byte	0
 112 0067 00       		.byte	0
 113 0068 00       		.byte	0
 114 0069 00       		.byte	0
 115 006a 00       		.byte	0
 116 006b 00       		.byte	0
 117 006c 00       		.byte	0
 118 006d 00       		.byte	0
 119 006e 00       		.byte	0
 120 006f 00       		.byte	0
 121 0070 00       		.byte	0
 122 0071 00       		.byte	0
 123 0072 00       		.byte	0
 124 0073 1A       		.byte	26
 125              		.comm	ieee802154_security_vars,36,4
 126              		.text
 127              		.align	1
 128              		.global	IEEE802154_security_init
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu softvfp
 134              	IEEE802154_security_init:
 135              	.LFB3:
 136              		.file 1 "build\\openmote-cc2538_armgcc\\openstack\\02a-MAClow\\IEEE802154_security.c"
   1:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
   2:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Security operations defined by IEEE802.15.4e standard
   3:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
   4:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \author Savio Sciancalepore <savio.sciancalepore@poliba.it>, June 2015.
   5:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \author Giuseppe Piro <giuseppe.piro@poliba.it> June 2015.
   6:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \author Gennaro Boggia <gennaro.boggia@poliba.it> June 2015.
   7:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \author Luigi Alfredo Grieco <alfredo.grieco@poliba.it>, June 2015.
   8:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \author Malisa Vucinic <malishav@gmail.com>, June 2015.
   9:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
  10:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  11:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "packetfunctions.h"
  12:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "cryptoengine.h"
  13:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "IEEE802154.h"
  14:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "IEEE802154E.h"
  15:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "idmanager.h"
  16:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "openserial.h"
  17:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "neighbors.h"
  18:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #include "IEEE802154_security.h"
  19:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  20:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** //=============================define==========================================
  21:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** //=========================== variables =======================================
  22:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  23:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** ieee802154_security_vars_t ieee802154_security_vars;
  24:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  25:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** //========= common functions regardless of whether L2SEC is used or not =======
  26:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** // following 7 functions are also called when L2SEC is not used. This is to facilitate
  27:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** // automated testing of SECJOIN without L2SEC and to ensure the order in which nodes
  28:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** // start sending out EBs. With the current implementation, EBs are sent only once the
  29:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** // node has received a Join Response from the JRC.
  30:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  31:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_init(void) {
 137              		.loc 1 31 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
  32:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  33:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // By default, we assume that no dynamic keying (SEC JOIN) is used
  34:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // if an app is linked with dynamic keying support, it should set
  35:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // this flag to true by calling IEEE802154_security_setDynamicKeying()
  36:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    ieee802154_security_vars.dynamicKeying = FALSE;
 147              		.loc 1 36 0
 148 0004 0B4B     		ldr	r3, .L2
 149 0006 0022     		movs	r2, #0
 150 0008 1A70     		strb	r2, [r3]
  37:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  38:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     // TODO joinPermitted flag should be set dynamically upon a button press
  39:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     // and propagated through the network via EBs
  40:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.joinPermitted = TRUE;
 151              		.loc 1 40 0
 152 000a 0A4B     		ldr	r3, .L2
 153 000c 0122     		movs	r2, #1
 154 000e 5A70     		strb	r2, [r3, #1]
  41:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  42:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // invalidate beacon key (key 1)
  43:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    ieee802154_security_vars.k1.index = IEEE802154_SECURITY_KEYINDEX_INVALID;
 155              		.loc 1 43 0
 156 0010 084B     		ldr	r3, .L2
 157 0012 0022     		movs	r2, #0
 158 0014 9A70     		strb	r2, [r3, #2]
  44:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    memset(&ieee802154_security_vars.k1.value[0], 0x00, 16);
 159              		.loc 1 44 0
 160 0016 1022     		movs	r2, #16
 161 0018 0021     		movs	r1, #0
 162 001a 0748     		ldr	r0, .L2+4
 163 001c FFF7FEFF 		bl	memset
  45:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  46:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // invalidate data key (key 2)
  47:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    ieee802154_security_vars.k2.index = IEEE802154_SECURITY_KEYINDEX_INVALID;
 164              		.loc 1 47 0
 165 0020 044B     		ldr	r3, .L2
 166 0022 0022     		movs	r2, #0
 167 0024 DA74     		strb	r2, [r3, #19]
  48:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    memset(&ieee802154_security_vars.k2.value[0], 0x00, 16);
 168              		.loc 1 48 0
 169 0026 1022     		movs	r2, #16
 170 0028 0021     		movs	r1, #0
 171 002a 0448     		ldr	r0, .L2+8
 172 002c FFF7FEFF 		bl	memset
  49:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 173              		.loc 1 49 0
 174 0030 00BF     		nop
 175 0032 80BD     		pop	{r7, pc}
 176              	.L3:
 177              		.align	2
 178              	.L2:
 179 0034 00000000 		.word	ieee802154_security_vars
 180 0038 03000000 		.word	ieee802154_security_vars+3
 181 003c 14000000 		.word	ieee802154_security_vars+20
 182              		.cfi_endproc
 183              	.LFE3:
 185              		.align	1
 186              		.global	IEEE802154_security_getBeaconKeyIndex
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu softvfp
 192              	IEEE802154_security_getBeaconKeyIndex:
 193              	.LFB4:
  50:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  51:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getBeaconKeyIndex(void) {
 194              		.loc 1 51 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0040 80B4     		push	{r7}
 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 7, -4
 202 0042 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
  52:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return ieee802154_security_vars.k1.index;
 204              		.loc 1 52 0
 205 0044 024B     		ldr	r3, .L6
 206 0046 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  53:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 207              		.loc 1 53 0
 208 0048 1846     		mov	r0, r3
 209 004a BD46     		mov	sp, r7
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 004c 80BC     		pop	{r7}
 213              		.cfi_restore 7
 214              		.cfi_def_cfa_offset 0
 215 004e 7047     		bx	lr
 216              	.L7:
 217              		.align	2
 218              	.L6:
 219 0050 00000000 		.word	ieee802154_security_vars
 220              		.cfi_endproc
 221              	.LFE4:
 223              		.align	1
 224              		.global	IEEE802154_security_getDataKeyIndex
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	IEEE802154_security_getDataKeyIndex:
 231              	.LFB5:
  54:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getDataKeyIndex(void) {
 232              		.loc 1 54 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237 0054 80B4     		push	{r7}
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 7, -4
 240 0056 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
  55:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return ieee802154_security_vars.k2.index;
 242              		.loc 1 55 0
 243 0058 024B     		ldr	r3, .L10
 244 005a DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
  56:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 245              		.loc 1 56 0
 246 005c 1846     		mov	r0, r3
 247 005e BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 0060 80BC     		pop	{r7}
 251              		.cfi_restore 7
 252              		.cfi_def_cfa_offset 0
 253 0062 7047     		bx	lr
 254              	.L11:
 255              		.align	2
 256              	.L10:
 257 0064 00000000 		.word	ieee802154_security_vars
 258              		.cfi_endproc
 259              	.LFE5:
 261              		.align	1
 262              		.global	IEEE802154_security_setBeaconKey
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	IEEE802154_security_setBeaconKey:
 269              	.LFB6:
  57:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  58:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_setBeaconKey(uint8_t index, uint8_t* value) {
 270              		.loc 1 58 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275 0068 90B4     		push	{r4, r7}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 7, -4
 279 006a 82B0     		sub	sp, sp, #8
 280              		.cfi_def_cfa_offset 16
 281 006c 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 283 006e 0346     		mov	r3, r0
 284 0070 3960     		str	r1, [r7]
 285 0072 FB71     		strb	r3, [r7, #7]
  59:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.k1.index = index;
 286              		.loc 1 59 0
 287 0074 094A     		ldr	r2, .L13
 288 0076 FB79     		ldrb	r3, [r7, #7]
 289 0078 9370     		strb	r3, [r2, #2]
  60:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     memcpy(ieee802154_security_vars.k1.value, value, 16);
 290              		.loc 1 60 0
 291 007a 084B     		ldr	r3, .L13
 292 007c 3A68     		ldr	r2, [r7]
 293 007e 0333     		adds	r3, r3, #3
 294 0080 1468     		ldr	r4, [r2]	@ unaligned
 295 0082 5068     		ldr	r0, [r2, #4]	@ unaligned
 296 0084 9168     		ldr	r1, [r2, #8]	@ unaligned
 297 0086 D268     		ldr	r2, [r2, #12]	@ unaligned
 298 0088 1C60     		str	r4, [r3]	@ unaligned
 299 008a 5860     		str	r0, [r3, #4]	@ unaligned
 300 008c 9960     		str	r1, [r3, #8]	@ unaligned
 301 008e DA60     		str	r2, [r3, #12]	@ unaligned
  61:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 302              		.loc 1 61 0
 303 0090 00BF     		nop
 304 0092 0837     		adds	r7, r7, #8
 305              		.cfi_def_cfa_offset 8
 306 0094 BD46     		mov	sp, r7
 307              		.cfi_def_cfa_register 13
 308              		@ sp needed
 309 0096 90BC     		pop	{r4, r7}
 310              		.cfi_restore 7
 311              		.cfi_restore 4
 312              		.cfi_def_cfa_offset 0
 313 0098 7047     		bx	lr
 314              	.L14:
 315 009a 00BF     		.align	2
 316              	.L13:
 317 009c 00000000 		.word	ieee802154_security_vars
 318              		.cfi_endproc
 319              	.LFE6:
 321              		.align	1
 322              		.global	IEEE802154_security_setDataKey
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu softvfp
 328              	IEEE802154_security_setDataKey:
 329              	.LFB7:
  62:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  63:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_setDataKey(uint8_t index, uint8_t* value) {
 330              		.loc 1 63 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 8
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 00a0 90B4     		push	{r4, r7}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 7, -4
 339 00a2 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 16
 341 00a4 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 00a6 0346     		mov	r3, r0
 344 00a8 3960     		str	r1, [r7]
 345 00aa FB71     		strb	r3, [r7, #7]
  64:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.k2.index = index;
 346              		.loc 1 64 0
 347 00ac 094A     		ldr	r2, .L16
 348 00ae FB79     		ldrb	r3, [r7, #7]
 349 00b0 D374     		strb	r3, [r2, #19]
  65:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     memcpy(ieee802154_security_vars.k2.value, value, 16);
 350              		.loc 1 65 0
 351 00b2 084B     		ldr	r3, .L16
 352 00b4 3A68     		ldr	r2, [r7]
 353 00b6 1433     		adds	r3, r3, #20
 354 00b8 1468     		ldr	r4, [r2]	@ unaligned
 355 00ba 5068     		ldr	r0, [r2, #4]	@ unaligned
 356 00bc 9168     		ldr	r1, [r2, #8]	@ unaligned
 357 00be D268     		ldr	r2, [r2, #12]	@ unaligned
 358 00c0 1C60     		str	r4, [r3]	@ unaligned
 359 00c2 5860     		str	r0, [r3, #4]	@ unaligned
 360 00c4 9960     		str	r1, [r3, #8]	@ unaligned
 361 00c6 DA60     		str	r2, [r3, #12]	@ unaligned
  66:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 362              		.loc 1 66 0
 363 00c8 00BF     		nop
 364 00ca 0837     		adds	r7, r7, #8
 365              		.cfi_def_cfa_offset 8
 366 00cc BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 00ce 90BC     		pop	{r4, r7}
 370              		.cfi_restore 7
 371              		.cfi_restore 4
 372              		.cfi_def_cfa_offset 0
 373 00d0 7047     		bx	lr
 374              	.L17:
 375 00d2 00BF     		.align	2
 376              	.L16:
 377 00d4 00000000 		.word	ieee802154_security_vars
 378              		.cfi_endproc
 379              	.LFE7:
 381              		.align	1
 382              		.global	IEEE802154_security_isConfigured
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu softvfp
 388              	IEEE802154_security_isConfigured:
 389              	.LFB8:
  67:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  68:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** bool IEEE802154_security_isConfigured(void) {
 390              		.loc 1 68 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395 00d8 80B4     		push	{r7}
 396              		.cfi_def_cfa_offset 4
 397              		.cfi_offset 7, -4
 398 00da 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
  69:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (ieee802154_security_vars.dynamicKeying == FALSE) {
 400              		.loc 1 69 0
 401 00dc 0B4B     		ldr	r3, .L22
 402 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 403 00e0 83F00103 		eor	r3, r3, #1
 404 00e4 DBB2     		uxtb	r3, r3
 405 00e6 002B     		cmp	r3, #0
 406 00e8 01D0     		beq	.L19
  70:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 407              		.loc 1 70 0
 408 00ea 0123     		movs	r3, #1
 409 00ec 0AE0     		b	.L20
 410              	.L19:
  71:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     }
  72:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  73:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (ieee802154_security_vars.k1.index != IEEE802154_SECURITY_KEYINDEX_INVALID &&
 411              		.loc 1 73 0
 412 00ee 074B     		ldr	r3, .L22
 413 00f0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 414 00f2 002B     		cmp	r3, #0
 415 00f4 05D0     		beq	.L21
  74:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          ieee802154_security_vars.k2.index != IEEE802154_SECURITY_KEYINDEX_INVALID) {
 416              		.loc 1 74 0 discriminator 1
 417 00f6 054B     		ldr	r3, .L22
 418 00f8 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
  73:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          ieee802154_security_vars.k2.index != IEEE802154_SECURITY_KEYINDEX_INVALID) {
 419              		.loc 1 73 0 discriminator 1
 420 00fa 002B     		cmp	r3, #0
 421 00fc 01D0     		beq	.L21
  75:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 422              		.loc 1 75 0
 423 00fe 0123     		movs	r3, #1
 424 0100 00E0     		b	.L20
 425              	.L21:
  76:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     }
  77:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return FALSE;
 426              		.loc 1 77 0
 427 0102 0023     		movs	r3, #0
 428              	.L20:
  78:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 429              		.loc 1 78 0
 430 0104 1846     		mov	r0, r3
 431 0106 BD46     		mov	sp, r7
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 0108 80BC     		pop	{r7}
 435              		.cfi_restore 7
 436              		.cfi_def_cfa_offset 0
 437 010a 7047     		bx	lr
 438              	.L23:
 439              		.align	2
 440              	.L22:
 441 010c 00000000 		.word	ieee802154_security_vars
 442              		.cfi_endproc
 443              	.LFE8:
 445              		.align	1
 446              		.global	IEEE802154_security_setDynamicKeying
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu softvfp
 452              	IEEE802154_security_setDynamicKeying:
 453              	.LFB9:
  79:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  80:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_setDynamicKeying(void) {
 454              		.loc 1 80 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0110 80B4     		push	{r7}
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 7, -4
 462 0112 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
  81:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.dynamicKeying = TRUE;
 464              		.loc 1 81 0
 465 0114 034B     		ldr	r3, .L25
 466 0116 0122     		movs	r2, #1
 467 0118 1A70     		strb	r2, [r3]
  82:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 468              		.loc 1 82 0
 469 011a 00BF     		nop
 470 011c BD46     		mov	sp, r7
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 011e 80BC     		pop	{r7}
 474              		.cfi_restore 7
 475              		.cfi_def_cfa_offset 0
 476 0120 7047     		bx	lr
 477              	.L26:
 478 0122 00BF     		.align	2
 479              	.L25:
 480 0124 00000000 		.word	ieee802154_security_vars
 481              		.cfi_endproc
 482              	.LFE9:
 484              		.align	1
 485              		.global	IEEE802154_security_prependAuxiliarySecurityHeader
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	IEEE802154_security_prependAuxiliarySecurityHeader:
 492              	.LFB10:
  83:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  84:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** //=========================== public ==========================================
  85:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #ifdef L2_SECURITY_ACTIVE
  86:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
  87:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Adding of Auxiliary Security Header to the IEEE802.15.4 MAC header
  88:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
  89:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_prependAuxiliarySecurityHeader(OpenQueueEntry_t* msg){
  90:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  91:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t frameCounterSuppression;
  92:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t temp8b;
  93:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    open_addr_t* temp_keySource;
  94:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t auxiliaryLength;
  95:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  96:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    frameCounterSuppression = IEEE154_ASH_FRAMECOUNTER_SUPPRESSED; //the frame counter is carried in
  97:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
  98:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //max length of MAC frames
  99:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // length of authentication Tag
 100:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    msg->l2_authenticationLength = IEEE802154_security_authLengthChecking(msg->l2_securityLevel);
 101:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 102:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //length of auxiliary security header
 103:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    auxiliaryLength = IEEE802154_security_auxLengthChecking(msg->l2_keyIdMode,
 104:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                                            frameCounterSuppression, // frame counte
 105:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                                            0); //length of Key ID field
 106:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 107:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 108:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if ((msg->length+auxiliaryLength+msg->l2_authenticationLength+2) >= 128 ){ //2 bytes of CRC, 127
 109:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       return;
 110:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 111:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 112:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //start setting the Auxiliary Security Header
 113:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (msg->l2_keyIdMode != IEEE154_ASH_KEYIDMODE_IMPLICIT){//if the KeyIdMode is zero, keyIndex an
 114:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       temp8b = msg->l2_keyIndex; //key index field
 115:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 116:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       *((uint8_t*)(msg->payload)) = temp8b;
 117:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 118:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 119:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //insert the keyIdMode field
 120:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_keyIdMode){
 121:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_IMPLICIT: //no KeyIDMode field - implicit
 122:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_DEFAULTKEYSOURCE:// macDefaultKeySource
 123:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 124:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_16: //keySource with 16b address
 125:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          temp_keySource = &msg->l2_keySource;
 126:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 127:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          *((uint8_t*)(msg->payload)) = temp_keySource->addr_64b[6];
 128:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 129:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          *((uint8_t*)(msg->payload)) = temp_keySource->addr_64b[7];
 130:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 131:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_64: //keySource with 64b address
 132:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          temp_keySource = &msg->l2_keySource;
 133:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          packetfunctions_writeAddress(msg,temp_keySource,OW_LITTLE_ENDIAN);
 134:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 135:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       default://error
 136:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 137:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)msg->l2_frameType,
 138:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)0);
 139:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return;
 140:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 141:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 142:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //security control field
 143:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 144:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****  
 145:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    temp8b = 0;
 146:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    temp8b |= msg->l2_securityLevel << IEEE154_ASH_SCF_SECURITY_LEVEL;//3b
 147:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    temp8b |= msg->l2_keyIdMode << IEEE154_ASH_SCF_KEY_IDENTIFIER_MODE;//2b
 148:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    temp8b |= frameCounterSuppression << IEEE154_ASH_SCF_FRAME_CNT_MODE; //1b
 149:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 150:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       temp8b |= 1 << IEEE154_ASH_SCF_FRAME_CNT_SIZE; //1b
 151:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 152:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    temp8b |= 0 << 1;//1b reserved
 153:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    *((uint8_t*)(msg->payload)) = temp8b;
 154:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 155:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 156:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
 157:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Key searching and encryption/authentication operations.
 158:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
 159:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_outgoingFrameSecurity(OpenQueueEntry_t*   msg){
 160:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t nonce[13];
 161:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t *key;
 162:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    owerror_t outStatus;
 163:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t* a;
 164:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t len_a;
 165:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t* m;
 166:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t len_m;
 167:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 168:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    key = msg->l2_frameType == IEEE154_TYPE_BEACON ? ieee802154_security_vars.k1.value : ieee802154_
 169:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 170:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // First 8 bytes of the nonce are always the source address of the frame
 171:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    memcpy(&nonce[0],idmanager_getMyID(ADDR_64B)->addr_64b,8);
 172:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 173:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // Fill last 5 bytes with the ASN part of the nonce
 174:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    ieee154e_getAsn(&nonce[8]);
 175:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    packetfunctions_reverseArrayByteOrder(&nonce[8], 5);  // reverse ASN bytes to big endian 
 176:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 177:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //identify data to be authenticated and data to be encrypted
 178:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_securityLevel) {
 179:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_32:  // authentication only cases
 180:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_64:
 181:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_128: 
 182:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          a = msg->payload;             // first byte of the frame
 183:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_a = msg->length;          // whole frame
 184:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          m = &msg->payload[len_a];     // concatenate MIC at the end of the frame
 185:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_m = 0;                    // length of the encrypted part
 186:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 187:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_32:  // authentication + encryption cases
 188:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_64:
 189:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_128:
 190:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          a = msg->payload;             // first byte of the frame
 191:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          m = msg->l2_payload;          // first byte where we should start encrypting (see 15.4 std
 192:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_a = m - a;                // part that is only authenticated is the difference of two 
 193:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_m = msg->length - len_a;  // part that is encrypted+authenticated is the rest of the f
 194:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 195:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     case IEEE154_ASH_SLF_TYPE_ENC:    // encryption only
 196:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          // unsecure, should not support it
 197:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 198:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     default:
 199:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          // reject anything else
 200:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 201:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 202:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 203:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // assert
 204:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (len_a + len_m > 125) {
 205:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 206:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)msg->l2_frameType,
 207:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)2);
 208:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       return E_FAIL;
 209:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 210:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 211:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (msg->l2_authenticationLength != 0) {
 212:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       //update the length of the packet
 213:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       packetfunctions_reserveFooterSize(msg,msg->l2_authenticationLength);
 214:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 215:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 216:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //Encryption and/or authentication
 217:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // cryptoengine overwrites m[] with ciphertext and appends the MIC
 218:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    outStatus = cryptoengine_aes_ccms_enc(a,
 219:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           len_a,
 220:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           m,
 221:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           &len_m,
 222:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           nonce,
 223:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           2, // L=2 in 15.4 std
 224:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           key,
 225:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           msg->l2_authenticationLength);
 226:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 227:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //verify that no errors occurred
 228:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (outStatus != E_SUCCESS) {
 229:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 230:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       (errorparameter_t)msg->l2_frameType,
 231:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       (errorparameter_t)3);
 232:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 233:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 234:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    return outStatus;
 235:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 236:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 237:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
 238:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Parsing of IEEE802.15.4 Auxiliary Security Header.
 239:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
 240:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_retrieveAuxiliarySecurityHeader(OpenQueueEntry_t*      msg, 
 241:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                                         ieee802154_header_iht* tempheader){
 242:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 243:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t frameCnt_Suppression;
 244:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t frameCnt_Size;
 245:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t temp8b;
 246:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t i;
 247:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t receivedASN[5];
 248:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    macFrameCounter_t l2_frameCounter;
 249:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 250:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //Retrieve the Security Control field
 251:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //1byte, Security Control Field
 252:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    temp8b = *((uint8_t*)(msg->payload)+tempheader->headerLength);
 253:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    msg->l2_securityLevel = (temp8b >> IEEE154_ASH_SCF_SECURITY_LEVEL)& 0x07;//3b
 254:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 255:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //identify the length of the MIC looking the security level
 256:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    msg->l2_authenticationLength = IEEE802154_security_authLengthChecking(msg->l2_securityLevel);
 257:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 258:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //retrieve the KeyIdMode field
 259:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    msg->l2_keyIdMode = (temp8b >> IEEE154_ASH_SCF_KEY_IDENTIFIER_MODE)& 0x03;//2b
 260:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 261:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //retrieve information on the Frame Counter Mode
 262:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    frameCnt_Suppression = (temp8b >> IEEE154_ASH_SCF_FRAME_CNT_MODE)& 0x01;//1b
 263:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    frameCnt_Size = (temp8b >> IEEE154_ASH_SCF_FRAME_CNT_SIZE)& 0x01;//1b
 264:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 265:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //if the frame counter is zero, it is 4-bytes long, 5 otherwise
 266:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (frameCnt_Size == IEEE154_ASH_FRAMECOUNTER_COUNTER) {
 267:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       frameCnt_Size = 4;
 268:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    } else {
 269:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       frameCnt_Size = 5;
 270:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 271:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 272:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    tempheader->headerLength++;
 273:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 274:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //Frame Counter field
 275:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (frameCnt_Suppression == IEEE154_ASH_FRAMECOUNTER_PRESENT){//the frame counter is here
 276:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       //the frame counter size can be 4 or 5 bytes
 277:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       for (i=0;i<frameCnt_Size;i++){
 278:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****           receivedASN[i] = *((uint8_t*)(msg->payload)+tempheader->headerLength);
 279:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****           tempheader->headerLength++;
 280:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 281:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 282:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       l2_frameCounter.bytes0and1 = receivedASN[0]+256*receivedASN[1];
 283:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       l2_frameCounter.bytes2and3 = receivedASN[2]+256*receivedASN[3];
 284:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       if (frameCnt_Size == 5){ //we have the ASN as the frame counter
 285:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          l2_frameCounter.byte4 = receivedASN[4];
 286:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 287:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 288:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       if (l2_frameCounter.byte4 == 0xff){ //frame counter overflow
 289:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 290:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)msg->l2_frameType,
 291:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)4);
 292:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return;
 293:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 294:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 295:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 296:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 297:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //retrieve the Key Identifier field
 298:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_keyIdMode){
 299:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_IMPLICIT:
 300:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_DEFAULTKEYSOURCE:
 301:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          //key is derived implicitly
 302:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          memcpy(&(msg->l2_keySource), &tempheader->src, sizeof(open_addr_t));
 303:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 304:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_16:
 305:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          packetfunctions_readAddress(((uint8_t*)(msg->payload)+tempheader->headerLength),
 306:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                      ADDR_16B,
 307:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                      &msg->l2_keySource,
 308:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                      OW_LITTLE_ENDIAN);
 309:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          tempheader->headerLength+=2;
 310:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 311:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_64:
 312:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          packetfunctions_readAddress(((uint8_t*)(msg->payload)+tempheader->headerLength),
 313:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                      ADDR_64B,
 314:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                      &msg->l2_keySource,
 315:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                      OW_LITTLE_ENDIAN);
 316:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          tempheader->headerLength+=8;
 317:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 318:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       default: //error
 319:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 320:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)msg->l2_frameType,
 321:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)5);
 322:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return;
 323:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 324:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 325:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //retrieve the KeyIndex
 326:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (msg->l2_keyIdMode != IEEE154_ASH_KEYIDMODE_IMPLICIT){
 327:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       temp8b = *((uint8_t*)(msg->payload)+tempheader->headerLength);
 328:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       msg->l2_keyIndex = (temp8b);
 329:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       tempheader->headerLength++;
 330:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    } else {
 331:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       //key is derived implicitly
 332:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       msg->l2_keyIndex = 1;
 333:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 334:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 335:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 336:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
 337:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Identification of the key used to protect the frame and unsecuring operations.
 338:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
 339:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_incomingFrame(OpenQueueEntry_t* msg){
 340:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t nonce[13];
 341:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    owerror_t outStatus;
 342:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t* a;
 343:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t len_a;
 344:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t* c;
 345:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t len_c;
 346:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t *key;
 347:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 348:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    key = msg->l2_frameType == IEEE154_TYPE_BEACON ? ieee802154_security_vars.k1.value : ieee802154_
 349:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 350:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // First 8 bytes of the nonce are always the source address of the frame
 351:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    memcpy(&nonce[0],msg->l2_nextORpreviousHop.addr_64b,8);
 352:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // Fill last 5 bytes with ASN part of the nonce
 353:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    ieee154e_getAsn(&nonce[8]);
 354:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    packetfunctions_reverseArrayByteOrder(&nonce[8], 5);  // reverse ASN bytes to big endian 
 355:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 356:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //identify data to be authenticated and data to be decrypted
 357:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_securityLevel) {
 358:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_32:  // authentication only cases
 359:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_64:
 360:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_128: 
 361:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          a = msg->payload;                                           // first byte of the frame
 362:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_a = msg->length-msg->l2_authenticationLength;           // whole frame
 363:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          c = &msg->payload[len_a];                                   // MIC is at the end of the fr
 364:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_c = msg->l2_authenticationLength;                       // length of the encrypted par
 365:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 366:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_32:  // authentication + encryption cases
 367:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_64:
 368:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_128:
 369:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          a = msg->payload;             // first byte of the frame
 370:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          c = msg->l2_payload;          // first byte where we should start decrypting 
 371:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_a = c - a;                // part that is only authenticated is the difference of two 
 372:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          len_c = msg->length - len_a;  // part that is decrypted+authenticated is the rest of the f
 373:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 374:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC:    // encryption only
 375:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          // unsecure, should not support it
 376:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 377:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       default:
 378:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          // reject anything else
 379:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 380:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     }
 381:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 382:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    // assert
 383:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (len_a + len_c > 125) {
 384:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 385:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)msg->l2_frameType,
 386:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)11);
 387:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       return E_FAIL;
 388:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 389:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 390:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //decrypt and/or verify authenticity of the frame
 391:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    outStatus = cryptoengine_aes_ccms_dec(a,
 392:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           len_a,
 393:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           c,
 394:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           &len_c,
 395:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           nonce,
 396:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           2,
 397:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                     key,
 398:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                           msg->l2_authenticationLength);
 399:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 400:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    //verify if any error occurs
 401:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (outStatus != E_SUCCESS){
 402:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 403:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)msg->l2_frameType,
 404:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)12);
 405:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 406:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 407:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    packetfunctions_tossFooter(msg,msg->l2_authenticationLength);
 408:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    
 409:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    return outStatus;
 410:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 411:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 412:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
 413:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Identification of the length of the MIC based on the security Level in the frame
 414:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
 415:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_authLengthChecking(uint8_t securityLevel){
 416:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 417:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t authlen;
 418:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    switch (securityLevel) {
 419:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_NOSEC:
 420:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC:
 421:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          authlen = 0;
 422:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 423:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_32:
 424:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_32:
 425:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          authlen = 4;
 426:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 427:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_64:
 428:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_64:
 429:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          authlen = 8;
 430:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 431:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_128:
 432:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_128:
 433:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          authlen = 16;
 434:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 435:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 436:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 437:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    return authlen;
 438:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 439:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 440:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** /**
 441:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** \brief Identification of the length of the IEEE802.15.4 Auxiliary Security Header.
 442:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** */
 443:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_auxLengthChecking(uint8_t KeyIdMode, 
 444:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                              uint8_t frameCounterSuppression, 
 445:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****                                              uint8_t frameCounterSize){
 446:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t auxilary_len;
 447:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    uint8_t frameCntLength;
 448:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 449:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    auxilary_len = 0;
 450:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 451:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    if (frameCounterSuppression == IEEE154_ASH_FRAMECOUNTER_PRESENT){
 452:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       if (frameCounterSize == 4){
 453:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          frameCntLength = 4;
 454:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       } else {
 455:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          frameCntLength = 5;
 456:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 457:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    } else {
 458:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       frameCntLength = 0;
 459:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 460:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 461:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    switch (KeyIdMode){
 462:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_IMPLICIT:
 463:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1; //only SecLev and FrameCnt
 464:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 465:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_DEFAULTKEYSOURCE:
 466:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1 + 1; //SecLev, FrameCnt, KeyIndex
 467:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 468:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_16:
 469:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1 + 3; //SecLev, FrameCnt, KeyIdMode (2 bytes) and KeyInde
 470:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 471:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_64:
 472:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1 + 9; //SecLev, FrameCnt, KeyIdMode (8 bytes) and KeyInde
 473:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 474:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       default:
 475:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          break;
 476:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    }
 477:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 478:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****    return auxilary_len;
 479:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 480:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 481:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getSecurityLevel(OpenQueueEntry_t *msg) {
 482:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == FALSE) {
 483:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return IEEE154_ASH_SLF_TYPE_NOSEC;
 484:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 485:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 486:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (packetfunctions_isBroadcastMulticast(&msg->l2_nextORpreviousHop)) {
 487:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return IEEE802154_SECURITY_LEVEL;
 488:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 489:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 490:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if(neighbors_isInsecureNeighbor(&msg->l2_nextORpreviousHop) &&
 491:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****        ieee802154_security_vars.joinPermitted == TRUE) {
 492:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return IEEE154_ASH_SLF_TYPE_NOSEC;
 493:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****       }
 494:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 495:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return IEEE802154_SECURITY_LEVEL;
 496:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 497:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 498:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** bool IEEE802154_security_acceptableLevel(OpenQueueEntry_t* msg, ieee802154_header_iht* parsedHeader
 499:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == FALSE     &&
 500:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_NOSEC) {
 501:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 502:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          }
 503:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 504:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == FALSE             &&
 505:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         msg->l2_frameType == IEEE154_TYPE_BEACON                &&
 506:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         (msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_32   ||
 507:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_64   ||
 508:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_128)) {
 509:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 510:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 511:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 512:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured()               == TRUE &&
 513:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_NOSEC      &&
 514:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         ieee802154_security_vars.joinPermitted           == TRUE &&
 515:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         neighbors_isInsecureNeighbor(&parsedHeader->src) == TRUE) {
 516:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 517:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****              }
 518:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 519:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == TRUE              &&
 520:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         msg->l2_frameType == IEEE154_TYPE_BEACON                &&
 521:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         (msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_32   ||
 522:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_64   ||
 523:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_128)) {
 524:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 525:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          }
 526:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 527:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == TRUE                  &&
 528:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         (msg->l2_frameType == IEEE154_TYPE_DATA                     ||
 529:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_frameType == IEEE154_TYPE_ACK                      ||
 530:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_frameType == IEEE154_TYPE_CMD)                     &&
 531:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         (msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_ENC_MIC_32   ||
 532:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_ENC_MIC_64   ||
 533:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_ENC_MIC_128)) {
 534:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****         return TRUE;
 535:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****             }
 536:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return FALSE;
 537:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****          }
 538:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 539:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** #else /* L2_SECURITY_ACTIVE */
 540:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 541:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_prependAuxiliarySecurityHeader(OpenQueueEntry_t* msg){
 493              		.loc 1 541 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 8
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0128 80B4     		push	{r7}
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 012a 83B0     		sub	sp, sp, #12
 502              		.cfi_def_cfa_offset 16
 503 012c 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 012e 7860     		str	r0, [r7, #4]
 542:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return;
 506              		.loc 1 542 0
 507 0130 00BF     		nop
 543:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 508              		.loc 1 543 0
 509 0132 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 4
 511 0134 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0136 80BC     		pop	{r7}
 515              		.cfi_restore 7
 516              		.cfi_def_cfa_offset 0
 517 0138 7047     		bx	lr
 518              		.cfi_endproc
 519              	.LFE10:
 521              		.align	1
 522              		.global	IEEE802154_security_retrieveAuxiliarySecurityHeader
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 526              		.fpu softvfp
 528              	IEEE802154_security_retrieveAuxiliarySecurityHeader:
 529              	.LFB11:
 544:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 545:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_retrieveAuxiliarySecurityHeader(OpenQueueEntry_t* msg, ieee802154_header_i
 530              		.loc 1 545 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 013a 80B4     		push	{r7}
 536              		.cfi_def_cfa_offset 4
 537              		.cfi_offset 7, -4
 538 013c 83B0     		sub	sp, sp, #12
 539              		.cfi_def_cfa_offset 16
 540 013e 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0140 7860     		str	r0, [r7, #4]
 543 0142 3960     		str	r1, [r7]
 546:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return;
 544              		.loc 1 546 0
 545 0144 00BF     		nop
 547:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 546              		.loc 1 547 0
 547 0146 0C37     		adds	r7, r7, #12
 548              		.cfi_def_cfa_offset 4
 549 0148 BD46     		mov	sp, r7
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 014a 80BC     		pop	{r7}
 553              		.cfi_restore 7
 554              		.cfi_def_cfa_offset 0
 555 014c 7047     		bx	lr
 556              		.cfi_endproc
 557              	.LFE11:
 559              		.align	1
 560              		.global	IEEE802154_security_outgoingFrameSecurity
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	IEEE802154_security_outgoingFrameSecurity:
 567              	.LFB12:
 548:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 549:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_outgoingFrameSecurity(OpenQueueEntry_t* msg) {
 568              		.loc 1 549 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573 014e 80B4     		push	{r7}
 574              		.cfi_def_cfa_offset 4
 575              		.cfi_offset 7, -4
 576 0150 83B0     		sub	sp, sp, #12
 577              		.cfi_def_cfa_offset 16
 578 0152 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 580 0154 7860     		str	r0, [r7, #4]
 550:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return E_SUCCESS;
 581              		.loc 1 550 0
 582 0156 0023     		movs	r3, #0
 551:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 583              		.loc 1 551 0
 584 0158 1846     		mov	r0, r3
 585 015a 0C37     		adds	r7, r7, #12
 586              		.cfi_def_cfa_offset 4
 587 015c BD46     		mov	sp, r7
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 015e 80BC     		pop	{r7}
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 0160 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE12:
 597              		.align	1
 598              		.global	IEEE802154_security_incomingFrame
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu softvfp
 604              	IEEE802154_security_incomingFrame:
 605              	.LFB13:
 552:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 553:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_incomingFrame(OpenQueueEntry_t* msg) {
 606              		.loc 1 553 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611 0162 80B4     		push	{r7}
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 7, -4
 614 0164 83B0     		sub	sp, sp, #12
 615              		.cfi_def_cfa_offset 16
 616 0166 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0168 7860     		str	r0, [r7, #4]
 554:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return E_SUCCESS;
 619              		.loc 1 554 0
 620 016a 0023     		movs	r3, #0
 555:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 621              		.loc 1 555 0
 622 016c 1846     		mov	r0, r3
 623 016e 0C37     		adds	r7, r7, #12
 624              		.cfi_def_cfa_offset 4
 625 0170 BD46     		mov	sp, r7
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0172 80BC     		pop	{r7}
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
 631 0174 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE13:
 635              		.align	1
 636              		.global	IEEE802154_security_authLengthChecking
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu softvfp
 642              	IEEE802154_security_authLengthChecking:
 643              	.LFB14:
 556:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 557:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_authLengthChecking(uint8_t sec_level) {
 644              		.loc 1 557 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0176 80B4     		push	{r7}
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0178 83B0     		sub	sp, sp, #12
 653              		.cfi_def_cfa_offset 16
 654 017a 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 017c 0346     		mov	r3, r0
 657 017e FB71     		strb	r3, [r7, #7]
 558:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return (uint8_t) 0;
 658              		.loc 1 558 0
 659 0180 0023     		movs	r3, #0
 559:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 660              		.loc 1 559 0
 661 0182 1846     		mov	r0, r3
 662 0184 0C37     		adds	r7, r7, #12
 663              		.cfi_def_cfa_offset 4
 664 0186 BD46     		mov	sp, r7
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 0188 80BC     		pop	{r7}
 668              		.cfi_restore 7
 669              		.cfi_def_cfa_offset 0
 670 018a 7047     		bx	lr
 671              		.cfi_endproc
 672              	.LFE14:
 674              		.align	1
 675              		.global	IEEE802154_security_auxLengthChecking
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu softvfp
 681              	IEEE802154_security_auxLengthChecking:
 682              	.LFB15:
 560:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 561:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_auxLengthChecking(uint8_t kid, uint8_t sup, uint8_t size) {
 683              		.loc 1 561 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 8
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688 018c 80B4     		push	{r7}
 689              		.cfi_def_cfa_offset 4
 690              		.cfi_offset 7, -4
 691 018e 83B0     		sub	sp, sp, #12
 692              		.cfi_def_cfa_offset 16
 693 0190 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 695 0192 0346     		mov	r3, r0
 696 0194 FB71     		strb	r3, [r7, #7]
 697 0196 0B46     		mov	r3, r1
 698 0198 BB71     		strb	r3, [r7, #6]
 699 019a 1346     		mov	r3, r2
 700 019c 7B71     		strb	r3, [r7, #5]
 562:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return (uint8_t) 0;
 701              		.loc 1 562 0
 702 019e 0023     		movs	r3, #0
 563:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 703              		.loc 1 563 0
 704 01a0 1846     		mov	r0, r3
 705 01a2 0C37     		adds	r7, r7, #12
 706              		.cfi_def_cfa_offset 4
 707 01a4 BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 01a6 80BC     		pop	{r7}
 711              		.cfi_restore 7
 712              		.cfi_def_cfa_offset 0
 713 01a8 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE15:
 717              		.align	1
 718              		.global	IEEE802154_security_getSecurityLevel
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu softvfp
 724              	IEEE802154_security_getSecurityLevel:
 725              	.LFB16:
 564:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 565:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getSecurityLevel(OpenQueueEntry_t *msg) {
 726              		.loc 1 565 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 01aa 80B4     		push	{r7}
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 01ac 83B0     		sub	sp, sp, #12
 735              		.cfi_def_cfa_offset 16
 736 01ae 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 01b0 7860     		str	r0, [r7, #4]
 566:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return IEEE154_ASH_SLF_TYPE_NOSEC;
 739              		.loc 1 566 0
 740 01b2 0023     		movs	r3, #0
 567:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 741              		.loc 1 567 0
 742 01b4 1846     		mov	r0, r3
 743 01b6 0C37     		adds	r7, r7, #12
 744              		.cfi_def_cfa_offset 4
 745 01b8 BD46     		mov	sp, r7
 746              		.cfi_def_cfa_register 13
 747              		@ sp needed
 748 01ba 80BC     		pop	{r7}
 749              		.cfi_restore 7
 750              		.cfi_def_cfa_offset 0
 751 01bc 7047     		bx	lr
 752              		.cfi_endproc
 753              	.LFE16:
 755              		.align	1
 756              		.global	IEEE802154_security_acceptableLevel
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu softvfp
 762              	IEEE802154_security_acceptableLevel:
 763              	.LFB17:
 568:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** 
 569:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** bool IEEE802154_security_acceptableLevel(OpenQueueEntry_t* msg, ieee802154_header_iht* parsedheader
 764              		.loc 1 569 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769 01be 80B4     		push	{r7}
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 01c0 83B0     		sub	sp, sp, #12
 773              		.cfi_def_cfa_offset 16
 774 01c2 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 01c4 7860     		str	r0, [r7, #4]
 777 01c6 3960     		str	r1, [r7]
 570:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c ****     return TRUE;
 778              		.loc 1 570 0
 779 01c8 0123     		movs	r3, #1
 571:build\openmote-cc2538_armgcc\openstack\02a-MAClow/IEEE802154_security.c **** }
 780              		.loc 1 571 0
 781 01ca 1846     		mov	r0, r3
 782 01cc 0C37     		adds	r7, r7, #12
 783              		.cfi_def_cfa_offset 4
 784 01ce BD46     		mov	sp, r7
 785              		.cfi_def_cfa_register 13
 786              		@ sp needed
 787 01d0 80BC     		pop	{r7}
 788              		.cfi_restore 7
 789              		.cfi_def_cfa_offset 0
 790 01d2 7047     		bx	lr
 791              		.cfi_endproc
 792              	.LFE17:
 794              	.Letext0:
 795              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 796              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 797              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 798              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 799              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 800              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 801              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 802              		.file 9 "inc/opendefs.h"
 803              		.file 10 "build\\openmote-cc2538_armgcc\\openstack\\02a-MAClow\\IEEE802154.h"
 804              		.file 11 "build\\openmote-cc2538_armgcc\\openstack\\02a-MAClow\\IEEE802154E.h"
 805              		.file 12 "openstack\\cross-layers/idmanager.h"
 806              		.file 13 "openstack\\03b-IPv6/icmpv6rpl.h"
 807              		.file 14 "build\\openmote-cc2538_armgcc\\openstack\\02a-MAClow\\IEEE802154_security.h"
DEFINED SYMBOLS
                            *ABS*:00000000 IEEE802154_security.c
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:44     .rodata:00000030 chTemplate_default
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:64     .rodata:00000040 ebIEsBytestream
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:96     .rodata:0000005c linklocalprefix
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:108    .rodata:00000064 all_routers_multicast
                            *COM*:00000024 ieee802154_security_vars
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:127    .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:134    .text:00000000 IEEE802154_security_init
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:179    .text:00000034 $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:185    .text:00000040 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:192    .text:00000040 IEEE802154_security_getBeaconKeyIndex
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:219    .text:00000050 $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:223    .text:00000054 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:230    .text:00000054 IEEE802154_security_getDataKeyIndex
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:257    .text:00000064 $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:261    .text:00000068 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:268    .text:00000068 IEEE802154_security_setBeaconKey
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:317    .text:0000009c $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:321    .text:000000a0 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:328    .text:000000a0 IEEE802154_security_setDataKey
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:377    .text:000000d4 $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:381    .text:000000d8 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:388    .text:000000d8 IEEE802154_security_isConfigured
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:441    .text:0000010c $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:445    .text:00000110 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:452    .text:00000110 IEEE802154_security_setDynamicKeying
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:480    .text:00000124 $d
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:484    .text:00000128 $t
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:491    .text:00000128 IEEE802154_security_prependAuxiliarySecurityHeader
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:528    .text:0000013a IEEE802154_security_retrieveAuxiliarySecurityHeader
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:566    .text:0000014e IEEE802154_security_outgoingFrameSecurity
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:604    .text:00000162 IEEE802154_security_incomingFrame
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:642    .text:00000176 IEEE802154_security_authLengthChecking
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:681    .text:0000018c IEEE802154_security_auxLengthChecking
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:724    .text:000001aa IEEE802154_security_getSecurityLevel
C:\Users\Lee\AppData\Local\Temp\ccmdvw4G.s:762    .text:000001be IEEE802154_security_acceptableLevel
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.cryptoengine.h.8.da068b9149b7576990bbc3b5f1e9b415
                           .group:00000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69
                           .group:00000000 wm4.opentimers.h.8.eb1cab84a6e82ba9569a1990291c92ba
                           .group:00000000 wm4.schedule.h.2.655275e038307b96d02df4174b9f26be
                           .group:00000000 wm4.IEEE802154E.h.31.0ae4fc33f8fea842f27863b9e73e066e
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.openserial.h.32.ea1006cc0a4d06130c082222e630581b
                           .group:00000000 wm4.icmpv6rpl.h.2.f31802bcce2a0808bf5db39ce34f4322
                           .group:00000000 wm4.neighbors.h.15.7d3ab5965b5b1193d3498491ae404451
                           .group:00000000 wm4.IEEE802154_security.h.12.01376db633007f86cc7c78f3ee4cf764

UNDEFINED SYMBOLS
memset
