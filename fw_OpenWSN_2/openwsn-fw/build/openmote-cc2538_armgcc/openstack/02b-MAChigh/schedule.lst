   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"schedule.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	linklocalprefix:
  45 0030 FE       		.byte	-2
  46 0031 80       		.byte	-128
  47 0032 00       		.byte	0
  48 0033 00       		.byte	0
  49 0034 00       		.byte	0
  50 0035 00       		.byte	0
  51 0036 00       		.byte	0
  52 0037 00       		.byte	0
  53              		.align	2
  56              	chTemplate_default:
  57 0038 05       		.byte	5
  58 0039 06       		.byte	6
  59 003a 0C       		.byte	12
  60 003b 07       		.byte	7
  61 003c 0F       		.byte	15
  62 003d 04       		.byte	4
  63 003e 0E       		.byte	14
  64 003f 0B       		.byte	11
  65 0040 08       		.byte	8
  66 0041 00       		.byte	0
  67 0042 01       		.byte	1
  68 0043 02       		.byte	2
  69 0044 0D       		.byte	13
  70 0045 03       		.byte	3
  71 0046 09       		.byte	9
  72 0047 0A       		.byte	10
  73              		.align	2
  76              	ebIEsBytestream:
  77 0048 1A       		.byte	26
  78 0049 88       		.byte	-120
  79 004a 06       		.byte	6
  80 004b 1A       		.byte	26
  81 004c 00       		.byte	0
  82 004d 00       		.byte	0
  83 004e 00       		.byte	0
  84 004f 00       		.byte	0
  85 0050 00       		.byte	0
  86 0051 00       		.byte	0
  87 0052 01       		.byte	1
  88 0053 1C       		.byte	28
  89 0054 00       		.byte	0
  90 0055 01       		.byte	1
  91 0056 C8       		.byte	-56
  92 0057 00       		.byte	0
  93 0058 0A       		.byte	10
  94 0059 1B       		.byte	27
  95 005a 01       		.byte	1
  96 005b 00       		.byte	0
  97 005c 0D       		.byte	13
  98 005d 00       		.byte	0
  99 005e 01       		.byte	1
 100 005f 00       		.byte	0
 101 0060 00       		.byte	0
 102 0061 00       		.byte	0
 103 0062 00       		.byte	0
 104 0063 0F       		.byte	15
 105              		.align	2
 108              	all_routers_multicast:
 109 0064 FF       		.byte	-1
 110 0065 02       		.byte	2
 111 0066 00       		.byte	0
 112 0067 00       		.byte	0
 113 0068 00       		.byte	0
 114 0069 00       		.byte	0
 115 006a 00       		.byte	0
 116 006b 00       		.byte	0
 117 006c 00       		.byte	0
 118 006d 00       		.byte	0
 119 006e 00       		.byte	0
 120 006f 00       		.byte	0
 121 0070 00       		.byte	0
 122 0071 00       		.byte	0
 123 0072 00       		.byte	0
 124 0073 1A       		.byte	26
 125              		.comm	schedule_vars,772,4
 126              		.text
 127              		.align	1
 128              		.global	schedule_init
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu softvfp
 134              	schedule_init:
 135              	.LFB3:
 136              		.file 1 "build\\openmote-cc2538_armgcc\\openstack\\02b-MAChigh\\schedule.c"
   1:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "opendefs.h"
   2:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "schedule.h"
   3:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "openserial.h"
   4:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "openrandom.h"
   5:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "packetfunctions.h"
   6:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "sixtop.h"
   7:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "idmanager.h"
   8:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "msf.h"
   9:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "IEEE802154E.h"
  10:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "icmpv6rpl.h"
  11:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "neighbors.h"
  12:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** // telosb need debugpins to indicate the ISR activity
  13:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** #include "debugpins.h"
  14:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  15:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=========================== definition ======================================
  16:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  17:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=========================== variables =======================================
  18:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  19:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** schedule_vars_t schedule_vars;
  20:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  21:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=========================== prototypes ======================================
  22:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  23:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_resetEntry(scheduleEntry_t* pScheduleEntry);
  24:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  25:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=========================== public ==========================================
  26:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  27:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=== admin
  28:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  29:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
  30:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Initialize this module.
  31:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  32:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \post Call this function before calling any other function in this module.
  33:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
  34:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_init(void) {
 137              		.loc 1 34 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
  35:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t running_slotOffset;
  36:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  37:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // reset local variables
  38:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     memset(&schedule_vars,0,sizeof(schedule_vars_t));
 149              		.loc 1 38 0
 150 0006 4FF44172 		mov	r2, #772
 151 000a 0021     		movs	r1, #0
 152 000c 1448     		ldr	r0, .L6
 153 000e FFF7FEFF 		bl	memset
  39:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for (running_slotOffset=0;running_slotOffset<MAXACTIVESLOTS;running_slotOffset++) {
 154              		.loc 1 39 0
 155 0012 0023     		movs	r3, #0
 156 0014 FB71     		strb	r3, [r7, #7]
 157 0016 0CE0     		b	.L2
 158              	.L3:
  40:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         schedule_resetEntry(&schedule_vars.scheduleBuf[running_slotOffset]);
 159              		.loc 1 40 0 discriminator 3
 160 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 161 001a 1346     		mov	r3, r2
 162 001c DB00     		lsls	r3, r3, #3
 163 001e 1344     		add	r3, r3, r2
 164 0020 9B00     		lsls	r3, r3, #2
 165 0022 0F4A     		ldr	r2, .L6
 166 0024 1344     		add	r3, r3, r2
 167 0026 1846     		mov	r0, r3
 168 0028 FFF7FEFF 		bl	schedule_resetEntry
  39:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for (running_slotOffset=0;running_slotOffset<MAXACTIVESLOTS;running_slotOffset++) {
 169              		.loc 1 39 0 discriminator 3
 170 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 171 002e 0133     		adds	r3, r3, #1
 172 0030 FB71     		strb	r3, [r7, #7]
 173              	.L2:
  39:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for (running_slotOffset=0;running_slotOffset<MAXACTIVESLOTS;running_slotOffset++) {
 174              		.loc 1 39 0 is_stmt 0 discriminator 1
 175 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 176 0034 142B     		cmp	r3, #20
 177 0036 EFD9     		bls	.L3
  41:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
  42:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.backoffExponenton   = MINBE-1;
 178              		.loc 1 42 0 is_stmt 1
 179 0038 094B     		ldr	r3, .L6
 180 003a 0122     		movs	r2, #1
 181 003c 83F8FE22 		strb	r2, [r3, #766]
  43:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.maxActiveSlots = MAXACTIVESLOTS;
 182              		.loc 1 43 0
 183 0040 074B     		ldr	r3, .L6
 184 0042 1522     		movs	r2, #21
 185 0044 A3F8FA22 		strh	r2, [r3, #762]	@ movhi
  44:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  45:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (idmanager_getIsDAGroot()==TRUE) {
 186              		.loc 1 45 0
 187 0048 FFF7FEFF 		bl	idmanager_getIsDAGroot
 188 004c 0346     		mov	r3, r0
 189 004e 002B     		cmp	r3, #0
 190 0050 01D0     		beq	.L5
  46:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         schedule_startDAGroot();
 191              		.loc 1 46 0
 192 0052 FFF7FEFF 		bl	schedule_startDAGroot
 193              	.L5:
  47:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
  48:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 194              		.loc 1 48 0
 195 0056 00BF     		nop
 196 0058 0837     		adds	r7, r7, #8
 197              		.cfi_def_cfa_offset 8
 198 005a BD46     		mov	sp, r7
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 005c 80BD     		pop	{r7, pc}
 202              	.L7:
 203 005e 00BF     		.align	2
 204              	.L6:
 205 0060 00000000 		.word	schedule_vars
 206              		.cfi_endproc
 207              	.LFE3:
 209              		.align	1
 210              		.global	schedule_startDAGroot
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	schedule_startDAGroot:
 217              	.LFB4:
  49:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  50:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
  51:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Starting the DAGroot schedule propagation.
  52:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
  53:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_startDAGroot(void) {
 218              		.loc 1 53 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 24
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0064 80B5     		push	{r7, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0066 88B0     		sub	sp, sp, #32
 227              		.cfi_def_cfa_offset 40
 228 0068 02AF     		add	r7, sp, #8
 229              		.cfi_def_cfa 7, 32
  54:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotOffset_t    start_slotOffset;
  55:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotOffset_t    running_slotOffset;
  56:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    open_addr_t     temp_neighbor;
  57:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  58:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    start_slotOffset = SCHEDULE_MINIMAL_6TISCH_SLOTOFFSET;
 230              		.loc 1 58 0
 231 006a 0023     		movs	r3, #0
 232 006c BB82     		strh	r3, [r7, #20]	@ movhi
  59:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // set frame length, handle and number (default 1 by now)
  60:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (schedule_vars.frameLength == 0) {
 233              		.loc 1 60 0
 234 006e 164B     		ldr	r3, .L12
 235 0070 B3F8F832 		ldrh	r3, [r3, #760]
 236 0074 002B     		cmp	r3, #0
 237 0076 02D1     		bne	.L9
  61:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****        // slotframe length is not set, set it to default length
  62:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****        schedule_setFrameLength(SLOTFRAME_LENGTH);
 238              		.loc 1 62 0
 239 0078 0D20     		movs	r0, #13
 240 007a FFF7FEFF 		bl	schedule_setFrameLength
 241              	.L9:
  63:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    } else {
  64:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****        // slotframe length is set, nothing to do here
  65:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
  66:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_setFrameHandle(SCHEDULE_MINIMAL_6TISCH_DEFAULT_SLOTFRAME_HANDLE);
 242              		.loc 1 66 0
 243 007e 0020     		movs	r0, #0
 244 0080 FFF7FEFF 		bl	schedule_setFrameHandle
  67:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_setFrameNumber(SCHEDULE_MINIMAL_6TISCH_DEFAULT_SLOTFRAME_NUMBER);
 245              		.loc 1 67 0
 246 0084 0120     		movs	r0, #1
 247 0086 FFF7FEFF 		bl	schedule_setFrameNumber
  68:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  69:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // shared TXRX anycast slot(s)
  70:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    memset(&temp_neighbor,0,sizeof(temp_neighbor));
 248              		.loc 1 70 0
 249 008a 3B46     		mov	r3, r7
 250 008c 1122     		movs	r2, #17
 251 008e 0021     		movs	r1, #0
 252 0090 1846     		mov	r0, r3
 253 0092 FFF7FEFF 		bl	memset
  71:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp_neighbor.type             = ADDR_ANYCAST;
 254              		.loc 1 71 0
 255 0096 0623     		movs	r3, #6
 256 0098 3B70     		strb	r3, [r7]
  72:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    for (running_slotOffset=start_slotOffset;running_slotOffset<start_slotOffset+SCHEDULE_MINIMAL_6T
 257              		.loc 1 72 0
 258 009a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 259 009c FB82     		strh	r3, [r7, #22]	@ movhi
 260 009e 0AE0     		b	.L10
 261              	.L11:
  73:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_addActiveSlot(
 262              		.loc 1 73 0 discriminator 3
 263 00a0 F88A     		ldrh	r0, [r7, #22]
 264 00a2 3B46     		mov	r3, r7
 265 00a4 0093     		str	r3, [sp]
 266 00a6 0023     		movs	r3, #0
 267 00a8 0122     		movs	r2, #1
 268 00aa 0321     		movs	r1, #3
 269 00ac FFF7FEFF 		bl	schedule_addActiveSlot
  72:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    for (running_slotOffset=start_slotOffset;running_slotOffset<start_slotOffset+SCHEDULE_MINIMAL_6T
 270              		.loc 1 72 0 discriminator 3
 271 00b0 FB8A     		ldrh	r3, [r7, #22]
 272 00b2 0133     		adds	r3, r3, #1
 273 00b4 FB82     		strh	r3, [r7, #22]	@ movhi
 274              	.L10:
  72:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    for (running_slotOffset=start_slotOffset;running_slotOffset<start_slotOffset+SCHEDULE_MINIMAL_6T
 275              		.loc 1 72 0 is_stmt 0 discriminator 1
 276 00b6 FA8A     		ldrh	r2, [r7, #22]
 277 00b8 BB8A     		ldrh	r3, [r7, #20]
 278 00ba 0133     		adds	r3, r3, #1
 279 00bc 9A42     		cmp	r2, r3
 280 00be EFDB     		blt	.L11
  74:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          running_slotOffset,                     // slot offset
  75:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          CELLTYPE_TXRX,                          // type of slot
  76:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          TRUE,                                   // shared?
  77:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          SCHEDULE_MINIMAL_6TISCH_CHANNELOFFSET,  // channel offset
  78:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          &temp_neighbor                          // neighbor
  79:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       );
  80:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
  81:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 281              		.loc 1 81 0 is_stmt 1
 282 00c0 00BF     		nop
 283 00c2 1837     		adds	r7, r7, #24
 284              		.cfi_def_cfa_offset 8
 285 00c4 BD46     		mov	sp, r7
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 00c6 80BD     		pop	{r7, pc}
 289              	.L13:
 290              		.align	2
 291              	.L12:
 292 00c8 00000000 		.word	schedule_vars
 293              		.cfi_endproc
 294              	.LFE4:
 296              		.align	1
 297              		.global	debugPrint_schedule
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu softvfp
 303              	debugPrint_schedule:
 304              	.LFB5:
  82:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  83:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
  84:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Trigger this module to print status information, over serial.
  85:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  86:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** debugPrint_* functions are used by the openserial module to continuously print
  87:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** status information about several modules in the OpenWSN stack.
  88:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  89:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns TRUE if this function printed something, FALSE otherwise.
  90:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
  91:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool debugPrint_schedule(void) {
 305              		.loc 1 91 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 32
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 00cc B0B5     		push	{r4, r5, r7, lr}
 310              		.cfi_def_cfa_offset 16
 311              		.cfi_offset 4, -16
 312              		.cfi_offset 5, -12
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 00ce 88B0     		sub	sp, sp, #32
 316              		.cfi_def_cfa_offset 48
 317 00d0 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
  92:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    debugScheduleEntry_t temp;
  93:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  94:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // increment the row just printed
  95:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_vars.debugPrintRow         = (schedule_vars.debugPrintRow+1)%schedule_vars.maxActiveSlo
 319              		.loc 1 95 0
 320 00d2 514B     		ldr	r3, .L16
 321 00d4 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 322 00d8 0133     		adds	r3, r3, #1
 323 00da 4F4A     		ldr	r2, .L16
 324 00dc B2F8FA22 		ldrh	r2, [r2, #762]
 325 00e0 93FBF2F1 		sdiv	r1, r3, r2
 326 00e4 02FB01F2 		mul	r2, r2, r1
 327 00e8 9B1A     		subs	r3, r3, r2
 328 00ea DAB2     		uxtb	r2, r3
 329 00ec 4A4B     		ldr	r3, .L16
 330 00ee 83F80023 		strb	r2, [r3, #768]
  96:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
  97:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // gather status data
  98:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.row                            = schedule_vars.debugPrintRow;
 331              		.loc 1 98 0
 332 00f2 494B     		ldr	r3, .L16
 333 00f4 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 334 00f8 3B70     		strb	r3, [r7]
  99:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.slotOffset                     = \
 100:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].slotOffset;
 335              		.loc 1 100 0
 336 00fa 474B     		ldr	r3, .L16
 337 00fc 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 338 0100 1946     		mov	r1, r3
 339 0102 454A     		ldr	r2, .L16
 340 0104 0B46     		mov	r3, r1
 341 0106 DB00     		lsls	r3, r3, #3
 342 0108 0B44     		add	r3, r3, r1
 343 010a 9B00     		lsls	r3, r3, #2
 344 010c 1344     		add	r3, r3, r2
 345 010e 1B88     		ldrh	r3, [r3]
  99:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.slotOffset                     = \
 346              		.loc 1 99 0
 347 0110 A7F80130 		strh	r3, [r7, #1]	@ unaligned
 101:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.type                           = \
 102:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].type;
 348              		.loc 1 102 0
 349 0114 404B     		ldr	r3, .L16
 350 0116 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 351 011a 1946     		mov	r1, r3
 352 011c 3E4A     		ldr	r2, .L16
 353 011e 0B46     		mov	r3, r1
 354 0120 DB00     		lsls	r3, r3, #3
 355 0122 0B44     		add	r3, r3, r1
 356 0124 9B00     		lsls	r3, r3, #2
 357 0126 1344     		add	r3, r3, r2
 358 0128 0233     		adds	r3, r3, #2
 359 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 101:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.type                           = \
 360              		.loc 1 101 0
 361 012c FB70     		strb	r3, [r7, #3]
 103:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.shared                         = \
 104:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].shared;
 362              		.loc 1 104 0
 363 012e 3A4B     		ldr	r3, .L16
 364 0130 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 365 0134 1946     		mov	r1, r3
 366 0136 384A     		ldr	r2, .L16
 367 0138 0B46     		mov	r3, r1
 368 013a DB00     		lsls	r3, r3, #3
 369 013c 0B44     		add	r3, r3, r1
 370 013e 9B00     		lsls	r3, r3, #2
 371 0140 1344     		add	r3, r3, r2
 372 0142 0333     		adds	r3, r3, #3
 373 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.shared                         = \
 374              		.loc 1 103 0
 375 0146 3B71     		strb	r3, [r7, #4]
 105:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.channelOffset                  = \
 106:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].channelOffset;
 376              		.loc 1 106 0
 377 0148 334B     		ldr	r3, .L16
 378 014a 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 379 014e 1946     		mov	r1, r3
 380 0150 314A     		ldr	r2, .L16
 381 0152 0B46     		mov	r3, r1
 382 0154 DB00     		lsls	r3, r3, #3
 383 0156 0B44     		add	r3, r3, r1
 384 0158 9B00     		lsls	r3, r3, #2
 385 015a 1344     		add	r3, r3, r2
 386 015c 0433     		adds	r3, r3, #4
 387 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.channelOffset                  = \
 388              		.loc 1 105 0
 389 0160 7B71     		strb	r3, [r7, #5]
 107:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    memcpy(
 108:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       &temp.neighbor,
 109:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       &schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].neighbor,
 390              		.loc 1 109 0
 391 0162 2D4B     		ldr	r3, .L16
 392 0164 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 393 0168 1A46     		mov	r2, r3
 394 016a 1346     		mov	r3, r2
 395 016c DB00     		lsls	r3, r3, #3
 396 016e 1344     		add	r3, r3, r2
 397 0170 9B00     		lsls	r3, r3, #2
 398 0172 294A     		ldr	r2, .L16
 399 0174 1344     		add	r3, r3, r2
 400 0176 5A1D     		adds	r2, r3, #5
 107:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    memcpy(
 401              		.loc 1 107 0
 402 0178 BB1D     		adds	r3, r7, #6
 403 017a 1568     		ldr	r5, [r2]	@ unaligned
 404 017c 5468     		ldr	r4, [r2, #4]	@ unaligned
 405 017e 9068     		ldr	r0, [r2, #8]	@ unaligned
 406 0180 D168     		ldr	r1, [r2, #12]	@ unaligned
 407 0182 1D60     		str	r5, [r3]	@ unaligned
 408 0184 5C60     		str	r4, [r3, #4]	@ unaligned
 409 0186 9860     		str	r0, [r3, #8]	@ unaligned
 410 0188 D960     		str	r1, [r3, #12]	@ unaligned
 411 018a 127C     		ldrb	r2, [r2, #16]
 412 018c 1A74     		strb	r2, [r3, #16]
 110:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       sizeof(open_addr_t)
 111:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    );
 112:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.numRx                          = \
 113:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numRx;
 413              		.loc 1 113 0
 414 018e 224B     		ldr	r3, .L16
 415 0190 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 416 0194 1946     		mov	r1, r3
 417 0196 204A     		ldr	r2, .L16
 418 0198 0B46     		mov	r3, r1
 419 019a DB00     		lsls	r3, r3, #3
 420 019c 0B44     		add	r3, r3, r1
 421 019e 9B00     		lsls	r3, r3, #2
 422 01a0 1344     		add	r3, r3, r2
 423 01a2 1633     		adds	r3, r3, #22
 424 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numRx;
 425              		.loc 1 112 0
 426 01a6 FB75     		strb	r3, [r7, #23]
 114:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.numTx                          = \
 115:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numTx;
 427              		.loc 1 115 0
 428 01a8 1B4B     		ldr	r3, .L16
 429 01aa 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 430 01ae 1946     		mov	r1, r3
 431 01b0 194A     		ldr	r2, .L16
 432 01b2 0B46     		mov	r3, r1
 433 01b4 DB00     		lsls	r3, r3, #3
 434 01b6 0B44     		add	r3, r3, r1
 435 01b8 9B00     		lsls	r3, r3, #2
 436 01ba 1344     		add	r3, r3, r2
 437 01bc 1733     		adds	r3, r3, #23
 438 01be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 114:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.numTx                          = \
 439              		.loc 1 114 0
 440 01c0 3B76     		strb	r3, [r7, #24]
 116:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.numTxACK                       = \
 117:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numTxACK;
 441              		.loc 1 117 0
 442 01c2 154B     		ldr	r3, .L16
 443 01c4 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 444 01c8 1946     		mov	r1, r3
 445 01ca 134A     		ldr	r2, .L16
 446 01cc 0B46     		mov	r3, r1
 447 01ce DB00     		lsls	r3, r3, #3
 448 01d0 0B44     		add	r3, r3, r1
 449 01d2 9B00     		lsls	r3, r3, #2
 450 01d4 1344     		add	r3, r3, r2
 451 01d6 1833     		adds	r3, r3, #24
 452 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp.numTxACK                       = \
 453              		.loc 1 116 0
 454 01da 7B76     		strb	r3, [r7, #25]
 118:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    memcpy(
 119:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       &temp.lastUsedAsn,
 120:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       &schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].lastUsedAsn,
 455              		.loc 1 120 0
 456 01dc 0E4B     		ldr	r3, .L16
 457 01de 93F80033 		ldrb	r3, [r3, #768]	@ zero_extendqisi2
 458 01e2 1A46     		mov	r2, r3
 459 01e4 1346     		mov	r3, r2
 460 01e6 DB00     		lsls	r3, r3, #3
 461 01e8 1344     		add	r3, r3, r2
 462 01ea 9B00     		lsls	r3, r3, #2
 463 01ec 1833     		adds	r3, r3, #24
 464 01ee 0A4A     		ldr	r2, .L16
 465 01f0 1344     		add	r3, r3, r2
 466 01f2 5A1C     		adds	r2, r3, #1
 118:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    memcpy(
 467              		.loc 1 118 0
 468 01f4 07F11A03 		add	r3, r7, #26
 469 01f8 1168     		ldr	r1, [r2]	@ unaligned
 470 01fa 1960     		str	r1, [r3]	@ unaligned
 471 01fc 1279     		ldrb	r2, [r2, #4]
 472 01fe 1A71     		strb	r2, [r3, #4]
 121:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       sizeof(asn_t)
 122:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    );
 123:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 124:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // send status data over serial port
 125:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    openserial_printStatus(
 473              		.loc 1 125 0
 474 0200 3B46     		mov	r3, r7
 475 0202 1F22     		movs	r2, #31
 476 0204 1946     		mov	r1, r3
 477 0206 0620     		movs	r0, #6
 478 0208 FFF7FEFF 		bl	openserial_printStatus
 126:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       STATUS_SCHEDULE,
 127:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       (uint8_t*)&temp,
 128:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       sizeof(debugScheduleEntry_t)
 129:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    );
 130:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 131:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    return TRUE;
 479              		.loc 1 131 0
 480 020c 0123     		movs	r3, #1
 132:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 481              		.loc 1 132 0
 482 020e 1846     		mov	r0, r3
 483 0210 2037     		adds	r7, r7, #32
 484              		.cfi_def_cfa_offset 16
 485 0212 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0214 B0BD     		pop	{r4, r5, r7, pc}
 489              	.L17:
 490 0216 00BF     		.align	2
 491              	.L16:
 492 0218 00000000 		.word	schedule_vars
 493              		.cfi_endproc
 494              	.LFE5:
 496              		.align	1
 497              		.global	debugPrint_backoff
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu softvfp
 503              	debugPrint_backoff:
 504              	.LFB6:
 133:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 134:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 135:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Trigger this module to print status information, over serial.
 136:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 137:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** debugPrint_* functions are used by the openserial module to continuously print
 138:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** status information about several modules in the OpenWSN stack.
 139:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 140:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns TRUE if this function printed something, FALSE otherwise.
 141:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 142:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool debugPrint_backoff(void) {
 505              		.loc 1 142 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 8
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509 021c 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 021e 82B0     		sub	sp, sp, #8
 514              		.cfi_def_cfa_offset 16
 515 0220 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 143:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    uint8_t temp[2];
 144:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 145:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // gather status data
 146:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp[0] = schedule_vars.backoffExponenton;
 517              		.loc 1 146 0
 518 0222 094B     		ldr	r3, .L20
 519 0224 93F8FE32 		ldrb	r3, [r3, #766]	@ zero_extendqisi2
 520 0228 3B71     		strb	r3, [r7, #4]
 147:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    temp[1] = schedule_vars.backoff;
 521              		.loc 1 147 0
 522 022a 074B     		ldr	r3, .L20
 523 022c 93F8FF32 		ldrb	r3, [r3, #767]	@ zero_extendqisi2
 524 0230 7B71     		strb	r3, [r7, #5]
 148:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 149:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // send status data over serial port
 150:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    openserial_printStatus(
 525              		.loc 1 150 0
 526 0232 3B1D     		adds	r3, r7, #4
 527 0234 0222     		movs	r2, #2
 528 0236 1946     		mov	r1, r3
 529 0238 0720     		movs	r0, #7
 530 023a FFF7FEFF 		bl	openserial_printStatus
 151:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       STATUS_BACKOFF,
 152:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       (uint8_t*)&temp,
 153:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       sizeof(temp)
 154:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    );
 155:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 156:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    return TRUE;
 531              		.loc 1 156 0
 532 023e 0123     		movs	r3, #1
 157:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 533              		.loc 1 157 0
 534 0240 1846     		mov	r0, r3
 535 0242 0837     		adds	r7, r7, #8
 536              		.cfi_def_cfa_offset 8
 537 0244 BD46     		mov	sp, r7
 538              		.cfi_def_cfa_register 13
 539              		@ sp needed
 540 0246 80BD     		pop	{r7, pc}
 541              	.L21:
 542              		.align	2
 543              	.L20:
 544 0248 00000000 		.word	schedule_vars
 545              		.cfi_endproc
 546              	.LFE6:
 548              		.align	1
 549              		.global	schedule_setFrameLength
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu softvfp
 555              	schedule_setFrameLength:
 556              	.LFB7:
 158:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 159:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=== from 6top (writing the schedule)
 160:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 161:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 162:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Set frame length.
 163:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 164:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param newFrameLength The new frame length.
 165:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 166:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_setFrameLength(frameLength_t newFrameLength) {
 557              		.loc 1 166 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 024c 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 024e 82B0     		sub	sp, sp, #8
 566              		.cfi_def_cfa_offset 16
 567 0250 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0252 0346     		mov	r3, r0
 570 0254 FB80     		strh	r3, [r7, #6]	@ movhi
 167:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 168:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 169:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 571              		.loc 1 169 0
 572 0256 FFF7FEFF 		bl	IntMasterDisable
 170:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 171:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_vars.frameLength = newFrameLength;
 573              		.loc 1 171 0
 574 025a 084A     		ldr	r2, .L24
 575 025c FB88     		ldrh	r3, [r7, #6]	@ movhi
 576 025e A2F8F832 		strh	r3, [r2, #760]	@ movhi
 172:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (newFrameLength <= MAXACTIVESLOTS) {
 577              		.loc 1 172 0
 578 0262 FB88     		ldrh	r3, [r7, #6]
 579 0264 152B     		cmp	r3, #21
 580 0266 03D8     		bhi	.L23
 173:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.maxActiveSlots = newFrameLength;
 581              		.loc 1 173 0
 582 0268 044A     		ldr	r2, .L24
 583 026a FB88     		ldrh	r3, [r7, #6]	@ movhi
 584 026c A2F8FA32 		strh	r3, [r2, #762]	@ movhi
 585              	.L23:
 174:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 175:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 586              		.loc 1 175 0
 587 0270 FFF7FEFF 		bl	IntMasterEnable
 176:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 588              		.loc 1 176 0
 589 0274 00BF     		nop
 590 0276 0837     		adds	r7, r7, #8
 591              		.cfi_def_cfa_offset 8
 592 0278 BD46     		mov	sp, r7
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 027a 80BD     		pop	{r7, pc}
 596              	.L25:
 597              		.align	2
 598              	.L24:
 599 027c 00000000 		.word	schedule_vars
 600              		.cfi_endproc
 601              	.LFE7:
 603              		.align	1
 604              		.global	schedule_setFrameHandle
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu softvfp
 610              	schedule_setFrameHandle:
 611              	.LFB8:
 177:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 178:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 179:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Set frame handle.
 180:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 181:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param frameHandle The new frame handle.
 182:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 183:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_setFrameHandle(uint8_t frameHandle) {
 612              		.loc 1 183 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0280 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0282 82B0     		sub	sp, sp, #8
 621              		.cfi_def_cfa_offset 16
 622 0284 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0286 0346     		mov	r3, r0
 625 0288 FB71     		strb	r3, [r7, #7]
 184:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 185:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 186:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 626              		.loc 1 186 0
 627 028a FFF7FEFF 		bl	IntMasterDisable
 187:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 188:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_vars.frameHandle = frameHandle;
 628              		.loc 1 188 0
 629 028e 054A     		ldr	r2, .L27
 630 0290 FB79     		ldrb	r3, [r7, #7]
 631 0292 82F8FC32 		strb	r3, [r2, #764]
 189:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 190:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 632              		.loc 1 190 0
 633 0296 FFF7FEFF 		bl	IntMasterEnable
 191:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 634              		.loc 1 191 0
 635 029a 00BF     		nop
 636 029c 0837     		adds	r7, r7, #8
 637              		.cfi_def_cfa_offset 8
 638 029e BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 02a0 80BD     		pop	{r7, pc}
 642              	.L28:
 643 02a2 00BF     		.align	2
 644              	.L27:
 645 02a4 00000000 		.word	schedule_vars
 646              		.cfi_endproc
 647              	.LFE8:
 649              		.align	1
 650              		.global	schedule_setFrameNumber
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu softvfp
 656              	schedule_setFrameNumber:
 657              	.LFB9:
 192:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 193:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 194:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Set frame number.
 195:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 196:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param frameNumber The new frame number.
 197:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 198:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_setFrameNumber(uint8_t frameNumber) {
 658              		.loc 1 198 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 02a8 80B5     		push	{r7, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 02aa 82B0     		sub	sp, sp, #8
 667              		.cfi_def_cfa_offset 16
 668 02ac 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 670 02ae 0346     		mov	r3, r0
 671 02b0 FB71     		strb	r3, [r7, #7]
 199:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 200:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 201:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 672              		.loc 1 201 0
 673 02b2 FFF7FEFF 		bl	IntMasterDisable
 202:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 203:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_vars.frameNumber = frameNumber;
 674              		.loc 1 203 0
 675 02b6 054A     		ldr	r2, .L30
 676 02b8 FB79     		ldrb	r3, [r7, #7]
 677 02ba 82F8FD32 		strb	r3, [r2, #765]
 204:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 205:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 678              		.loc 1 205 0
 679 02be FFF7FEFF 		bl	IntMasterEnable
 206:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 680              		.loc 1 206 0
 681 02c2 00BF     		nop
 682 02c4 0837     		adds	r7, r7, #8
 683              		.cfi_def_cfa_offset 8
 684 02c6 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 02c8 80BD     		pop	{r7, pc}
 688              	.L31:
 689 02ca 00BF     		.align	2
 690              	.L30:
 691 02cc 00000000 		.word	schedule_vars
 692              		.cfi_endproc
 693              	.LFE9:
 695              		.align	1
 696              		.global	schedule_getSlotInfo
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu softvfp
 702              	schedule_getSlotInfo:
 703              	.LFB10:
 207:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 208:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 209:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Get the information of a specific slot.
 210:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 211:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param slotOffset
 212:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param info
 213:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 214:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void  schedule_getSlotInfo(
 215:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     slotOffset_t         slotOffset,
 216:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     slotinfo_element_t*  info
 217:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** ){
 704              		.loc 1 217 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 16
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708 02d0 80B5     		push	{r7, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 7, -8
 711              		.cfi_offset 14, -4
 712 02d2 84B0     		sub	sp, sp, #16
 713              		.cfi_def_cfa_offset 24
 714 02d4 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 716 02d6 0346     		mov	r3, r0
 717 02d8 3960     		str	r1, [r7]
 718 02da FB80     		strh	r3, [r7, #6]	@ movhi
 218:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 219:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     scheduleEntry_t* slotContainer;
 220:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 221:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // find an empty schedule entry container
 222:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     slotContainer = &schedule_vars.scheduleBuf[0];
 719              		.loc 1 222 0
 720 02dc 204B     		ldr	r3, .L37
 721 02de FB60     		str	r3, [r7, #12]
 223:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     while (slotContainer<=&schedule_vars.scheduleBuf[schedule_vars.maxActiveSlots-1]) {
 722              		.loc 1 223 0
 723 02e0 1EE0     		b	.L33
 724              	.L36:
 224:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****        //check that this entry for that neighbour and timeslot is not already scheduled.
 225:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****        if (slotContainer->slotOffset==slotOffset){
 725              		.loc 1 225 0
 726 02e2 FB68     		ldr	r3, [r7, #12]
 727 02e4 1B88     		ldrh	r3, [r3]
 728 02e6 FA88     		ldrh	r2, [r7, #6]
 729 02e8 9A42     		cmp	r2, r3
 730 02ea 16D1     		bne	.L34
 226:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                //it exists so this is an update.
 227:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                info->link_type                 = slotContainer->type;
 731              		.loc 1 227 0
 732 02ec FB68     		ldr	r3, [r7, #12]
 733 02ee 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 734 02f0 3B68     		ldr	r3, [r7]
 735 02f2 5A74     		strb	r2, [r3, #17]
 228:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                info->shared                    = slotContainer->shared;
 736              		.loc 1 228 0
 737 02f4 FB68     		ldr	r3, [r7, #12]
 738 02f6 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 739 02f8 3B68     		ldr	r3, [r7]
 740 02fa 9A74     		strb	r2, [r3, #18]
 229:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                info->slotOffset                = slotOffset;
 741              		.loc 1 229 0
 742 02fc 3B68     		ldr	r3, [r7]
 743 02fe FA88     		ldrh	r2, [r7, #6]	@ movhi
 744 0300 9A82     		strh	r2, [r3, #20]	@ movhi
 230:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                info->channelOffset             = slotContainer->channelOffset;
 745              		.loc 1 230 0
 746 0302 FB68     		ldr	r3, [r7, #12]
 747 0304 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 748 0306 3B68     		ldr	r3, [r7]
 749 0308 9A75     		strb	r2, [r3, #22]
 231:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                memcpy(&(info->address), &(slotContainer->neighbor), sizeof(open_addr_t));
 750              		.loc 1 231 0
 751 030a 3868     		ldr	r0, [r7]
 752 030c FB68     		ldr	r3, [r7, #12]
 753 030e 0533     		adds	r3, r3, #5
 754 0310 1122     		movs	r2, #17
 755 0312 1946     		mov	r1, r3
 756 0314 FFF7FEFF 		bl	memcpy
 232:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                return; //as this is an update. No need to re-insert as it is in the same position o
 757              		.loc 1 232 0
 758 0318 1EE0     		b	.L32
 759              	.L34:
 233:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 234:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         slotContainer++;
 760              		.loc 1 234 0
 761 031a FB68     		ldr	r3, [r7, #12]
 762 031c 2433     		adds	r3, r3, #36
 763 031e FB60     		str	r3, [r7, #12]
 764              	.L33:
 223:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****        //check that this entry for that neighbour and timeslot is not already scheduled.
 765              		.loc 1 223 0
 766 0320 0F4B     		ldr	r3, .L37
 767 0322 B3F8FA32 		ldrh	r3, [r3, #762]
 768 0326 5A1E     		subs	r2, r3, #1
 769 0328 1346     		mov	r3, r2
 770 032a DB00     		lsls	r3, r3, #3
 771 032c 1344     		add	r3, r3, r2
 772 032e 9B00     		lsls	r3, r3, #2
 773 0330 0B4A     		ldr	r2, .L37
 774 0332 1344     		add	r3, r3, r2
 775 0334 FA68     		ldr	r2, [r7, #12]
 776 0336 9A42     		cmp	r2, r3
 777 0338 D3D9     		bls	.L36
 235:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 236:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // return cell type off
 237:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     info->link_type                 = CELLTYPE_OFF;
 778              		.loc 1 237 0
 779 033a 3B68     		ldr	r3, [r7]
 780 033c 0022     		movs	r2, #0
 781 033e 5A74     		strb	r2, [r3, #17]
 238:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     info->shared                    = FALSE;
 782              		.loc 1 238 0
 783 0340 3B68     		ldr	r3, [r7]
 784 0342 0022     		movs	r2, #0
 785 0344 9A74     		strb	r2, [r3, #18]
 239:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     info->channelOffset             = 0;        //set to zero if not set.
 786              		.loc 1 239 0
 787 0346 3B68     		ldr	r3, [r7]
 788 0348 0022     		movs	r2, #0
 789 034a 9A75     		strb	r2, [r3, #22]
 240:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     memset(&(info->address), 0, sizeof(open_addr_t));
 790              		.loc 1 240 0
 791 034c 3B68     		ldr	r3, [r7]
 792 034e 1122     		movs	r2, #17
 793 0350 0021     		movs	r1, #0
 794 0352 1846     		mov	r0, r3
 795 0354 FFF7FEFF 		bl	memset
 796              	.L32:
 241:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 797              		.loc 1 241 0
 798 0358 1037     		adds	r7, r7, #16
 799              		.cfi_def_cfa_offset 8
 800 035a BD46     		mov	sp, r7
 801              		.cfi_def_cfa_register 13
 802              		@ sp needed
 803 035c 80BD     		pop	{r7, pc}
 804              	.L38:
 805 035e 00BF     		.align	2
 806              	.L37:
 807 0360 00000000 		.word	schedule_vars
 808              		.cfi_endproc
 809              	.LFE10:
 811              		.align	1
 812              		.global	schedule_addActiveSlot
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 816              		.fpu softvfp
 818              	schedule_addActiveSlot:
 819              	.LFB11:
 242:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 243:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 244:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Add a new active slot into the schedule.
 245:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 246:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param slotOffset       The slotoffset of the new slot
 247:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param type             The type of the cell
 248:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param shared           Whether this cell is shared (TRUE) or not (FALSE).
 249:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param channelOffset    The channelOffset of the new slot
 250:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param neighbor         The neighbor associated with this cell (all 0's if
 251:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    none)
 252:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 253:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** owerror_t schedule_addActiveSlot(
 254:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       slotOffset_t    slotOffset,
 255:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       cellType_t      type,
 256:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       bool            shared,
 257:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       channelOffset_t channelOffset,
 258:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       open_addr_t*    neighbor
 259:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ) {
 820              		.loc 1 259 0
 821              		.cfi_startproc
 822              		@ args = 4, pretend = 0, frame = 32
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824 0364 90B5     		push	{r4, r7, lr}
 825              		.cfi_def_cfa_offset 12
 826              		.cfi_offset 4, -12
 827              		.cfi_offset 7, -8
 828              		.cfi_offset 14, -4
 829 0366 89B0     		sub	sp, sp, #36
 830              		.cfi_def_cfa_offset 48
 831 0368 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 833 036a 0446     		mov	r4, r0
 834 036c 0846     		mov	r0, r1
 835 036e 1146     		mov	r1, r2
 836 0370 1A46     		mov	r2, r3
 837 0372 2346     		mov	r3, r4	@ movhi
 838 0374 FB80     		strh	r3, [r7, #6]	@ movhi
 839 0376 0346     		mov	r3, r0
 840 0378 7B71     		strb	r3, [r7, #5]
 841 037a 0B46     		mov	r3, r1
 842 037c 3B71     		strb	r3, [r7, #4]
 843 037e 1346     		mov	r3, r2
 844 0380 FB70     		strb	r3, [r7, #3]
 260:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    uint8_t asn[5];
 261:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleEntry_t* slotContainer;
 262:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleEntry_t* previousSlotWalker;
 263:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleEntry_t* nextSlotWalker;
 264:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 265:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 266:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 845              		.loc 1 266 0
 846 0382 FFF7FEFF 		bl	IntMasterDisable
 267:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 268:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // find an empty schedule entry container
 269:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer = &schedule_vars.scheduleBuf[0];
 847              		.loc 1 269 0
 848 0386 644B     		ldr	r3, .L54
 849 0388 FB61     		str	r3, [r7, #28]
 270:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    while (
 850              		.loc 1 270 0
 851 038a 02E0     		b	.L40
 852              	.L42:
 271:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          slotContainer->type!=CELLTYPE_OFF &&
 272:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          slotContainer<=&schedule_vars.scheduleBuf[schedule_vars.maxActiveSlots-1]
 273:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       ) {
 274:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       slotContainer++;
 853              		.loc 1 274 0
 854 038c FB69     		ldr	r3, [r7, #28]
 855 038e 2433     		adds	r3, r3, #36
 856 0390 FB61     		str	r3, [r7, #28]
 857              	.L40:
 271:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          slotContainer->type!=CELLTYPE_OFF &&
 858              		.loc 1 271 0
 859 0392 FB69     		ldr	r3, [r7, #28]
 860 0394 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 270:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    while (
 861              		.loc 1 270 0
 862 0396 002B     		cmp	r3, #0
 863 0398 0CD0     		beq	.L41
 272:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       ) {
 864              		.loc 1 272 0
 865 039a 5F4B     		ldr	r3, .L54
 866 039c B3F8FA32 		ldrh	r3, [r3, #762]
 867 03a0 5A1E     		subs	r2, r3, #1
 868 03a2 1346     		mov	r3, r2
 869 03a4 DB00     		lsls	r3, r3, #3
 870 03a6 1344     		add	r3, r3, r2
 871 03a8 9B00     		lsls	r3, r3, #2
 872 03aa 5B4A     		ldr	r2, .L54
 873 03ac 1344     		add	r3, r3, r2
 271:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          slotContainer->type!=CELLTYPE_OFF &&
 874              		.loc 1 271 0
 875 03ae FA69     		ldr	r2, [r7, #28]
 876 03b0 9A42     		cmp	r2, r3
 877 03b2 EBD9     		bls	.L42
 878              	.L41:
 275:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 276:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 277:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // abort it schedule overflow
 278:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (slotContainer>&schedule_vars.scheduleBuf[schedule_vars.maxActiveSlots-1]) {
 879              		.loc 1 278 0
 880 03b4 584B     		ldr	r3, .L54
 881 03b6 B3F8FA32 		ldrh	r3, [r3, #762]
 882 03ba 5A1E     		subs	r2, r3, #1
 883 03bc 1346     		mov	r3, r2
 884 03be DB00     		lsls	r3, r3, #3
 885 03c0 1344     		add	r3, r3, r2
 886 03c2 9B00     		lsls	r3, r3, #2
 887 03c4 544A     		ldr	r2, .L54
 888 03c6 1344     		add	r3, r3, r2
 889 03c8 FA69     		ldr	r2, [r7, #28]
 890 03ca 9A42     		cmp	r2, r3
 891 03cc 09D9     		bls	.L43
 279:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       ENABLE_INTERRUPTS();
 892              		.loc 1 279 0
 893 03ce FFF7FEFF 		bl	IntMasterEnable
 280:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       openserial_printError(
 894              		.loc 1 280 0
 895 03d2 0023     		movs	r3, #0
 896 03d4 0022     		movs	r2, #0
 897 03d6 1821     		movs	r1, #24
 898 03d8 0E20     		movs	r0, #14
 899 03da FFF7FEFF 		bl	openserial_printError
 281:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          COMPONENT_SCHEDULE,ERR_SCHEDULE_OVERFLOWN,
 282:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          (errorparameter_t)0,
 283:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          (errorparameter_t)0
 284:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       );
 285:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****  
 286:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       return E_FAIL;
 900              		.loc 1 286 0
 901 03de 0123     		movs	r3, #1
 902 03e0 96E0     		b	.L53
 903              	.L43:
 287:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 288:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 289:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // fill that schedule entry with parameters passed
 290:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->slotOffset                = slotOffset;
 904              		.loc 1 290 0
 905 03e2 FB69     		ldr	r3, [r7, #28]
 906 03e4 FA88     		ldrh	r2, [r7, #6]	@ movhi
 907 03e6 1A80     		strh	r2, [r3]	@ movhi
 291:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->type                      = type;
 908              		.loc 1 291 0
 909 03e8 FB69     		ldr	r3, [r7, #28]
 910 03ea 7A79     		ldrb	r2, [r7, #5]
 911 03ec 9A70     		strb	r2, [r3, #2]
 292:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->shared                    = shared;
 912              		.loc 1 292 0
 913 03ee FB69     		ldr	r3, [r7, #28]
 914 03f0 3A79     		ldrb	r2, [r7, #4]
 915 03f2 DA70     		strb	r2, [r3, #3]
 293:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->channelOffset             = channelOffset;
 916              		.loc 1 293 0
 917 03f4 FB69     		ldr	r3, [r7, #28]
 918 03f6 FA78     		ldrb	r2, [r7, #3]
 919 03f8 1A71     		strb	r2, [r3, #4]
 294:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    memcpy(&slotContainer->neighbor,neighbor,sizeof(open_addr_t));
 920              		.loc 1 294 0
 921 03fa FB69     		ldr	r3, [r7, #28]
 922 03fc 0533     		adds	r3, r3, #5
 923 03fe 1122     		movs	r2, #17
 924 0400 396B     		ldr	r1, [r7, #48]
 925 0402 1846     		mov	r0, r3
 926 0404 FFF7FEFF 		bl	memcpy
 295:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 296:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // fill that schedule entry with current asn
 297:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ieee154e_getAsn(&(asn[0]));
 927              		.loc 1 297 0
 928 0408 07F10C03 		add	r3, r7, #12
 929 040c 1846     		mov	r0, r3
 930 040e FFF7FEFF 		bl	ieee154e_getAsn
 298:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->lastUsedAsn.bytes0and1 = 256*asn[1]+asn[0];
 931              		.loc 1 298 0
 932 0412 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 933 0414 9BB2     		uxth	r3, r3
 934 0416 1B02     		lsls	r3, r3, #8
 935 0418 9AB2     		uxth	r2, r3
 936 041a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 937 041c 9BB2     		uxth	r3, r3
 938 041e 1344     		add	r3, r3, r2
 939 0420 9AB2     		uxth	r2, r3
 940 0422 FB69     		ldr	r3, [r7, #28]
 941 0424 9A83     		strh	r2, [r3, #28]	@ movhi
 299:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->lastUsedAsn.bytes2and3 = 256*asn[3]+asn[2];
 942              		.loc 1 299 0
 943 0426 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 944 0428 9BB2     		uxth	r3, r3
 945 042a 1B02     		lsls	r3, r3, #8
 946 042c 9AB2     		uxth	r2, r3
 947 042e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 948 0430 9BB2     		uxth	r3, r3
 949 0432 1344     		add	r3, r3, r2
 950 0434 9AB2     		uxth	r2, r3
 951 0436 FB69     		ldr	r3, [r7, #28]
 952 0438 5A83     		strh	r2, [r3, #26]	@ movhi
 300:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer->lastUsedAsn.byte4      = asn[4];
 953              		.loc 1 300 0
 954 043a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 955 043c FB69     		ldr	r3, [r7, #28]
 956 043e 5A76     		strb	r2, [r3, #25]
 301:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 302:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // insert in circular list
 303:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (schedule_vars.currentScheduleEntry==NULL) {
 957              		.loc 1 303 0
 958 0440 354B     		ldr	r3, .L54
 959 0442 D3F8F432 		ldr	r3, [r3, #756]
 960 0446 002B     		cmp	r3, #0
 961 0448 07D1     		bne	.L45
 304:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // this is the first active slot added
 305:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 306:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // the next slot of this slot is this slot
 307:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       slotContainer->next                   = slotContainer;
 962              		.loc 1 307 0
 963 044a FB69     		ldr	r3, [r7, #28]
 964 044c FA69     		ldr	r2, [r7, #28]
 965 044e 1A62     		str	r2, [r3, #32]
 308:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 309:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // current slot points to this slot
 310:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry    = slotContainer;
 966              		.loc 1 310 0
 967 0450 314A     		ldr	r2, .L54
 968 0452 FB69     		ldr	r3, [r7, #28]
 969 0454 C2F8F432 		str	r3, [r2, #756]
 970 0458 57E0     		b	.L46
 971              	.L45:
 311:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    } else  {
 312:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // this is NOT the first active slot added
 313:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 314:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // find position in schedule
 315:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       previousSlotWalker                    = schedule_vars.currentScheduleEntry;
 972              		.loc 1 315 0
 973 045a 2F4B     		ldr	r3, .L54
 974 045c D3F8F432 		ldr	r3, [r3, #756]
 975 0460 BB61     		str	r3, [r7, #24]
 976              	.L52:
 316:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       while (1) {
 317:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          nextSlotWalker                     = previousSlotWalker->next;
 977              		.loc 1 317 0
 978 0462 BB69     		ldr	r3, [r7, #24]
 979 0464 1B6A     		ldr	r3, [r3, #32]
 980 0466 7B61     		str	r3, [r7, #20]
 318:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          if (
 319:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (
 320:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (previousSlotWalker->slotOffset <  slotContainer->slotOffset) &&
 981              		.loc 1 320 0
 982 0468 BB69     		ldr	r3, [r7, #24]
 983 046a 1A88     		ldrh	r2, [r3]
 984 046c FB69     		ldr	r3, [r7, #28]
 985 046e 1B88     		ldrh	r3, [r3]
 318:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          if (
 986              		.loc 1 318 0
 987 0470 9A42     		cmp	r2, r3
 988 0472 05D2     		bcs	.L47
 321:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (slotContainer->slotOffset <  nextSlotWalker->slotOffset)
 989              		.loc 1 321 0
 990 0474 FB69     		ldr	r3, [r7, #28]
 991 0476 1A88     		ldrh	r2, [r3]
 992 0478 7B69     		ldr	r3, [r7, #20]
 993 047a 1B88     		ldrh	r3, [r3]
 320:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (slotContainer->slotOffset <  nextSlotWalker->slotOffset)
 994              		.loc 1 320 0
 995 047c 9A42     		cmp	r2, r3
 996 047e 3ED3     		bcc	.L48
 997              	.L47:
 322:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                )
 323:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                ||
 324:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (
 325:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (previousSlotWalker->slotOffset <  slotContainer->slotOffset) &&
 998              		.loc 1 325 0
 999 0480 BB69     		ldr	r3, [r7, #24]
 1000 0482 1A88     		ldrh	r2, [r3]
 1001 0484 FB69     		ldr	r3, [r7, #28]
 1002 0486 1B88     		ldrh	r3, [r3]
 323:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (
 1003              		.loc 1 323 0
 1004 0488 9A42     		cmp	r2, r3
 1005 048a 05D2     		bcs	.L49
 326:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (nextSlotWalker->slotOffset <= previousSlotWalker->slotOffset)
 1006              		.loc 1 326 0
 1007 048c 7B69     		ldr	r3, [r7, #20]
 1008 048e 1A88     		ldrh	r2, [r3]
 1009 0490 BB69     		ldr	r3, [r7, #24]
 1010 0492 1B88     		ldrh	r3, [r3]
 325:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (nextSlotWalker->slotOffset <= previousSlotWalker->slotOffset)
 1011              		.loc 1 325 0
 1012 0494 9A42     		cmp	r2, r3
 1013 0496 32D9     		bls	.L48
 1014              	.L49:
 327:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                )
 328:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                ||
 329:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (
 330:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (slotContainer->slotOffset <  nextSlotWalker->slotOffset) &&
 1015              		.loc 1 330 0
 1016 0498 FB69     		ldr	r3, [r7, #28]
 1017 049a 1A88     		ldrh	r2, [r3]
 1018 049c 7B69     		ldr	r3, [r7, #20]
 1019 049e 1B88     		ldrh	r3, [r3]
 328:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (
 1020              		.loc 1 328 0
 1021 04a0 9A42     		cmp	r2, r3
 1022 04a2 05D2     		bcs	.L50
 331:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (nextSlotWalker->slotOffset <= previousSlotWalker->slotOffset)
 1023              		.loc 1 331 0
 1024 04a4 7B69     		ldr	r3, [r7, #20]
 1025 04a6 1A88     		ldrh	r2, [r3]
 1026 04a8 BB69     		ldr	r3, [r7, #24]
 1027 04aa 1B88     		ldrh	r3, [r3]
 330:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                      (nextSlotWalker->slotOffset <= previousSlotWalker->slotOffset)
 1028              		.loc 1 330 0
 1029 04ac 9A42     		cmp	r2, r3
 1030 04ae 26D9     		bls	.L48
 1031              	.L50:
 332:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                )
 333:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          ) {
 334:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             break;
 335:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          }
 336:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          if (previousSlotWalker->slotOffset == slotContainer->slotOffset) {
 1032              		.loc 1 336 0
 1033 04b0 BB69     		ldr	r3, [r7, #24]
 1034 04b2 1A88     		ldrh	r2, [r3]
 1035 04b4 FB69     		ldr	r3, [r7, #28]
 1036 04b6 1B88     		ldrh	r3, [r3]
 1037 04b8 9A42     		cmp	r2, r3
 1038 04ba 1DD1     		bne	.L51
 337:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             // slot is already in schedule
 338:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             openserial_printError(
 339:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                COMPONENT_SCHEDULE,ERR_SCHEDULE_ADDDUPLICATESLOT,
 340:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (errorparameter_t)slotContainer->slotOffset,
 1039              		.loc 1 340 0
 1040 04bc FB69     		ldr	r3, [r7, #28]
 1041 04be 1A88     		ldrh	r2, [r3]
 338:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                COMPONENT_SCHEDULE,ERR_SCHEDULE_ADDDUPLICATESLOT,
 1042              		.loc 1 338 0
 1043 04c0 0023     		movs	r3, #0
 1044 04c2 4021     		movs	r1, #64
 1045 04c4 0E20     		movs	r0, #14
 1046 04c6 FFF7FEFF 		bl	openserial_printError
 341:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                (errorparameter_t)0
 342:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             );
 343:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             // reset the entry
 344:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             slotContainer->slotOffset                = 0;
 1047              		.loc 1 344 0
 1048 04ca FB69     		ldr	r3, [r7, #28]
 1049 04cc 0022     		movs	r2, #0
 1050 04ce 1A80     		strh	r2, [r3]	@ movhi
 345:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             slotContainer->type                      = CELLTYPE_OFF;
 1051              		.loc 1 345 0
 1052 04d0 FB69     		ldr	r3, [r7, #28]
 1053 04d2 0022     		movs	r2, #0
 1054 04d4 9A70     		strb	r2, [r3, #2]
 346:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             slotContainer->shared                    = FALSE;
 1055              		.loc 1 346 0
 1056 04d6 FB69     		ldr	r3, [r7, #28]
 1057 04d8 0022     		movs	r2, #0
 1058 04da DA70     		strb	r2, [r3, #3]
 347:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             slotContainer->channelOffset             = 0;
 1059              		.loc 1 347 0
 1060 04dc FB69     		ldr	r3, [r7, #28]
 1061 04de 0022     		movs	r2, #0
 1062 04e0 1A71     		strb	r2, [r3, #4]
 348:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             memset(&slotContainer->neighbor,0,sizeof(open_addr_t));
 1063              		.loc 1 348 0
 1064 04e2 FB69     		ldr	r3, [r7, #28]
 1065 04e4 0533     		adds	r3, r3, #5
 1066 04e6 1122     		movs	r2, #17
 1067 04e8 0021     		movs	r1, #0
 1068 04ea 1846     		mov	r0, r3
 1069 04ec FFF7FEFF 		bl	memset
 349:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 1070              		.loc 1 349 0
 1071 04f0 FFF7FEFF 		bl	IntMasterEnable
 350:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return E_FAIL;
 1072              		.loc 1 350 0
 1073 04f4 0123     		movs	r3, #1
 1074 04f6 0BE0     		b	.L53
 1075              	.L51:
 351:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          }
 352:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          previousSlotWalker                 = nextSlotWalker;
 1076              		.loc 1 352 0
 1077 04f8 7B69     		ldr	r3, [r7, #20]
 1078 04fa BB61     		str	r3, [r7, #24]
 317:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          if (
 1079              		.loc 1 317 0
 1080 04fc B1E7     		b	.L52
 1081              	.L48:
 353:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       }
 354:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // insert between previousSlotWalker and nextSlotWalker
 355:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       previousSlotWalker->next              = slotContainer;
 1082              		.loc 1 355 0
 1083 04fe BB69     		ldr	r3, [r7, #24]
 1084 0500 FA69     		ldr	r2, [r7, #28]
 1085 0502 1A62     		str	r2, [r3, #32]
 356:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       slotContainer->next                   = nextSlotWalker;
 1086              		.loc 1 356 0
 1087 0504 FB69     		ldr	r3, [r7, #28]
 1088 0506 7A69     		ldr	r2, [r7, #20]
 1089 0508 1A62     		str	r2, [r3, #32]
 1090              	.L46:
 357:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 358:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 359:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1091              		.loc 1 359 0
 1092 050a FFF7FEFF 		bl	IntMasterEnable
 360:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    return E_SUCCESS;
 1093              		.loc 1 360 0
 1094 050e 0023     		movs	r3, #0
 1095              	.L53:
 361:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1096              		.loc 1 361 0 discriminator 1
 1097 0510 1846     		mov	r0, r3
 1098 0512 2437     		adds	r7, r7, #36
 1099              		.cfi_def_cfa_offset 12
 1100 0514 BD46     		mov	sp, r7
 1101              		.cfi_def_cfa_register 13
 1102              		@ sp needed
 1103 0516 90BD     		pop	{r4, r7, pc}
 1104              	.L55:
 1105              		.align	2
 1106              	.L54:
 1107 0518 00000000 		.word	schedule_vars
 1108              		.cfi_endproc
 1109              	.LFE11:
 1111              		.align	1
 1112              		.global	schedule_removeActiveSlot
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu softvfp
 1118              	schedule_removeActiveSlot:
 1119              	.LFB12:
 362:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 363:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 364:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Remove an active slot from the schedule.
 365:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 366:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param slotOffset       The slotoffset of the slot to remove.
 367:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \param neighbor         The neighbor associated with this cell (all 0's if
 368:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    none)
 369:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 370:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** owerror_t schedule_removeActiveSlot(slotOffset_t slotOffset, open_addr_t* neighbor) {
 1120              		.loc 1 370 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 16
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 051c 80B5     		push	{r7, lr}
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 051e 84B0     		sub	sp, sp, #16
 1129              		.cfi_def_cfa_offset 24
 1130 0520 00AF     		add	r7, sp, #0
 1131              		.cfi_def_cfa_register 7
 1132 0522 0346     		mov	r3, r0
 1133 0524 3960     		str	r1, [r7]
 1134 0526 FB80     		strh	r3, [r7, #6]	@ movhi
 371:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleEntry_t* slotContainer;
 372:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleEntry_t* previousSlotWalker;
 373:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 374:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 375:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1135              		.loc 1 375 0
 1136 0528 FFF7FEFF 		bl	IntMasterDisable
 376:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 377:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // find the schedule entry
 378:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    slotContainer = &schedule_vars.scheduleBuf[0];
 1137              		.loc 1 378 0
 1138 052c 364B     		ldr	r3, .L71
 1139 052e FB60     		str	r3, [r7, #12]
 379:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    while (slotContainer<=&schedule_vars.scheduleBuf[schedule_vars.maxActiveSlots-1]) {
 1140              		.loc 1 379 0
 1141 0530 10E0     		b	.L57
 1142              	.L60:
 380:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       if (
 381:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             slotContainer->slotOffset==slotOffset
 1143              		.loc 1 381 0
 1144 0532 FB68     		ldr	r3, [r7, #12]
 1145 0534 1B88     		ldrh	r3, [r3]
 380:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       if (
 1146              		.loc 1 380 0
 1147 0536 FA88     		ldrh	r2, [r7, #6]
 1148 0538 9A42     		cmp	r2, r3
 1149 053a 08D1     		bne	.L58
 382:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             &&
 383:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(neighbor,&(slotContainer->neighbor))
 1150              		.loc 1 383 0
 1151 053c FB68     		ldr	r3, [r7, #12]
 1152 053e 0533     		adds	r3, r3, #5
 1153 0540 1946     		mov	r1, r3
 1154 0542 3868     		ldr	r0, [r7]
 1155 0544 FFF7FEFF 		bl	packetfunctions_sameAddress
 1156 0548 0346     		mov	r3, r0
 382:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             &&
 1157              		.loc 1 382 0
 1158 054a 002B     		cmp	r3, #0
 1159 054c 10D1     		bne	.L69
 1160              	.L58:
 384:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ){
 385:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          break;
 386:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       }
 387:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       slotContainer++;
 1161              		.loc 1 387 0
 1162 054e FB68     		ldr	r3, [r7, #12]
 1163 0550 2433     		adds	r3, r3, #36
 1164 0552 FB60     		str	r3, [r7, #12]
 1165              	.L57:
 379:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       if (
 1166              		.loc 1 379 0
 1167 0554 2C4B     		ldr	r3, .L71
 1168 0556 B3F8FA32 		ldrh	r3, [r3, #762]
 1169 055a 5A1E     		subs	r2, r3, #1
 1170 055c 1346     		mov	r3, r2
 1171 055e DB00     		lsls	r3, r3, #3
 1172 0560 1344     		add	r3, r3, r2
 1173 0562 9B00     		lsls	r3, r3, #2
 1174 0564 284A     		ldr	r2, .L71
 1175 0566 1344     		add	r3, r3, r2
 1176 0568 FA68     		ldr	r2, [r7, #12]
 1177 056a 9A42     		cmp	r2, r3
 1178 056c E1D9     		bls	.L60
 1179 056e 00E0     		b	.L59
 1180              	.L69:
 385:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       }
 1181              		.loc 1 385 0
 1182 0570 00BF     		nop
 1183              	.L59:
 388:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 389:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 390:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // abort it could not find
 391:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (slotContainer>&schedule_vars.scheduleBuf[schedule_vars.maxActiveSlots-1]) {
 1184              		.loc 1 391 0
 1185 0572 254B     		ldr	r3, .L71
 1186 0574 B3F8FA32 		ldrh	r3, [r3, #762]
 1187 0578 5A1E     		subs	r2, r3, #1
 1188 057a 1346     		mov	r3, r2
 1189 057c DB00     		lsls	r3, r3, #3
 1190 057e 1344     		add	r3, r3, r2
 1191 0580 9B00     		lsls	r3, r3, #2
 1192 0582 214A     		ldr	r2, .L71
 1193 0584 1344     		add	r3, r3, r2
 1194 0586 FA68     		ldr	r2, [r7, #12]
 1195 0588 9A42     		cmp	r2, r3
 1196 058a 09D9     		bls	.L61
 392:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       ENABLE_INTERRUPTS();
 1197              		.loc 1 392 0
 1198 058c FFF7FEFF 		bl	IntMasterEnable
 393:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       openserial_printCritical(
 1199              		.loc 1 393 0
 1200 0590 0023     		movs	r3, #0
 1201 0592 0022     		movs	r2, #0
 1202 0594 2F21     		movs	r1, #47
 1203 0596 0E20     		movs	r0, #14
 1204 0598 FFF7FEFF 		bl	openserial_printCritical
 394:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          COMPONENT_SCHEDULE,ERR_FREEING_ERROR,
 395:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          (errorparameter_t)0,
 396:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          (errorparameter_t)0
 397:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       );
 398:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       return E_FAIL;
 1205              		.loc 1 398 0
 1206 059c 0123     		movs	r3, #1
 1207 059e 2FE0     		b	.L62
 1208              	.L61:
 399:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 400:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 401:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // remove from linked list
 402:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (slotContainer->next==slotContainer) {
 1209              		.loc 1 402 0
 1210 05a0 FB68     		ldr	r3, [r7, #12]
 1211 05a2 1B6A     		ldr	r3, [r3, #32]
 1212 05a4 FA68     		ldr	r2, [r7, #12]
 1213 05a6 9A42     		cmp	r2, r3
 1214 05a8 07D1     		bne	.L63
 403:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // this is the last active slot
 404:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 405:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // the next slot of this slot is NULL
 406:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       slotContainer->next                   = NULL;
 1215              		.loc 1 406 0
 1216 05aa FB68     		ldr	r3, [r7, #12]
 1217 05ac 0022     		movs	r2, #0
 1218 05ae 1A62     		str	r2, [r3, #32]
 407:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 408:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // current slot points to this slot
 409:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry    = NULL;
 1219              		.loc 1 409 0
 1220 05b0 154B     		ldr	r3, .L71
 1221 05b2 0022     		movs	r2, #0
 1222 05b4 C3F8F422 		str	r2, [r3, #756]
 1223 05b8 1CE0     		b	.L64
 1224              	.L63:
 410:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    } else  {
 411:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // this is NOT the last active slot
 412:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 413:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // find the previous in the schedule
 414:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       previousSlotWalker                    = schedule_vars.currentScheduleEntry;
 1225              		.loc 1 414 0
 1226 05ba 134B     		ldr	r3, .L71
 1227 05bc D3F8F432 		ldr	r3, [r3, #756]
 1228 05c0 BB60     		str	r3, [r7, #8]
 1229              	.L67:
 415:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 416:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       while (1) {
 417:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          if (previousSlotWalker->next==slotContainer){
 1230              		.loc 1 417 0
 1231 05c2 BB68     		ldr	r3, [r7, #8]
 1232 05c4 1B6A     		ldr	r3, [r3, #32]
 1233 05c6 FA68     		ldr	r2, [r7, #12]
 1234 05c8 9A42     		cmp	r2, r3
 1235 05ca 03D0     		beq	.L70
 418:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             break;
 419:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          }
 420:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          previousSlotWalker                 = previousSlotWalker->next;
 1236              		.loc 1 420 0
 1237 05cc BB68     		ldr	r3, [r7, #8]
 1238 05ce 1B6A     		ldr	r3, [r3, #32]
 1239 05d0 BB60     		str	r3, [r7, #8]
 417:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             break;
 1240              		.loc 1 417 0
 1241 05d2 F6E7     		b	.L67
 1242              	.L70:
 418:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             break;
 1243              		.loc 1 418 0
 1244 05d4 00BF     		nop
 421:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       }
 422:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 423:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // remove this element from the linked list, i.e. have the previous slot
 424:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // "jump" to slotContainer's next
 425:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       previousSlotWalker->next              = slotContainer->next;
 1245              		.loc 1 425 0
 1246 05d6 FB68     		ldr	r3, [r7, #12]
 1247 05d8 1A6A     		ldr	r2, [r3, #32]
 1248 05da BB68     		ldr	r3, [r7, #8]
 1249 05dc 1A62     		str	r2, [r3, #32]
 426:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 427:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       // update current slot if points to slot I just removed
 428:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       if (schedule_vars.currentScheduleEntry==slotContainer) {
 1250              		.loc 1 428 0
 1251 05de 0A4B     		ldr	r3, .L71
 1252 05e0 D3F8F432 		ldr	r3, [r3, #756]
 1253 05e4 FA68     		ldr	r2, [r7, #12]
 1254 05e6 9A42     		cmp	r2, r3
 1255 05e8 04D1     		bne	.L64
 429:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****          schedule_vars.currentScheduleEntry = slotContainer->next;
 1256              		.loc 1 429 0
 1257 05ea FB68     		ldr	r3, [r7, #12]
 1258 05ec 1B6A     		ldr	r3, [r3, #32]
 1259 05ee 064A     		ldr	r2, .L71
 1260 05f0 C2F8F432 		str	r3, [r2, #756]
 1261              	.L64:
 430:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       }
 431:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 432:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 433:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    // reset removed schedule entry
 434:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    schedule_resetEntry(slotContainer);
 1262              		.loc 1 434 0
 1263 05f4 F868     		ldr	r0, [r7, #12]
 1264 05f6 FFF7FEFF 		bl	schedule_resetEntry
 435:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 436:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1265              		.loc 1 436 0
 1266 05fa FFF7FEFF 		bl	IntMasterEnable
 437:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 438:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    return E_SUCCESS;
 1267              		.loc 1 438 0
 1268 05fe 0023     		movs	r3, #0
 1269              	.L62:
 439:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1270              		.loc 1 439 0
 1271 0600 1846     		mov	r0, r3
 1272 0602 1037     		adds	r7, r7, #16
 1273              		.cfi_def_cfa_offset 8
 1274 0604 BD46     		mov	sp, r7
 1275              		.cfi_def_cfa_register 13
 1276              		@ sp needed
 1277 0606 80BD     		pop	{r7, pc}
 1278              	.L72:
 1279              		.align	2
 1280              	.L71:
 1281 0608 00000000 		.word	schedule_vars
 1282              		.cfi_endproc
 1283              	.LFE12:
 1285              		.align	1
 1286              		.global	schedule_isSlotOffsetAvailable
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1290              		.fpu softvfp
 1292              	schedule_isSlotOffsetAvailable:
 1293              	.LFB13:
 440:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 441:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_isSlotOffsetAvailable(uint16_t slotOffset){
 1294              		.loc 1 441 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 16
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 060c 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 060e 84B0     		sub	sp, sp, #16
 1303              		.cfi_def_cfa_offset 24
 1304 0610 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0612 0346     		mov	r3, r0
 1307 0614 FB80     		strh	r3, [r7, #6]	@ movhi
 442:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 443:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleEntry_t* scheduleWalker;
 444:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 445:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 446:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1308              		.loc 1 446 0
 1309 0616 FFF7FEFF 		bl	IntMasterDisable
 447:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 448:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    if (slotOffset>=schedule_vars.frameLength){
 1310              		.loc 1 448 0
 1311 061a 134B     		ldr	r3, .L78
 1312 061c B3F8F832 		ldrh	r3, [r3, #760]
 1313 0620 FA88     		ldrh	r2, [r7, #6]
 1314 0622 9A42     		cmp	r2, r3
 1315 0624 03D3     		bcc	.L74
 449:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       ENABLE_INTERRUPTS();
 1316              		.loc 1 449 0
 1317 0626 FFF7FEFF 		bl	IntMasterEnable
 450:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       return FALSE;
 1318              		.loc 1 450 0
 1319 062a 0023     		movs	r3, #0
 1320 062c 18E0     		b	.L75
 1321              	.L74:
 451:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 452:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 453:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    scheduleWalker = schedule_vars.currentScheduleEntry;
 1322              		.loc 1 453 0
 1323 062e 0E4B     		ldr	r3, .L78
 1324 0630 D3F8F432 		ldr	r3, [r3, #756]
 1325 0634 FB60     		str	r3, [r7, #12]
 1326              	.L77:
 454:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    do {
 455:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       if(slotOffset == scheduleWalker->slotOffset){
 1327              		.loc 1 455 0
 1328 0636 FB68     		ldr	r3, [r7, #12]
 1329 0638 1B88     		ldrh	r3, [r3]
 1330 063a FA88     		ldrh	r2, [r7, #6]
 1331 063c 9A42     		cmp	r2, r3
 1332 063e 03D1     		bne	.L76
 456:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****           ENABLE_INTERRUPTS();
 1333              		.loc 1 456 0
 1334 0640 FFF7FEFF 		bl	IntMasterEnable
 457:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****           return FALSE;
 1335              		.loc 1 457 0
 1336 0644 0023     		movs	r3, #0
 1337 0646 0BE0     		b	.L75
 1338              	.L76:
 458:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       }
 459:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       scheduleWalker = scheduleWalker->next;
 1339              		.loc 1 459 0
 1340 0648 FB68     		ldr	r3, [r7, #12]
 1341 064a 1B6A     		ldr	r3, [r3, #32]
 1342 064c FB60     		str	r3, [r7, #12]
 460:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }while(scheduleWalker!=schedule_vars.currentScheduleEntry);
 1343              		.loc 1 460 0
 1344 064e 064B     		ldr	r3, .L78
 1345 0650 D3F8F432 		ldr	r3, [r3, #756]
 1346 0654 FA68     		ldr	r2, [r7, #12]
 1347 0656 9A42     		cmp	r2, r3
 1348 0658 EDD1     		bne	.L77
 461:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 462:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1349              		.loc 1 462 0
 1350 065a FFF7FEFF 		bl	IntMasterEnable
 463:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 464:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    return TRUE;
 1351              		.loc 1 464 0
 1352 065e 0123     		movs	r3, #1
 1353              	.L75:
 465:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1354              		.loc 1 465 0
 1355 0660 1846     		mov	r0, r3
 1356 0662 1037     		adds	r7, r7, #16
 1357              		.cfi_def_cfa_offset 8
 1358 0664 BD46     		mov	sp, r7
 1359              		.cfi_def_cfa_register 13
 1360              		@ sp needed
 1361 0666 80BD     		pop	{r7, pc}
 1362              	.L79:
 1363              		.align	2
 1364              	.L78:
 1365 0668 00000000 		.word	schedule_vars
 1366              		.cfi_endproc
 1367              	.LFE13:
 1369              		.align	1
 1370              		.global	schedule_removeAllManagedUnicastCellsToNeighbor
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1374              		.fpu softvfp
 1376              	schedule_removeAllManagedUnicastCellsToNeighbor:
 1377              	.LFB14:
 466:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 467:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_removeAllManagedUnicastCellsToNeighbor(
 468:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t        slotframeID,
 469:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     open_addr_t*   neighbor
 470:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ){
 1378              		.loc 1 470 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 16
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 066c 80B5     		push	{r7, lr}
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 7, -8
 1385              		.cfi_offset 14, -4
 1386 066e 84B0     		sub	sp, sp, #16
 1387              		.cfi_def_cfa_offset 24
 1388 0670 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 1390 0672 0346     		mov	r3, r0
 1391 0674 3960     		str	r1, [r7]
 1392 0676 FB71     		strb	r3, [r7, #7]
 471:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 472:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 473:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // remove all entries in schedule with previousHop address
 474:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++){
 1393              		.loc 1 474 0
 1394 0678 0023     		movs	r3, #0
 1395 067a FB73     		strb	r3, [r7, #15]
 1396 067c 33E0     		b	.L81
 1397              	.L84:
 475:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 476:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(&(schedule_vars.scheduleBuf[i].neighbor),neighbor) &&
 1398              		.loc 1 476 0
 1399 067e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1400 0680 1346     		mov	r3, r2
 1401 0682 DB00     		lsls	r3, r3, #3
 1402 0684 1344     		add	r3, r3, r2
 1403 0686 9B00     		lsls	r3, r3, #2
 1404 0688 1A4A     		ldr	r2, .L85
 1405 068a 1344     		add	r3, r3, r2
 1406 068c 0533     		adds	r3, r3, #5
 1407 068e 3968     		ldr	r1, [r7]
 1408 0690 1846     		mov	r0, r3
 1409 0692 FFF7FEFF 		bl	packetfunctions_sameAddress
 1410 0696 0346     		mov	r3, r0
 475:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 1411              		.loc 1 475 0
 1412 0698 002B     		cmp	r3, #0
 1413 069a 21D0     		beq	.L82
 477:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             (
 478:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.scheduleBuf[i].type == CELLTYPE_TX ||
 1414              		.loc 1 478 0
 1415 069c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1416 069e 1549     		ldr	r1, .L85
 1417 06a0 1346     		mov	r3, r2
 1418 06a2 DB00     		lsls	r3, r3, #3
 1419 06a4 1344     		add	r3, r3, r2
 1420 06a6 9B00     		lsls	r3, r3, #2
 1421 06a8 0B44     		add	r3, r3, r1
 1422 06aa 0233     		adds	r3, r3, #2
 1423 06ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 476:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             (
 1424              		.loc 1 476 0
 1425 06ae 012B     		cmp	r3, #1
 1426 06b0 0AD0     		beq	.L83
 479:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.scheduleBuf[i].type == CELLTYPE_RX
 1427              		.loc 1 479 0
 1428 06b2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1429 06b4 0F49     		ldr	r1, .L85
 1430 06b6 1346     		mov	r3, r2
 1431 06b8 DB00     		lsls	r3, r3, #3
 1432 06ba 1344     		add	r3, r3, r2
 1433 06bc 9B00     		lsls	r3, r3, #2
 1434 06be 0B44     		add	r3, r3, r1
 1435 06c0 0233     		adds	r3, r3, #2
 1436 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.scheduleBuf[i].type == CELLTYPE_RX
 1437              		.loc 1 478 0
 1438 06c4 022B     		cmp	r3, #2
 1439 06c6 0BD1     		bne	.L82
 1440              	.L83:
 480:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             )
 481:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 482:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****            schedule_removeActiveSlot(
 1441              		.loc 1 482 0
 1442 06c8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1443 06ca 0A49     		ldr	r1, .L85
 1444 06cc 1346     		mov	r3, r2
 1445 06ce DB00     		lsls	r3, r3, #3
 1446 06d0 1344     		add	r3, r3, r2
 1447 06d2 9B00     		lsls	r3, r3, #2
 1448 06d4 0B44     		add	r3, r3, r1
 1449 06d6 1B88     		ldrh	r3, [r3]
 1450 06d8 3968     		ldr	r1, [r7]
 1451 06da 1846     		mov	r0, r3
 1452 06dc FFF7FEFF 		bl	schedule_removeActiveSlot
 1453              	.L82:
 474:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 1454              		.loc 1 474 0 discriminator 2
 1455 06e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1456 06e2 0133     		adds	r3, r3, #1
 1457 06e4 FB73     		strb	r3, [r7, #15]
 1458              	.L81:
 474:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 1459              		.loc 1 474 0 is_stmt 0 discriminator 1
 1460 06e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1461 06e8 142B     		cmp	r3, #20
 1462 06ea C8D9     		bls	.L84
 483:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****               schedule_vars.scheduleBuf[i].slotOffset,
 484:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****               neighbor
 485:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****            );
 486:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 487:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 488:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1463              		.loc 1 488 0 is_stmt 1
 1464 06ec 00BF     		nop
 1465 06ee 1037     		adds	r7, r7, #16
 1466              		.cfi_def_cfa_offset 8
 1467 06f0 BD46     		mov	sp, r7
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 06f2 80BD     		pop	{r7, pc}
 1471              	.L86:
 1472              		.align	2
 1473              	.L85:
 1474 06f4 00000000 		.word	schedule_vars
 1475              		.cfi_endproc
 1476              	.LFE14:
 1478              		.align	1
 1479              		.global	schedule_removeAllAutonomousTxRxCellUnicast
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu softvfp
 1485              	schedule_removeAllAutonomousTxRxCellUnicast:
 1486              	.LFB15:
 489:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 490:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_removeAllAutonomousTxRxCellUnicast(void){
 1487              		.loc 1 490 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491 06f8 80B5     		push	{r7, lr}
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 7, -8
 1494              		.cfi_offset 14, -4
 1495 06fa 82B0     		sub	sp, sp, #8
 1496              		.cfi_def_cfa_offset 16
 1497 06fc 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
 491:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 492:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 493:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // remove all entries in schedule with previousHop address
 494:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++){
 1499              		.loc 1 494 0
 1500 06fe 0023     		movs	r3, #0
 1501 0700 FB71     		strb	r3, [r7, #7]
 1502 0702 36E0     		b	.L88
 1503              	.L90:
 495:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 496:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type          == CELLTYPE_TXRX &&
 1504              		.loc 1 496 0
 1505 0704 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1506 0706 2049     		ldr	r1, .L91
 1507 0708 1346     		mov	r3, r2
 1508 070a DB00     		lsls	r3, r3, #3
 1509 070c 1344     		add	r3, r3, r2
 1510 070e 9B00     		lsls	r3, r3, #2
 1511 0710 0B44     		add	r3, r3, r1
 1512 0712 0233     		adds	r3, r3, #2
 1513 0714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 495:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 1514              		.loc 1 495 0
 1515 0716 032B     		cmp	r3, #3
 1516 0718 28D1     		bne	.L89
 497:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 1517              		.loc 1 497 0
 1518 071a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1519 071c 1A49     		ldr	r1, .L91
 1520 071e 1346     		mov	r3, r2
 1521 0720 DB00     		lsls	r3, r3, #3
 1522 0722 1344     		add	r3, r3, r2
 1523 0724 9B00     		lsls	r3, r3, #2
 1524 0726 0B44     		add	r3, r3, r1
 1525 0728 0333     		adds	r3, r3, #3
 1526 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 1527              		.loc 1 496 0
 1528 072c 002B     		cmp	r3, #0
 1529 072e 1DD0     		beq	.L89
 498:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B
 1530              		.loc 1 498 0
 1531 0730 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1532 0732 1549     		ldr	r1, .L91
 1533 0734 1346     		mov	r3, r2
 1534 0736 DB00     		lsls	r3, r3, #3
 1535 0738 1344     		add	r3, r3, r2
 1536 073a 9B00     		lsls	r3, r3, #2
 1537 073c 0B44     		add	r3, r3, r1
 1538 073e 0533     		adds	r3, r3, #5
 1539 0740 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 1540              		.loc 1 497 0
 1541 0742 022B     		cmp	r3, #2
 1542 0744 12D1     		bne	.L89
 499:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 500:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****            schedule_removeActiveSlot(
 1543              		.loc 1 500 0
 1544 0746 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1545 0748 0F49     		ldr	r1, .L91
 1546 074a 1346     		mov	r3, r2
 1547 074c DB00     		lsls	r3, r3, #3
 1548 074e 1344     		add	r3, r3, r2
 1549 0750 9B00     		lsls	r3, r3, #2
 1550 0752 0B44     		add	r3, r3, r1
 1551 0754 1888     		ldrh	r0, [r3]
 501:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****               schedule_vars.scheduleBuf[i].slotOffset,
 502:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****               &(schedule_vars.scheduleBuf[i].neighbor)
 1552              		.loc 1 502 0
 1553 0756 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 500:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****               schedule_vars.scheduleBuf[i].slotOffset,
 1554              		.loc 1 500 0
 1555 0758 1346     		mov	r3, r2
 1556 075a DB00     		lsls	r3, r3, #3
 1557 075c 1344     		add	r3, r3, r2
 1558 075e 9B00     		lsls	r3, r3, #2
 1559 0760 094A     		ldr	r2, .L91
 1560 0762 1344     		add	r3, r3, r2
 1561 0764 0533     		adds	r3, r3, #5
 1562 0766 1946     		mov	r1, r3
 1563 0768 FFF7FEFF 		bl	schedule_removeActiveSlot
 1564              	.L89:
 494:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 1565              		.loc 1 494 0 discriminator 2
 1566 076c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1567 076e 0133     		adds	r3, r3, #1
 1568 0770 FB71     		strb	r3, [r7, #7]
 1569              	.L88:
 494:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (
 1570              		.loc 1 494 0 is_stmt 0 discriminator 1
 1571 0772 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1572 0774 142B     		cmp	r3, #20
 1573 0776 C5D9     		bls	.L90
 503:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****            );
 504:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 505:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 506:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     msf_setHashCollisionFlag(FALSE);
 1574              		.loc 1 506 0 is_stmt 1
 1575 0778 0020     		movs	r0, #0
 1576 077a FFF7FEFF 		bl	msf_setHashCollisionFlag
 507:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1577              		.loc 1 507 0
 1578 077e 00BF     		nop
 1579 0780 0837     		adds	r7, r7, #8
 1580              		.cfi_def_cfa_offset 8
 1581 0782 BD46     		mov	sp, r7
 1582              		.cfi_def_cfa_register 13
 1583              		@ sp needed
 1584 0784 80BD     		pop	{r7, pc}
 1585              	.L92:
 1586 0786 00BF     		.align	2
 1587              	.L91:
 1588 0788 00000000 		.word	schedule_vars
 1589              		.cfi_endproc
 1590              	.LFE15:
 1592              		.align	1
 1593              		.global	schedule_getNumberOfFreeEntries
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu softvfp
 1599              	schedule_getNumberOfFreeEntries:
 1600              	.LFB16:
 508:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 509:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** uint8_t schedule_getNumberOfFreeEntries(){
 1601              		.loc 1 509 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 8
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 078c 80B5     		push	{r7, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 078e 82B0     		sub	sp, sp, #8
 1610              		.cfi_def_cfa_offset 16
 1611 0790 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 510:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 511:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t counter;
 512:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 513:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 514:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 1613              		.loc 1 514 0
 1614 0792 FFF7FEFF 		bl	IntMasterDisable
 515:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 516:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     counter = 0;
 1615              		.loc 1 516 0
 1616 0796 0023     		movs	r3, #0
 1617 0798 BB71     		strb	r3, [r7, #6]
 517:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 1618              		.loc 1 517 0
 1619 079a 0023     		movs	r3, #0
 1620 079c FB71     		strb	r3, [r7, #7]
 1621 079e 10E0     		b	.L94
 1622              	.L96:
 518:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(schedule_vars.scheduleBuf[i].type == CELLTYPE_OFF){
 1623              		.loc 1 518 0
 1624 07a0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1625 07a2 0D49     		ldr	r1, .L98
 1626 07a4 1346     		mov	r3, r2
 1627 07a6 DB00     		lsls	r3, r3, #3
 1628 07a8 1344     		add	r3, r3, r2
 1629 07aa 9B00     		lsls	r3, r3, #2
 1630 07ac 0B44     		add	r3, r3, r1
 1631 07ae 0233     		adds	r3, r3, #2
 1632 07b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1633 07b2 002B     		cmp	r3, #0
 1634 07b4 02D1     		bne	.L95
 519:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             counter++;
 1635              		.loc 1 519 0
 1636 07b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1637 07b8 0133     		adds	r3, r3, #1
 1638 07ba BB71     		strb	r3, [r7, #6]
 1639              	.L95:
 517:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 1640              		.loc 1 517 0 discriminator 2
 1641 07bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1642 07be 0133     		adds	r3, r3, #1
 1643 07c0 FB71     		strb	r3, [r7, #7]
 1644              	.L94:
 517:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 1645              		.loc 1 517 0 is_stmt 0 discriminator 1
 1646 07c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 07c4 142B     		cmp	r3, #20
 1648 07c6 EBD9     		bls	.L96
 520:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 521:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****      }
 522:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 523:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****      ENABLE_INTERRUPTS();
 1649              		.loc 1 523 0 is_stmt 1
 1650 07c8 FFF7FEFF 		bl	IntMasterEnable
 524:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return counter;
 1651              		.loc 1 524 0
 1652 07cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 525:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1653              		.loc 1 525 0
 1654 07ce 1846     		mov	r0, r3
 1655 07d0 0837     		adds	r7, r7, #8
 1656              		.cfi_def_cfa_offset 8
 1657 07d2 BD46     		mov	sp, r7
 1658              		.cfi_def_cfa_register 13
 1659              		@ sp needed
 1660 07d4 80BD     		pop	{r7, pc}
 1661              	.L99:
 1662 07d6 00BF     		.align	2
 1663              	.L98:
 1664 07d8 00000000 		.word	schedule_vars
 1665              		.cfi_endproc
 1666              	.LFE16:
 1668              		.align	1
 1669              		.global	schedule_getNumberOfManagedTxCells
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu softvfp
 1675              	schedule_getNumberOfManagedTxCells:
 1676              	.LFB17:
 526:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 527:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** uint8_t schedule_getNumberOfManagedTxCells(open_addr_t* neighbor){
 1677              		.loc 1 527 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 16
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681 07dc 80B5     		push	{r7, lr}
 1682              		.cfi_def_cfa_offset 8
 1683              		.cfi_offset 7, -8
 1684              		.cfi_offset 14, -4
 1685 07de 84B0     		sub	sp, sp, #16
 1686              		.cfi_def_cfa_offset 24
 1687 07e0 00AF     		add	r7, sp, #0
 1688              		.cfi_def_cfa_register 7
 1689 07e2 7860     		str	r0, [r7, #4]
 528:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 529:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t counter;
 530:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 531:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 532:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 1690              		.loc 1 532 0
 1691 07e4 FFF7FEFF 		bl	IntMasterDisable
 533:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 534:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     counter = 0;
 1692              		.loc 1 534 0
 1693 07e8 0023     		movs	r3, #0
 1694 07ea BB73     		strb	r3, [r7, #14]
 535:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 1695              		.loc 1 535 0
 1696 07ec 0023     		movs	r3, #0
 1697 07ee FB73     		strb	r3, [r7, #15]
 1698 07f0 2DE0     		b	.L101
 1699              	.L103:
 536:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 537:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared == FALSE       &&
 1700              		.loc 1 537 0
 1701 07f2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1702 07f4 1B49     		ldr	r1, .L105
 1703 07f6 1346     		mov	r3, r2
 1704 07f8 DB00     		lsls	r3, r3, #3
 1705 07fa 1344     		add	r3, r3, r2
 1706 07fc 9B00     		lsls	r3, r3, #2
 1707 07fe 0B44     		add	r3, r3, r1
 1708 0800 0333     		adds	r3, r3, #3
 1709 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 0804 83F00103 		eor	r3, r3, #1
 1711 0808 DBB2     		uxtb	r3, r3
 536:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1712              		.loc 1 536 0
 1713 080a 002B     		cmp	r3, #0
 1714 080c 1CD0     		beq	.L102
 538:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type   == CELLTYPE_TX &&
 1715              		.loc 1 538 0
 1716 080e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1717 0810 1449     		ldr	r1, .L105
 1718 0812 1346     		mov	r3, r2
 1719 0814 DB00     		lsls	r3, r3, #3
 1720 0816 1344     		add	r3, r3, r2
 1721 0818 9B00     		lsls	r3, r3, #2
 1722 081a 0B44     		add	r3, r3, r1
 1723 081c 0233     		adds	r3, r3, #2
 1724 081e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 537:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type   == CELLTYPE_TX &&
 1725              		.loc 1 537 0
 1726 0820 012B     		cmp	r3, #1
 1727 0822 11D1     		bne	.L102
 539:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(&schedule_vars.scheduleBuf[i].neighbor, neighbor) == TRUE
 1728              		.loc 1 539 0
 1729 0824 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1730 0826 1346     		mov	r3, r2
 1731 0828 DB00     		lsls	r3, r3, #3
 1732 082a 1344     		add	r3, r3, r2
 1733 082c 9B00     		lsls	r3, r3, #2
 1734 082e 0D4A     		ldr	r2, .L105
 1735 0830 1344     		add	r3, r3, r2
 1736 0832 0533     		adds	r3, r3, #5
 1737 0834 7968     		ldr	r1, [r7, #4]
 1738 0836 1846     		mov	r0, r3
 1739 0838 FFF7FEFF 		bl	packetfunctions_sameAddress
 1740 083c 0346     		mov	r3, r0
 538:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type   == CELLTYPE_TX &&
 1741              		.loc 1 538 0
 1742 083e 002B     		cmp	r3, #0
 1743 0840 02D0     		beq	.L102
 540:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 541:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             counter++;
 1744              		.loc 1 541 0
 1745 0842 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1746 0844 0133     		adds	r3, r3, #1
 1747 0846 BB73     		strb	r3, [r7, #14]
 1748              	.L102:
 535:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1749              		.loc 1 535 0 discriminator 2
 1750 0848 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1751 084a 0133     		adds	r3, r3, #1
 1752 084c FB73     		strb	r3, [r7, #15]
 1753              	.L101:
 535:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1754              		.loc 1 535 0 is_stmt 0 discriminator 1
 1755 084e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1756 0850 142B     		cmp	r3, #20
 1757 0852 CED9     		bls	.L103
 542:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 543:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 544:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 545:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 1758              		.loc 1 545 0 is_stmt 1
 1759 0854 FFF7FEFF 		bl	IntMasterEnable
 546:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 547:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return counter;
 1760              		.loc 1 547 0
 1761 0858 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 548:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1762              		.loc 1 548 0
 1763 085a 1846     		mov	r0, r3
 1764 085c 1037     		adds	r7, r7, #16
 1765              		.cfi_def_cfa_offset 8
 1766 085e BD46     		mov	sp, r7
 1767              		.cfi_def_cfa_register 13
 1768              		@ sp needed
 1769 0860 80BD     		pop	{r7, pc}
 1770              	.L106:
 1771 0862 00BF     		.align	2
 1772              	.L105:
 1773 0864 00000000 		.word	schedule_vars
 1774              		.cfi_endproc
 1775              	.LFE17:
 1777              		.align	1
 1778              		.global	schedule_isNumTxWrapped
 1779              		.syntax unified
 1780              		.thumb
 1781              		.thumb_func
 1782              		.fpu softvfp
 1784              	schedule_isNumTxWrapped:
 1785              	.LFB18:
 549:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 550:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_isNumTxWrapped(open_addr_t* neighbor){
 1786              		.loc 1 550 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 16
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790 0868 80B5     		push	{r7, lr}
 1791              		.cfi_def_cfa_offset 8
 1792              		.cfi_offset 7, -8
 1793              		.cfi_offset 14, -4
 1794 086a 84B0     		sub	sp, sp, #16
 1795              		.cfi_def_cfa_offset 24
 1796 086c 00AF     		add	r7, sp, #0
 1797              		.cfi_def_cfa_register 7
 1798 086e 7860     		str	r0, [r7, #4]
 551:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 552:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     bool    returnVal;
 553:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 554:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 555:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 1799              		.loc 1 555 0
 1800 0870 FFF7FEFF 		bl	IntMasterDisable
 556:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 557:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     returnVal = FALSE;
 1801              		.loc 1 557 0
 1802 0874 0023     		movs	r3, #0
 1803 0876 BB73     		strb	r3, [r7, #14]
 558:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++){
 1804              		.loc 1 558 0
 1805 0878 0023     		movs	r3, #0
 1806 087a FB73     		strb	r3, [r7, #15]
 1807 087c 23E0     		b	.L108
 1808              	.L112:
 559:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 560:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(&schedule_vars.scheduleBuf[i].neighbor, neighbor) == TRUE
 1809              		.loc 1 560 0
 1810 087e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1811 0880 1346     		mov	r3, r2
 1812 0882 DB00     		lsls	r3, r3, #3
 1813 0884 1344     		add	r3, r3, r2
 1814 0886 9B00     		lsls	r3, r3, #2
 1815 0888 144A     		ldr	r2, .L113
 1816 088a 1344     		add	r3, r3, r2
 1817 088c 0533     		adds	r3, r3, #5
 1818 088e 7968     		ldr	r1, [r7, #4]
 1819 0890 1846     		mov	r0, r3
 1820 0892 FFF7FEFF 		bl	packetfunctions_sameAddress
 1821 0896 0346     		mov	r3, r0
 559:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1822              		.loc 1 559 0
 1823 0898 002B     		cmp	r3, #0
 1824 089a 11D0     		beq	.L109
 561:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 562:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.scheduleBuf[i].numTx>0xFF/2){
 1825              		.loc 1 562 0
 1826 089c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1827 089e 0F49     		ldr	r1, .L113
 1828 08a0 1346     		mov	r3, r2
 1829 08a2 DB00     		lsls	r3, r3, #3
 1830 08a4 1344     		add	r3, r3, r2
 1831 08a6 9B00     		lsls	r3, r3, #2
 1832 08a8 0B44     		add	r3, r3, r1
 1833 08aa 1733     		adds	r3, r3, #23
 1834 08ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 08ae 5BB2     		sxtb	r3, r3
 1836 08b0 002B     		cmp	r3, #0
 1837 08b2 01DA     		bge	.L110
 563:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 returnVal = TRUE;
 1838              		.loc 1 563 0
 1839 08b4 0123     		movs	r3, #1
 1840 08b6 BB73     		strb	r3, [r7, #14]
 1841              	.L110:
 564:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 565:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 1842              		.loc 1 565 0
 1843 08b8 FFF7FEFF 		bl	IntMasterEnable
 566:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return returnVal;
 1844              		.loc 1 566 0
 1845 08bc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1846 08be 08E0     		b	.L111
 1847              	.L109:
 558:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1848              		.loc 1 558 0 discriminator 2
 1849 08c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1850 08c2 0133     		adds	r3, r3, #1
 1851 08c4 FB73     		strb	r3, [r7, #15]
 1852              	.L108:
 558:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1853              		.loc 1 558 0 is_stmt 0 discriminator 1
 1854 08c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1855 08c8 142B     		cmp	r3, #20
 1856 08ca D8D9     		bls	.L112
 567:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 568:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 569:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 1857              		.loc 1 569 0 is_stmt 1
 1858 08cc FFF7FEFF 		bl	IntMasterEnable
 570:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return returnVal;
 1859              		.loc 1 570 0
 1860 08d0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1861              	.L111:
 571:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 572:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 1862              		.loc 1 572 0
 1863 08d2 1846     		mov	r0, r3
 1864 08d4 1037     		adds	r7, r7, #16
 1865              		.cfi_def_cfa_offset 8
 1866 08d6 BD46     		mov	sp, r7
 1867              		.cfi_def_cfa_register 13
 1868              		@ sp needed
 1869 08d8 80BD     		pop	{r7, pc}
 1870              	.L114:
 1871 08da 00BF     		.align	2
 1872              	.L113:
 1873 08dc 00000000 		.word	schedule_vars
 1874              		.cfi_endproc
 1875              	.LFE18:
 1877              		.align	1
 1878              		.global	schedule_getCellsToBeRelocated
 1879              		.syntax unified
 1880              		.thumb
 1881              		.thumb_func
 1882              		.fpu softvfp
 1884              	schedule_getCellsToBeRelocated:
 1885              	.LFB19:
 573:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 574:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_getCellsToBeRelocated(open_addr_t* neighbor, cellInfo_ht* celllist){
 1886              		.loc 1 574 0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 16
 1889              		@ frame_needed = 1, uses_anonymous_args = 0
 1890 08e0 80B5     		push	{r7, lr}
 1891              		.cfi_def_cfa_offset 8
 1892              		.cfi_offset 7, -8
 1893              		.cfi_offset 14, -4
 1894 08e2 84B0     		sub	sp, sp, #16
 1895              		.cfi_def_cfa_offset 24
 1896 08e4 00AF     		add	r7, sp, #0
 1897              		.cfi_def_cfa_register 7
 1898 08e6 7860     		str	r0, [r7, #4]
 1899 08e8 3960     		str	r1, [r7]
 575:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t     i;
 576:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 577:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint16_t    highestPDR;
 578:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint16_t    cellPDR;
 579:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 580:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 581:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 1900              		.loc 1 581 0
 1901 08ea FFF7FEFF 		bl	IntMasterDisable
 582:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 583:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     highestPDR = 0;
 1902              		.loc 1 583 0
 1903 08ee 0023     		movs	r3, #0
 1904 08f0 BB81     		strh	r3, [r7, #12]	@ movhi
 584:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // found the cell with higest PDR
 585:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 1905              		.loc 1 585 0
 1906 08f2 0023     		movs	r3, #0
 1907 08f4 FB73     		strb	r3, [r7, #15]
 1908 08f6 3BE0     		b	.L116
 1909              	.L118:
 586:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 587:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(&schedule_vars.scheduleBuf[i].neighbor, neighbor) == TRUE
 1910              		.loc 1 587 0
 1911 08f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1912 08fa 1346     		mov	r3, r2
 1913 08fc DB00     		lsls	r3, r3, #3
 1914 08fe 1344     		add	r3, r3, r2
 1915 0900 9B00     		lsls	r3, r3, #2
 1916 0902 544A     		ldr	r2, .L124
 1917 0904 1344     		add	r3, r3, r2
 1918 0906 0533     		adds	r3, r3, #5
 1919 0908 7968     		ldr	r1, [r7, #4]
 1920 090a 1846     		mov	r0, r3
 1921 090c FFF7FEFF 		bl	packetfunctions_sameAddress
 1922 0910 0346     		mov	r3, r0
 586:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1923              		.loc 1 586 0
 1924 0912 002B     		cmp	r3, #0
 1925 0914 29D0     		beq	.L117
 588:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 589:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.scheduleBuf[i].numTx>0){
 1926              		.loc 1 589 0
 1927 0916 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1928 0918 4E49     		ldr	r1, .L124
 1929 091a 1346     		mov	r3, r2
 1930 091c DB00     		lsls	r3, r3, #3
 1931 091e 1344     		add	r3, r3, r2
 1932 0920 9B00     		lsls	r3, r3, #2
 1933 0922 0B44     		add	r3, r3, r1
 1934 0924 1733     		adds	r3, r3, #23
 1935 0926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1936 0928 002B     		cmp	r3, #0
 1937 092a 1ED0     		beq	.L117
 590:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 cellPDR = 100*schedule_vars.scheduleBuf[i].numTxACK/schedule_vars.scheduleBuf[i].nu
 1938              		.loc 1 590 0
 1939 092c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1940 092e 4949     		ldr	r1, .L124
 1941 0930 1346     		mov	r3, r2
 1942 0932 DB00     		lsls	r3, r3, #3
 1943 0934 1344     		add	r3, r3, r2
 1944 0936 9B00     		lsls	r3, r3, #2
 1945 0938 0B44     		add	r3, r3, r1
 1946 093a 1833     		adds	r3, r3, #24
 1947 093c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1948 093e 1A46     		mov	r2, r3
 1949 0940 6423     		movs	r3, #100
 1950 0942 03FB02F1 		mul	r1, r3, r2
 1951 0946 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1952 0948 4248     		ldr	r0, .L124
 1953 094a 1346     		mov	r3, r2
 1954 094c DB00     		lsls	r3, r3, #3
 1955 094e 1344     		add	r3, r3, r2
 1956 0950 9B00     		lsls	r3, r3, #2
 1957 0952 0344     		add	r3, r3, r0
 1958 0954 1733     		adds	r3, r3, #23
 1959 0956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1960 0958 91FBF3F3 		sdiv	r3, r1, r3
 1961 095c 7B81     		strh	r3, [r7, #10]	@ movhi
 591:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 if (cellPDR > highestPDR){
 1962              		.loc 1 591 0
 1963 095e 7A89     		ldrh	r2, [r7, #10]
 1964 0960 BB89     		ldrh	r3, [r7, #12]
 1965 0962 9A42     		cmp	r2, r3
 1966 0964 01D9     		bls	.L117
 592:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     highestPDR = cellPDR;
 1967              		.loc 1 592 0
 1968 0966 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1969 0968 BB81     		strh	r3, [r7, #12]	@ movhi
 1970              	.L117:
 585:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1971              		.loc 1 585 0 discriminator 2
 1972 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1973 096c 0133     		adds	r3, r3, #1
 1974 096e FB73     		strb	r3, [r7, #15]
 1975              	.L116:
 585:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 1976              		.loc 1 585 0 is_stmt 0 discriminator 1
 1977 0970 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1978 0972 142B     		cmp	r3, #20
 1979 0974 C0D9     		bls	.L118
 593:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 }
 594:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 595:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 596:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 597:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 598:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (highestPDR==0){
 1980              		.loc 1 598 0 is_stmt 1
 1981 0976 BB89     		ldrh	r3, [r7, #12]
 1982 0978 002B     		cmp	r3, #0
 1983 097a 03D1     		bne	.L119
 599:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         // no cell to relocate
 600:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ENABLE_INTERRUPTS();
 1984              		.loc 1 600 0
 1985 097c FFF7FEFF 		bl	IntMasterEnable
 601:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         return FALSE;
 1986              		.loc 1 601 0
 1987 0980 0023     		movs	r3, #0
 1988 0982 62E0     		b	.L120
 1989              	.L119:
 602:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 603:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 604:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 1990              		.loc 1 604 0
 1991 0984 0023     		movs	r3, #0
 1992 0986 FB73     		strb	r3, [r7, #15]
 1993 0988 59E0     		b	.L121
 1994              	.L123:
 605:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 606:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(&schedule_vars.scheduleBuf[i].neighbor, neighbor) == TRUE
 1995              		.loc 1 606 0
 1996 098a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1997 098c 1346     		mov	r3, r2
 1998 098e DB00     		lsls	r3, r3, #3
 1999 0990 1344     		add	r3, r3, r2
 2000 0992 9B00     		lsls	r3, r3, #2
 2001 0994 2F4A     		ldr	r2, .L124
 2002 0996 1344     		add	r3, r3, r2
 2003 0998 0533     		adds	r3, r3, #5
 2004 099a 7968     		ldr	r1, [r7, #4]
 2005 099c 1846     		mov	r0, r3
 2006 099e FFF7FEFF 		bl	packetfunctions_sameAddress
 2007 09a2 0346     		mov	r3, r0
 605:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2008              		.loc 1 605 0
 2009 09a4 002B     		cmp	r3, #0
 2010 09a6 47D0     		beq	.L122
 607:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 608:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.scheduleBuf[i].numTx>0){
 2011              		.loc 1 608 0
 2012 09a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2013 09aa 2A49     		ldr	r1, .L124
 2014 09ac 1346     		mov	r3, r2
 2015 09ae DB00     		lsls	r3, r3, #3
 2016 09b0 1344     		add	r3, r3, r2
 2017 09b2 9B00     		lsls	r3, r3, #2
 2018 09b4 0B44     		add	r3, r3, r1
 2019 09b6 1733     		adds	r3, r3, #23
 2020 09b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 09ba 002B     		cmp	r3, #0
 2022 09bc 3CD0     		beq	.L122
 609:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 cellPDR = 100*schedule_vars.scheduleBuf[i].numTxACK/schedule_vars.scheduleBuf[i].nu
 2023              		.loc 1 609 0
 2024 09be FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2025 09c0 2449     		ldr	r1, .L124
 2026 09c2 1346     		mov	r3, r2
 2027 09c4 DB00     		lsls	r3, r3, #3
 2028 09c6 1344     		add	r3, r3, r2
 2029 09c8 9B00     		lsls	r3, r3, #2
 2030 09ca 0B44     		add	r3, r3, r1
 2031 09cc 1833     		adds	r3, r3, #24
 2032 09ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2033 09d0 1A46     		mov	r2, r3
 2034 09d2 6423     		movs	r3, #100
 2035 09d4 03FB02F1 		mul	r1, r3, r2
 2036 09d8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2037 09da 1E48     		ldr	r0, .L124
 2038 09dc 1346     		mov	r3, r2
 2039 09de DB00     		lsls	r3, r3, #3
 2040 09e0 1344     		add	r3, r3, r2
 2041 09e2 9B00     		lsls	r3, r3, #2
 2042 09e4 0344     		add	r3, r3, r0
 2043 09e6 1733     		adds	r3, r3, #23
 2044 09e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2045 09ea 91FBF3F3 		sdiv	r3, r1, r3
 2046 09ee 7B81     		strh	r3, [r7, #10]	@ movhi
 610:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 if (highestPDR-cellPDR > RELOCATE_PDRTHRES){
 2047              		.loc 1 610 0
 2048 09f0 BA89     		ldrh	r2, [r7, #12]
 2049 09f2 7B89     		ldrh	r3, [r7, #10]
 2050 09f4 D31A     		subs	r3, r2, r3
 2051 09f6 322B     		cmp	r3, #50
 2052 09f8 1EDD     		ble	.L122
 611:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     celllist->isUsed            = TRUE;
 2053              		.loc 1 611 0
 2054 09fa 3B68     		ldr	r3, [r7]
 2055 09fc 0122     		movs	r2, #1
 2056 09fe 1A70     		strb	r2, [r3]
 612:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     celllist->slotoffset        = schedule_vars.scheduleBuf[i].slotOffset;
 2057              		.loc 1 612 0
 2058 0a00 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2059 0a02 1449     		ldr	r1, .L124
 2060 0a04 1346     		mov	r3, r2
 2061 0a06 DB00     		lsls	r3, r3, #3
 2062 0a08 1344     		add	r3, r3, r2
 2063 0a0a 9B00     		lsls	r3, r3, #2
 2064 0a0c 0B44     		add	r3, r3, r1
 2065 0a0e 1A88     		ldrh	r2, [r3]
 2066 0a10 3B68     		ldr	r3, [r7]
 2067 0a12 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 613:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     celllist->channeloffset     = schedule_vars.scheduleBuf[i].channelOffset;
 2068              		.loc 1 613 0
 2069 0a16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2070 0a18 0E49     		ldr	r1, .L124
 2071 0a1a 1346     		mov	r3, r2
 2072 0a1c DB00     		lsls	r3, r3, #3
 2073 0a1e 1344     		add	r3, r3, r2
 2074 0a20 9B00     		lsls	r3, r3, #2
 2075 0a22 0B44     		add	r3, r3, r1
 2076 0a24 0433     		adds	r3, r3, #4
 2077 0a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2078 0a28 9AB2     		uxth	r2, r3
 2079 0a2a 3B68     		ldr	r3, [r7]
 2080 0a2c A3F80320 		strh	r2, [r3, #3]	@ unaligned
 614:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     ENABLE_INTERRUPTS();
 2081              		.loc 1 614 0
 2082 0a30 FFF7FEFF 		bl	IntMasterEnable
 615:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     return TRUE;
 2083              		.loc 1 615 0
 2084 0a34 0123     		movs	r3, #1
 2085 0a36 08E0     		b	.L120
 2086              	.L122:
 604:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2087              		.loc 1 604 0 discriminator 2
 2088 0a38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2089 0a3a 0133     		adds	r3, r3, #1
 2090 0a3c FB73     		strb	r3, [r7, #15]
 2091              	.L121:
 604:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2092              		.loc 1 604 0 is_stmt 0 discriminator 1
 2093 0a3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2094 0a40 142B     		cmp	r3, #20
 2095 0a42 A2D9     		bls	.L123
 616:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 }
 617:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 618:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 619:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 620:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 621:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2096              		.loc 1 621 0 is_stmt 1
 2097 0a44 FFF7FEFF 		bl	IntMasterEnable
 622:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 623:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return FALSE;
 2098              		.loc 1 623 0
 2099 0a48 0023     		movs	r3, #0
 2100              	.L120:
 624:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2101              		.loc 1 624 0
 2102 0a4a 1846     		mov	r0, r3
 2103 0a4c 1037     		adds	r7, r7, #16
 2104              		.cfi_def_cfa_offset 8
 2105 0a4e BD46     		mov	sp, r7
 2106              		.cfi_def_cfa_register 13
 2107              		@ sp needed
 2108 0a50 80BD     		pop	{r7, pc}
 2109              	.L125:
 2110 0a52 00BF     		.align	2
 2111              	.L124:
 2112 0a54 00000000 		.word	schedule_vars
 2113              		.cfi_endproc
 2114              	.LFE19:
 2116              		.align	1
 2117              		.global	schedule_hasAutonomousTxRxCellUnicast
 2118              		.syntax unified
 2119              		.thumb
 2120              		.thumb_func
 2121              		.fpu softvfp
 2123              	schedule_hasAutonomousTxRxCellUnicast:
 2124              	.LFB20:
 625:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 626:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_hasAutonomousTxRxCellUnicast(open_addr_t* neighbor){
 2125              		.loc 1 626 0
 2126              		.cfi_startproc
 2127              		@ args = 0, pretend = 0, frame = 16
 2128              		@ frame_needed = 1, uses_anonymous_args = 0
 2129 0a58 80B5     		push	{r7, lr}
 2130              		.cfi_def_cfa_offset 8
 2131              		.cfi_offset 7, -8
 2132              		.cfi_offset 14, -4
 2133 0a5a 84B0     		sub	sp, sp, #16
 2134              		.cfi_def_cfa_offset 24
 2135 0a5c 00AF     		add	r7, sp, #0
 2136              		.cfi_def_cfa_register 7
 2137 0a5e 7860     		str	r0, [r7, #4]
 627:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 628:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 629:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 630:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2138              		.loc 1 630 0
 2139 0a60 FFF7FEFF 		bl	IntMasterDisable
 631:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 632:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 2140              		.loc 1 632 0
 2141 0a64 0023     		movs	r3, #0
 2142 0a66 FB73     		strb	r3, [r7, #15]
 2143 0a68 36E0     		b	.L127
 2144              	.L130:
 633:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 634:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type          == CELLTYPE_TXRX &&
 2145              		.loc 1 634 0
 2146 0a6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2147 0a6c 1F49     		ldr	r1, .L131
 2148 0a6e 1346     		mov	r3, r2
 2149 0a70 DB00     		lsls	r3, r3, #3
 2150 0a72 1344     		add	r3, r3, r2
 2151 0a74 9B00     		lsls	r3, r3, #2
 2152 0a76 0B44     		add	r3, r3, r1
 2153 0a78 0233     		adds	r3, r3, #2
 2154 0a7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 633:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2155              		.loc 1 633 0
 2156 0a7c 032B     		cmp	r3, #3
 2157 0a7e 28D1     		bne	.L128
 635:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2158              		.loc 1 635 0
 2159 0a80 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2160 0a82 1A49     		ldr	r1, .L131
 2161 0a84 1346     		mov	r3, r2
 2162 0a86 DB00     		lsls	r3, r3, #3
 2163 0a88 1344     		add	r3, r3, r2
 2164 0a8a 9B00     		lsls	r3, r3, #2
 2165 0a8c 0B44     		add	r3, r3, r1
 2166 0a8e 0333     		adds	r3, r3, #3
 2167 0a90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 634:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2168              		.loc 1 634 0
 2169 0a92 002B     		cmp	r3, #0
 2170 0a94 1DD0     		beq	.L128
 636:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B      &&
 2171              		.loc 1 636 0
 2172 0a96 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2173 0a98 1449     		ldr	r1, .L131
 2174 0a9a 1346     		mov	r3, r2
 2175 0a9c DB00     		lsls	r3, r3, #3
 2176 0a9e 1344     		add	r3, r3, r2
 2177 0aa0 9B00     		lsls	r3, r3, #2
 2178 0aa2 0B44     		add	r3, r3, r1
 2179 0aa4 0533     		adds	r3, r3, #5
 2180 0aa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2181              		.loc 1 635 0
 2182 0aa8 022B     		cmp	r3, #2
 2183 0aaa 12D1     		bne	.L128
 637:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(neighbor,&schedule_vars.scheduleBuf[i].neighbor)
 2184              		.loc 1 637 0
 2185 0aac FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2186 0aae 1346     		mov	r3, r2
 2187 0ab0 DB00     		lsls	r3, r3, #3
 2188 0ab2 1344     		add	r3, r3, r2
 2189 0ab4 9B00     		lsls	r3, r3, #2
 2190 0ab6 0D4A     		ldr	r2, .L131
 2191 0ab8 1344     		add	r3, r3, r2
 2192 0aba 0533     		adds	r3, r3, #5
 2193 0abc 1946     		mov	r1, r3
 2194 0abe 7868     		ldr	r0, [r7, #4]
 2195 0ac0 FFF7FEFF 		bl	packetfunctions_sameAddress
 2196 0ac4 0346     		mov	r3, r0
 636:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B      &&
 2197              		.loc 1 636 0
 2198 0ac6 002B     		cmp	r3, #0
 2199 0ac8 03D0     		beq	.L128
 638:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 639:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 2200              		.loc 1 639 0
 2201 0aca FFF7FEFF 		bl	IntMasterEnable
 640:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return TRUE;
 2202              		.loc 1 640 0
 2203 0ace 0123     		movs	r3, #1
 2204 0ad0 08E0     		b	.L129
 2205              	.L128:
 632:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2206              		.loc 1 632 0 discriminator 2
 2207 0ad2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2208 0ad4 0133     		adds	r3, r3, #1
 2209 0ad6 FB73     		strb	r3, [r7, #15]
 2210              	.L127:
 632:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2211              		.loc 1 632 0 is_stmt 0 discriminator 1
 2212 0ad8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2213 0ada 142B     		cmp	r3, #20
 2214 0adc C5D9     		bls	.L130
 641:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 642:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 643:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 644:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2215              		.loc 1 644 0 is_stmt 1
 2216 0ade FFF7FEFF 		bl	IntMasterEnable
 645:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return FALSE;
 2217              		.loc 1 645 0
 2218 0ae2 0023     		movs	r3, #0
 2219              	.L129:
 646:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2220              		.loc 1 646 0
 2221 0ae4 1846     		mov	r0, r3
 2222 0ae6 1037     		adds	r7, r7, #16
 2223              		.cfi_def_cfa_offset 8
 2224 0ae8 BD46     		mov	sp, r7
 2225              		.cfi_def_cfa_register 13
 2226              		@ sp needed
 2227 0aea 80BD     		pop	{r7, pc}
 2228              	.L132:
 2229              		.align	2
 2230              	.L131:
 2231 0aec 00000000 		.word	schedule_vars
 2232              		.cfi_endproc
 2233              	.LFE20:
 2235              		.align	1
 2236              		.global	schedule_getAutonomousTxRxCellUnicastNeighbor
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu softvfp
 2242              	schedule_getAutonomousTxRxCellUnicastNeighbor:
 2243              	.LFB21:
 647:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 648:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_getAutonomousTxRxCellUnicastNeighbor(open_addr_t* neighbor){
 2244              		.loc 1 648 0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 16
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248 0af0 80B5     		push	{r7, lr}
 2249              		.cfi_def_cfa_offset 8
 2250              		.cfi_offset 7, -8
 2251              		.cfi_offset 14, -4
 2252 0af2 84B0     		sub	sp, sp, #16
 2253              		.cfi_def_cfa_offset 24
 2254 0af4 00AF     		add	r7, sp, #0
 2255              		.cfi_def_cfa_register 7
 2256 0af6 7860     		str	r0, [r7, #4]
 649:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 650:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 651:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 652:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2257              		.loc 1 652 0
 2258 0af8 FFF7FEFF 		bl	IntMasterDisable
 653:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 654:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 2259              		.loc 1 654 0
 2260 0afc 0023     		movs	r3, #0
 2261 0afe FB73     		strb	r3, [r7, #15]
 2262 0b00 43E0     		b	.L134
 2263              	.L137:
 655:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 656:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type          == CELLTYPE_TXRX &&
 2264              		.loc 1 656 0
 2265 0b02 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2266 0b04 2649     		ldr	r1, .L138
 2267 0b06 1346     		mov	r3, r2
 2268 0b08 DB00     		lsls	r3, r3, #3
 2269 0b0a 1344     		add	r3, r3, r2
 2270 0b0c 9B00     		lsls	r3, r3, #2
 2271 0b0e 0B44     		add	r3, r3, r1
 2272 0b10 0233     		adds	r3, r3, #2
 2273 0b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2274              		.loc 1 655 0
 2275 0b14 032B     		cmp	r3, #3
 2276 0b16 35D1     		bne	.L135
 657:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2277              		.loc 1 657 0
 2278 0b18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2279 0b1a 2149     		ldr	r1, .L138
 2280 0b1c 1346     		mov	r3, r2
 2281 0b1e DB00     		lsls	r3, r3, #3
 2282 0b20 1344     		add	r3, r3, r2
 2283 0b22 9B00     		lsls	r3, r3, #2
 2284 0b24 0B44     		add	r3, r3, r1
 2285 0b26 0333     		adds	r3, r3, #3
 2286 0b28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2287              		.loc 1 656 0
 2288 0b2a 002B     		cmp	r3, #0
 2289 0b2c 2AD0     		beq	.L135
 658:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B      &&
 2290              		.loc 1 658 0
 2291 0b2e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2292 0b30 1B49     		ldr	r1, .L138
 2293 0b32 1346     		mov	r3, r2
 2294 0b34 DB00     		lsls	r3, r3, #3
 2295 0b36 1344     		add	r3, r3, r2
 2296 0b38 9B00     		lsls	r3, r3, #2
 2297 0b3a 0B44     		add	r3, r3, r1
 2298 0b3c 0533     		adds	r3, r3, #5
 2299 0b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2300              		.loc 1 657 0
 2301 0b40 022B     		cmp	r3, #2
 2302 0b42 1FD1     		bne	.L135
 659:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(neighbor,&schedule_vars.scheduleBuf[i].neighbor)
 2303              		.loc 1 659 0
 2304 0b44 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2305 0b46 1346     		mov	r3, r2
 2306 0b48 DB00     		lsls	r3, r3, #3
 2307 0b4a 1344     		add	r3, r3, r2
 2308 0b4c 9B00     		lsls	r3, r3, #2
 2309 0b4e 144A     		ldr	r2, .L138
 2310 0b50 1344     		add	r3, r3, r2
 2311 0b52 0533     		adds	r3, r3, #5
 2312 0b54 1946     		mov	r1, r3
 2313 0b56 7868     		ldr	r0, [r7, #4]
 2314 0b58 FFF7FEFF 		bl	packetfunctions_sameAddress
 2315 0b5c 0346     		mov	r3, r0
 658:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B      &&
 2316              		.loc 1 658 0
 2317 0b5e 002B     		cmp	r3, #0
 2318 0b60 10D0     		beq	.L135
 660:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 661:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             memcpy(neighbor, &schedule_vars.scheduleBuf[i].neighbor, sizeof(open_addr_t));
 2319              		.loc 1 661 0
 2320 0b62 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2321 0b64 1346     		mov	r3, r2
 2322 0b66 DB00     		lsls	r3, r3, #3
 2323 0b68 1344     		add	r3, r3, r2
 2324 0b6a 9B00     		lsls	r3, r3, #2
 2325 0b6c 0C4A     		ldr	r2, .L138
 2326 0b6e 1344     		add	r3, r3, r2
 2327 0b70 0533     		adds	r3, r3, #5
 2328 0b72 1122     		movs	r2, #17
 2329 0b74 1946     		mov	r1, r3
 2330 0b76 7868     		ldr	r0, [r7, #4]
 2331 0b78 FFF7FEFF 		bl	memcpy
 662:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 2332              		.loc 1 662 0
 2333 0b7c FFF7FEFF 		bl	IntMasterEnable
 663:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return TRUE;
 2334              		.loc 1 663 0
 2335 0b80 0123     		movs	r3, #1
 2336 0b82 08E0     		b	.L136
 2337              	.L135:
 654:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2338              		.loc 1 654 0 discriminator 2
 2339 0b84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2340 0b86 0133     		adds	r3, r3, #1
 2341 0b88 FB73     		strb	r3, [r7, #15]
 2342              	.L134:
 654:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2343              		.loc 1 654 0 is_stmt 0 discriminator 1
 2344 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2345 0b8c 142B     		cmp	r3, #20
 2346 0b8e B8D9     		bls	.L137
 664:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 665:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 666:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 667:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2347              		.loc 1 667 0 is_stmt 1
 2348 0b90 FFF7FEFF 		bl	IntMasterEnable
 668:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return FALSE;
 2349              		.loc 1 668 0
 2350 0b94 0023     		movs	r3, #0
 2351              	.L136:
 669:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2352              		.loc 1 669 0
 2353 0b96 1846     		mov	r0, r3
 2354 0b98 1037     		adds	r7, r7, #16
 2355              		.cfi_def_cfa_offset 8
 2356 0b9a BD46     		mov	sp, r7
 2357              		.cfi_def_cfa_register 13
 2358              		@ sp needed
 2359 0b9c 80BD     		pop	{r7, pc}
 2360              	.L139:
 2361 0b9e 00BF     		.align	2
 2362              	.L138:
 2363 0ba0 00000000 		.word	schedule_vars
 2364              		.cfi_endproc
 2365              	.LFE21:
 2367              		.align	1
 2368              		.global	schedule_hasManagedTxCellToNeighbor
 2369              		.syntax unified
 2370              		.thumb
 2371              		.thumb_func
 2372              		.fpu softvfp
 2374              	schedule_hasManagedTxCellToNeighbor:
 2375              	.LFB22:
 670:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 671:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_hasManagedTxCellToNeighbor(open_addr_t* neighbor){
 2376              		.loc 1 671 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 16
 2379              		@ frame_needed = 1, uses_anonymous_args = 0
 2380 0ba4 80B5     		push	{r7, lr}
 2381              		.cfi_def_cfa_offset 8
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
 2384 0ba6 84B0     		sub	sp, sp, #16
 2385              		.cfi_def_cfa_offset 24
 2386 0ba8 00AF     		add	r7, sp, #0
 2387              		.cfi_def_cfa_register 7
 2388 0baa 7860     		str	r0, [r7, #4]
 672:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 673:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 674:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 675:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2389              		.loc 1 675 0
 2390 0bac FFF7FEFF 		bl	IntMasterDisable
 676:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 677:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 2391              		.loc 1 677 0
 2392 0bb0 0023     		movs	r3, #0
 2393 0bb2 FB73     		strb	r3, [r7, #15]
 2394 0bb4 39E0     		b	.L141
 2395              	.L144:
 678:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 679:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared == FALSE &&
 2396              		.loc 1 679 0
 2397 0bb6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2398 0bb8 2149     		ldr	r1, .L145
 2399 0bba 1346     		mov	r3, r2
 2400 0bbc DB00     		lsls	r3, r3, #3
 2401 0bbe 1344     		add	r3, r3, r2
 2402 0bc0 9B00     		lsls	r3, r3, #2
 2403 0bc2 0B44     		add	r3, r3, r1
 2404 0bc4 0333     		adds	r3, r3, #3
 2405 0bc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2406 0bc8 83F00103 		eor	r3, r3, #1
 2407 0bcc DBB2     		uxtb	r3, r3
 678:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2408              		.loc 1 678 0
 2409 0bce 002B     		cmp	r3, #0
 2410 0bd0 28D0     		beq	.L142
 680:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type   == CELLTYPE_TX &&
 2411              		.loc 1 680 0
 2412 0bd2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2413 0bd4 1A49     		ldr	r1, .L145
 2414 0bd6 1346     		mov	r3, r2
 2415 0bd8 DB00     		lsls	r3, r3, #3
 2416 0bda 1344     		add	r3, r3, r2
 2417 0bdc 9B00     		lsls	r3, r3, #2
 2418 0bde 0B44     		add	r3, r3, r1
 2419 0be0 0233     		adds	r3, r3, #2
 2420 0be2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type   == CELLTYPE_TX &&
 2421              		.loc 1 679 0
 2422 0be4 012B     		cmp	r3, #1
 2423 0be6 1DD1     		bne	.L142
 681:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B &&
 2424              		.loc 1 681 0
 2425 0be8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2426 0bea 1549     		ldr	r1, .L145
 2427 0bec 1346     		mov	r3, r2
 2428 0bee DB00     		lsls	r3, r3, #3
 2429 0bf0 1344     		add	r3, r3, r2
 2430 0bf2 9B00     		lsls	r3, r3, #2
 2431 0bf4 0B44     		add	r3, r3, r1
 2432 0bf6 0533     		adds	r3, r3, #5
 2433 0bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type   == CELLTYPE_TX &&
 2434              		.loc 1 680 0
 2435 0bfa 022B     		cmp	r3, #2
 2436 0bfc 12D1     		bne	.L142
 682:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(neighbor,&schedule_vars.scheduleBuf[i].neighbor)
 2437              		.loc 1 682 0
 2438 0bfe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2439 0c00 1346     		mov	r3, r2
 2440 0c02 DB00     		lsls	r3, r3, #3
 2441 0c04 1344     		add	r3, r3, r2
 2442 0c06 9B00     		lsls	r3, r3, #2
 2443 0c08 0D4A     		ldr	r2, .L145
 2444 0c0a 1344     		add	r3, r3, r2
 2445 0c0c 0533     		adds	r3, r3, #5
 2446 0c0e 1946     		mov	r1, r3
 2447 0c10 7868     		ldr	r0, [r7, #4]
 2448 0c12 FFF7FEFF 		bl	packetfunctions_sameAddress
 2449 0c16 0346     		mov	r3, r0
 681:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B &&
 2450              		.loc 1 681 0
 2451 0c18 002B     		cmp	r3, #0
 2452 0c1a 03D0     		beq	.L142
 683:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 684:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 2453              		.loc 1 684 0
 2454 0c1c FFF7FEFF 		bl	IntMasterEnable
 685:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return TRUE;
 2455              		.loc 1 685 0
 2456 0c20 0123     		movs	r3, #1
 2457 0c22 08E0     		b	.L143
 2458              	.L142:
 677:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2459              		.loc 1 677 0 discriminator 2
 2460 0c24 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2461 0c26 0133     		adds	r3, r3, #1
 2462 0c28 FB73     		strb	r3, [r7, #15]
 2463              	.L141:
 677:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2464              		.loc 1 677 0 is_stmt 0 discriminator 1
 2465 0c2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2466 0c2c 142B     		cmp	r3, #20
 2467 0c2e C2D9     		bls	.L144
 686:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 687:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 688:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 689:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2468              		.loc 1 689 0 is_stmt 1
 2469 0c30 FFF7FEFF 		bl	IntMasterEnable
 690:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return FALSE;
 2470              		.loc 1 690 0
 2471 0c34 0023     		movs	r3, #0
 2472              	.L143:
 691:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2473              		.loc 1 691 0
 2474 0c36 1846     		mov	r0, r3
 2475 0c38 1037     		adds	r7, r7, #16
 2476              		.cfi_def_cfa_offset 8
 2477 0c3a BD46     		mov	sp, r7
 2478              		.cfi_def_cfa_register 13
 2479              		@ sp needed
 2480 0c3c 80BD     		pop	{r7, pc}
 2481              	.L146:
 2482 0c3e 00BF     		.align	2
 2483              	.L145:
 2484 0c40 00000000 		.word	schedule_vars
 2485              		.cfi_endproc
 2486              	.LFE22:
 2488              		.align	1
 2489              		.global	schedule_hasNonParentAutonomousTxRxCellUnicast
 2490              		.syntax unified
 2491              		.thumb
 2492              		.thumb_func
 2493              		.fpu softvfp
 2495              	schedule_hasNonParentAutonomousTxRxCellUnicast:
 2496              	.LFB23:
 692:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 693:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_hasNonParentAutonomousTxRxCellUnicast(open_addr_t* parentNeighbor, open_addr_t* nonPa
 2497              		.loc 1 693 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 16
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501 0c44 80B5     		push	{r7, lr}
 2502              		.cfi_def_cfa_offset 8
 2503              		.cfi_offset 7, -8
 2504              		.cfi_offset 14, -4
 2505 0c46 84B0     		sub	sp, sp, #16
 2506              		.cfi_def_cfa_offset 24
 2507 0c48 00AF     		add	r7, sp, #0
 2508              		.cfi_def_cfa_register 7
 2509 0c4a 7860     		str	r0, [r7, #4]
 2510 0c4c 3960     		str	r1, [r7]
 694:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 695:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 696:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 697:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2511              		.loc 1 697 0
 2512 0c4e FFF7FEFF 		bl	IntMasterDisable
 698:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 699:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 2513              		.loc 1 699 0
 2514 0c52 0023     		movs	r3, #0
 2515 0c54 FB73     		strb	r3, [r7, #15]
 2516 0c56 46E0     		b	.L148
 2517              	.L151:
 700:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 701:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type          == CELLTYPE_TXRX &&
 2518              		.loc 1 701 0
 2519 0c58 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2520 0c5a 2849     		ldr	r1, .L152
 2521 0c5c 1346     		mov	r3, r2
 2522 0c5e DB00     		lsls	r3, r3, #3
 2523 0c60 1344     		add	r3, r3, r2
 2524 0c62 9B00     		lsls	r3, r3, #2
 2525 0c64 0B44     		add	r3, r3, r1
 2526 0c66 0233     		adds	r3, r3, #2
 2527 0c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 700:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2528              		.loc 1 700 0
 2529 0c6a 032B     		cmp	r3, #3
 2530 0c6c 38D1     		bne	.L149
 702:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2531              		.loc 1 702 0
 2532 0c6e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2533 0c70 2249     		ldr	r1, .L152
 2534 0c72 1346     		mov	r3, r2
 2535 0c74 DB00     		lsls	r3, r3, #3
 2536 0c76 1344     		add	r3, r3, r2
 2537 0c78 9B00     		lsls	r3, r3, #2
 2538 0c7a 0B44     		add	r3, r3, r1
 2539 0c7c 0333     		adds	r3, r3, #3
 2540 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 701:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2541              		.loc 1 701 0
 2542 0c80 002B     		cmp	r3, #0
 2543 0c82 2DD0     		beq	.L149
 703:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B      &&
 2544              		.loc 1 703 0
 2545 0c84 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2546 0c86 1D49     		ldr	r1, .L152
 2547 0c88 1346     		mov	r3, r2
 2548 0c8a DB00     		lsls	r3, r3, #3
 2549 0c8c 1344     		add	r3, r3, r2
 2550 0c8e 9B00     		lsls	r3, r3, #2
 2551 0c90 0B44     		add	r3, r3, r1
 2552 0c92 0533     		adds	r3, r3, #5
 2553 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 702:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared                         &&
 2554              		.loc 1 702 0
 2555 0c96 022B     		cmp	r3, #2
 2556 0c98 22D1     		bne	.L149
 704:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(parentNeighbor,&schedule_vars.scheduleBuf[i].neighbor) == F
 2557              		.loc 1 704 0
 2558 0c9a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2559 0c9c 1346     		mov	r3, r2
 2560 0c9e DB00     		lsls	r3, r3, #3
 2561 0ca0 1344     		add	r3, r3, r2
 2562 0ca2 9B00     		lsls	r3, r3, #2
 2563 0ca4 154A     		ldr	r2, .L152
 2564 0ca6 1344     		add	r3, r3, r2
 2565 0ca8 0533     		adds	r3, r3, #5
 2566 0caa 1946     		mov	r1, r3
 2567 0cac 7868     		ldr	r0, [r7, #4]
 2568 0cae FFF7FEFF 		bl	packetfunctions_sameAddress
 2569 0cb2 0346     		mov	r3, r0
 2570 0cb4 83F00103 		eor	r3, r3, #1
 2571 0cb8 DBB2     		uxtb	r3, r3
 703:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_64B      &&
 2572              		.loc 1 703 0
 2573 0cba 002B     		cmp	r3, #0
 2574 0cbc 10D0     		beq	.L149
 705:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 706:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             memcpy(nonParentNeighbor,&schedule_vars.scheduleBuf[i].neighbor,sizeof(open_addr_t));
 2575              		.loc 1 706 0
 2576 0cbe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2577 0cc0 1346     		mov	r3, r2
 2578 0cc2 DB00     		lsls	r3, r3, #3
 2579 0cc4 1344     		add	r3, r3, r2
 2580 0cc6 9B00     		lsls	r3, r3, #2
 2581 0cc8 0C4A     		ldr	r2, .L152
 2582 0cca 1344     		add	r3, r3, r2
 2583 0ccc 0533     		adds	r3, r3, #5
 2584 0cce 1122     		movs	r2, #17
 2585 0cd0 1946     		mov	r1, r3
 2586 0cd2 3868     		ldr	r0, [r7]
 2587 0cd4 FFF7FEFF 		bl	memcpy
 707:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 2588              		.loc 1 707 0
 2589 0cd8 FFF7FEFF 		bl	IntMasterEnable
 708:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return TRUE;
 2590              		.loc 1 708 0
 2591 0cdc 0123     		movs	r3, #1
 2592 0cde 08E0     		b	.L150
 2593              	.L149:
 699:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2594              		.loc 1 699 0 discriminator 2
 2595 0ce0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2596 0ce2 0133     		adds	r3, r3, #1
 2597 0ce4 FB73     		strb	r3, [r7, #15]
 2598              	.L148:
 699:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2599              		.loc 1 699 0 is_stmt 0 discriminator 1
 2600 0ce6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2601 0ce8 142B     		cmp	r3, #20
 2602 0cea B5D9     		bls	.L151
 709:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 710:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 711:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 712:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2603              		.loc 1 712 0 is_stmt 1
 2604 0cec FFF7FEFF 		bl	IntMasterEnable
 713:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return FALSE;
 2605              		.loc 1 713 0
 2606 0cf0 0023     		movs	r3, #0
 2607              	.L150:
 714:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2608              		.loc 1 714 0
 2609 0cf2 1846     		mov	r0, r3
 2610 0cf4 1037     		adds	r7, r7, #16
 2611              		.cfi_def_cfa_offset 8
 2612 0cf6 BD46     		mov	sp, r7
 2613              		.cfi_def_cfa_register 13
 2614              		@ sp needed
 2615 0cf8 80BD     		pop	{r7, pc}
 2616              	.L153:
 2617 0cfa 00BF     		.align	2
 2618              	.L152:
 2619 0cfc 00000000 		.word	schedule_vars
 2620              		.cfi_endproc
 2621              	.LFE23:
 2623              		.align	1
 2624              		.global	schedule_getAutonomousTxRxCellAnycast
 2625              		.syntax unified
 2626              		.thumb
 2627              		.thumb_func
 2628              		.fpu softvfp
 2630              	schedule_getAutonomousTxRxCellAnycast:
 2631              	.LFB24:
 715:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 716:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_getAutonomousTxRxCellAnycast(uint16_t* slotoffset){
 2632              		.loc 1 716 0
 2633              		.cfi_startproc
 2634              		@ args = 0, pretend = 0, frame = 16
 2635              		@ frame_needed = 1, uses_anonymous_args = 0
 2636 0d00 80B5     		push	{r7, lr}
 2637              		.cfi_def_cfa_offset 8
 2638              		.cfi_offset 7, -8
 2639              		.cfi_offset 14, -4
 2640 0d02 84B0     		sub	sp, sp, #16
 2641              		.cfi_def_cfa_offset 24
 2642 0d04 00AF     		add	r7, sp, #0
 2643              		.cfi_def_cfa_register 7
 2644 0d06 7860     		str	r0, [r7, #4]
 717:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     uint8_t i;
 718:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 719:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 720:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2645              		.loc 1 720 0
 2646 0d08 FFF7FEFF 		bl	IntMasterDisable
 721:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 722:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     for(i=0;i<MAXACTIVESLOTS;i++) {
 2647              		.loc 1 722 0
 2648 0d0c 0023     		movs	r3, #0
 2649 0d0e FB73     		strb	r3, [r7, #15]
 2650 0d10 34E0     		b	.L155
 2651              	.L158:
 723:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 724:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].type          == CELLTYPE_TXRX &&
 2652              		.loc 1 724 0
 2653 0d12 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2654 0d14 1E49     		ldr	r1, .L159
 2655 0d16 1346     		mov	r3, r2
 2656 0d18 DB00     		lsls	r3, r3, #3
 2657 0d1a 1344     		add	r3, r3, r2
 2658 0d1c 9B00     		lsls	r3, r3, #2
 2659 0d1e 0B44     		add	r3, r3, r1
 2660 0d20 0233     		adds	r3, r3, #2
 2661 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 723:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2662              		.loc 1 723 0
 2663 0d24 032B     		cmp	r3, #3
 2664 0d26 26D1     		bne	.L156
 725:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared        == FALSE         &&
 2665              		.loc 1 725 0
 2666 0d28 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2667 0d2a 1949     		ldr	r1, .L159
 2668 0d2c 1346     		mov	r3, r2
 2669 0d2e DB00     		lsls	r3, r3, #3
 2670 0d30 1344     		add	r3, r3, r2
 2671 0d32 9B00     		lsls	r3, r3, #2
 2672 0d34 0B44     		add	r3, r3, r1
 2673 0d36 0333     		adds	r3, r3, #3
 2674 0d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2675 0d3a 83F00103 		eor	r3, r3, #1
 2676 0d3e DBB2     		uxtb	r3, r3
 724:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared        == FALSE         &&
 2677              		.loc 1 724 0
 2678 0d40 002B     		cmp	r3, #0
 2679 0d42 18D0     		beq	.L156
 726:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].neighbor.type == ADDR_ANYCAST
 2680              		.loc 1 726 0
 2681 0d44 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2682 0d46 1249     		ldr	r1, .L159
 2683 0d48 1346     		mov	r3, r2
 2684 0d4a DB00     		lsls	r3, r3, #3
 2685 0d4c 1344     		add	r3, r3, r2
 2686 0d4e 9B00     		lsls	r3, r3, #2
 2687 0d50 0B44     		add	r3, r3, r1
 2688 0d52 0533     		adds	r3, r3, #5
 2689 0d54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 725:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             schedule_vars.scheduleBuf[i].shared        == FALSE         &&
 2690              		.loc 1 725 0
 2691 0d56 062B     		cmp	r3, #6
 2692 0d58 0DD1     		bne	.L156
 727:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         ){
 728:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             *slotoffset = schedule_vars.scheduleBuf[i].slotOffset;
 2693              		.loc 1 728 0
 2694 0d5a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2695 0d5c 0C49     		ldr	r1, .L159
 2696 0d5e 1346     		mov	r3, r2
 2697 0d60 DB00     		lsls	r3, r3, #3
 2698 0d62 1344     		add	r3, r3, r2
 2699 0d64 9B00     		lsls	r3, r3, #2
 2700 0d66 0B44     		add	r3, r3, r1
 2701 0d68 1A88     		ldrh	r2, [r3]
 2702 0d6a 7B68     		ldr	r3, [r7, #4]
 2703 0d6c 1A80     		strh	r2, [r3]	@ movhi
 729:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             ENABLE_INTERRUPTS();
 2704              		.loc 1 729 0
 2705 0d6e FFF7FEFF 		bl	IntMasterEnable
 730:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             return TRUE;
 2706              		.loc 1 730 0
 2707 0d72 0123     		movs	r3, #1
 2708 0d74 08E0     		b	.L157
 2709              	.L156:
 722:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2710              		.loc 1 722 0 discriminator 2
 2711 0d76 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2712 0d78 0133     		adds	r3, r3, #1
 2713 0d7a FB73     		strb	r3, [r7, #15]
 2714              	.L155:
 722:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(
 2715              		.loc 1 722 0 is_stmt 0 discriminator 1
 2716 0d7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2717 0d7e 142B     		cmp	r3, #20
 2718 0d80 C7D9     		bls	.L158
 731:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 732:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 733:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 734:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2719              		.loc 1 734 0 is_stmt 1
 2720 0d82 FFF7FEFF 		bl	IntMasterEnable
 735:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return FALSE;
 2721              		.loc 1 735 0
 2722 0d86 0023     		movs	r3, #0
 2723              	.L157:
 736:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2724              		.loc 1 736 0
 2725 0d88 1846     		mov	r0, r3
 2726 0d8a 1037     		adds	r7, r7, #16
 2727              		.cfi_def_cfa_offset 8
 2728 0d8c BD46     		mov	sp, r7
 2729              		.cfi_def_cfa_register 13
 2730              		@ sp needed
 2731 0d8e 80BD     		pop	{r7, pc}
 2732              	.L160:
 2733              		.align	2
 2734              	.L159:
 2735 0d90 00000000 		.word	schedule_vars
 2736              		.cfi_endproc
 2737              	.LFE24:
 2739              		.align	1
 2740              		.global	schedule_syncSlotOffset
 2741              		.syntax unified
 2742              		.thumb
 2743              		.thumb_func
 2744              		.fpu softvfp
 2746              	schedule_syncSlotOffset:
 2747              	.LFB25:
 737:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 738:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=== from IEEE802154E: reading the schedule and updating statistics
 739:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 740:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_syncSlotOffset(slotOffset_t targetSlotOffset) {
 2748              		.loc 1 740 0
 2749              		.cfi_startproc
 2750              		@ args = 0, pretend = 0, frame = 8
 2751              		@ frame_needed = 1, uses_anonymous_args = 0
 2752 0d94 80B5     		push	{r7, lr}
 2753              		.cfi_def_cfa_offset 8
 2754              		.cfi_offset 7, -8
 2755              		.cfi_offset 14, -4
 2756 0d96 82B0     		sub	sp, sp, #8
 2757              		.cfi_def_cfa_offset 16
 2758 0d98 00AF     		add	r7, sp, #0
 2759              		.cfi_def_cfa_register 7
 2760 0d9a 0346     		mov	r3, r0
 2761 0d9c FB80     		strh	r3, [r7, #6]	@ movhi
 741:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 742:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 743:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 2762              		.loc 1 743 0
 2763 0d9e FFF7FEFF 		bl	IntMasterDisable
 744:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 745:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    while (schedule_vars.currentScheduleEntry->slotOffset!=targetSlotOffset) {
 2764              		.loc 1 745 0
 2765 0da2 01E0     		b	.L162
 2766              	.L163:
 746:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_advanceSlot();
 2767              		.loc 1 746 0
 2768 0da4 FFF7FEFF 		bl	schedule_advanceSlot
 2769              	.L162:
 745:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****       schedule_advanceSlot();
 2770              		.loc 1 745 0
 2771 0da8 064B     		ldr	r3, .L164
 2772 0daa D3F8F432 		ldr	r3, [r3, #756]
 2773 0dae 1B88     		ldrh	r3, [r3]
 2774 0db0 FA88     		ldrh	r2, [r7, #6]
 2775 0db2 9A42     		cmp	r2, r3
 2776 0db4 F6D1     		bne	.L163
 747:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }
 748:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 749:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 2777              		.loc 1 749 0
 2778 0db6 FFF7FEFF 		bl	IntMasterEnable
 750:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2779              		.loc 1 750 0
 2780 0dba 00BF     		nop
 2781 0dbc 0837     		adds	r7, r7, #8
 2782              		.cfi_def_cfa_offset 8
 2783 0dbe BD46     		mov	sp, r7
 2784              		.cfi_def_cfa_register 13
 2785              		@ sp needed
 2786 0dc0 80BD     		pop	{r7, pc}
 2787              	.L165:
 2788 0dc2 00BF     		.align	2
 2789              	.L164:
 2790 0dc4 00000000 		.word	schedule_vars
 2791              		.cfi_endproc
 2792              	.LFE25:
 2794              		.align	1
 2795              		.global	schedule_advanceSlot
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu softvfp
 2801              	schedule_advanceSlot:
 2802              	.LFB26:
 751:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 752:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 753:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief advance to next active slot
 754:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 755:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_advanceSlot(void) {
 2803              		.loc 1 755 0
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 0
 2806              		@ frame_needed = 1, uses_anonymous_args = 0
 2807 0dc8 80B5     		push	{r7, lr}
 2808              		.cfi_def_cfa_offset 8
 2809              		.cfi_offset 7, -8
 2810              		.cfi_offset 14, -4
 2811 0dca 00AF     		add	r7, sp, #0
 2812              		.cfi_def_cfa_register 7
 756:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 757:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 758:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2813              		.loc 1 758 0
 2814 0dcc FFF7FEFF 		bl	IntMasterDisable
 759:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.currentScheduleEntry = schedule_vars.currentScheduleEntry->next;
 2815              		.loc 1 759 0
 2816 0dd0 054B     		ldr	r3, .L167
 2817 0dd2 D3F8F432 		ldr	r3, [r3, #756]
 2818 0dd6 1B6A     		ldr	r3, [r3, #32]
 2819 0dd8 034A     		ldr	r2, .L167
 2820 0dda C2F8F432 		str	r3, [r2, #756]
 760:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 761:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2821              		.loc 1 761 0
 2822 0dde FFF7FEFF 		bl	IntMasterEnable
 762:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2823              		.loc 1 762 0
 2824 0de2 00BF     		nop
 2825 0de4 80BD     		pop	{r7, pc}
 2826              	.L168:
 2827 0de6 00BF     		.align	2
 2828              	.L167:
 2829 0de8 00000000 		.word	schedule_vars
 2830              		.cfi_endproc
 2831              	.LFE26:
 2833              		.align	1
 2834              		.global	schedule_getNextActiveSlotOffset
 2835              		.syntax unified
 2836              		.thumb
 2837              		.thumb_func
 2838              		.fpu softvfp
 2840              	schedule_getNextActiveSlotOffset:
 2841              	.LFB27:
 763:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 764:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 765:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief return slotOffset of next active slot
 766:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 767:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** slotOffset_t schedule_getNextActiveSlotOffset(void) {
 2842              		.loc 1 767 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 8
 2845              		@ frame_needed = 1, uses_anonymous_args = 0
 2846 0dec 80B5     		push	{r7, lr}
 2847              		.cfi_def_cfa_offset 8
 2848              		.cfi_offset 7, -8
 2849              		.cfi_offset 14, -4
 2850 0dee 82B0     		sub	sp, sp, #8
 2851              		.cfi_def_cfa_offset 16
 2852 0df0 00AF     		add	r7, sp, #0
 2853              		.cfi_def_cfa_register 7
 768:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     slotOffset_t res;
 769:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 770:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 771:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2854              		.loc 1 771 0
 2855 0df2 FFF7FEFF 		bl	IntMasterDisable
 772:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 773:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     res = ((scheduleEntry_t*)(schedule_vars.currentScheduleEntry->next))->slotOffset;
 2856              		.loc 1 773 0
 2857 0df6 064B     		ldr	r3, .L171
 2858 0df8 D3F8F432 		ldr	r3, [r3, #756]
 2859 0dfc 1B6A     		ldr	r3, [r3, #32]
 2860 0dfe 1B88     		ldrh	r3, [r3]	@ movhi
 2861 0e00 FB80     		strh	r3, [r7, #6]	@ movhi
 774:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 775:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2862              		.loc 1 775 0
 2863 0e02 FFF7FEFF 		bl	IntMasterEnable
 776:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 777:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return res;
 2864              		.loc 1 777 0
 2865 0e06 FB88     		ldrh	r3, [r7, #6]
 778:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2866              		.loc 1 778 0
 2867 0e08 1846     		mov	r0, r3
 2868 0e0a 0837     		adds	r7, r7, #8
 2869              		.cfi_def_cfa_offset 8
 2870 0e0c BD46     		mov	sp, r7
 2871              		.cfi_def_cfa_register 13
 2872              		@ sp needed
 2873 0e0e 80BD     		pop	{r7, pc}
 2874              	.L172:
 2875              		.align	2
 2876              	.L171:
 2877 0e10 00000000 		.word	schedule_vars
 2878              		.cfi_endproc
 2879              	.LFE27:
 2881              		.align	1
 2882              		.global	schedule_getFrameLength
 2883              		.syntax unified
 2884              		.thumb
 2885              		.thumb_func
 2886              		.fpu softvfp
 2888              	schedule_getFrameLength:
 2889              	.LFB28:
 779:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 780:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 781:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Get the frame length.
 782:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 783:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns The frame length.
 784:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 785:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** frameLength_t schedule_getFrameLength(void) {
 2890              		.loc 1 785 0
 2891              		.cfi_startproc
 2892              		@ args = 0, pretend = 0, frame = 8
 2893              		@ frame_needed = 1, uses_anonymous_args = 0
 2894 0e14 80B5     		push	{r7, lr}
 2895              		.cfi_def_cfa_offset 8
 2896              		.cfi_offset 7, -8
 2897              		.cfi_offset 14, -4
 2898 0e16 82B0     		sub	sp, sp, #8
 2899              		.cfi_def_cfa_offset 16
 2900 0e18 00AF     		add	r7, sp, #0
 2901              		.cfi_def_cfa_register 7
 786:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     frameLength_t returnVal;
 787:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 788:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 789:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2902              		.loc 1 789 0
 2903 0e1a FFF7FEFF 		bl	IntMasterDisable
 790:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 791:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     returnVal = schedule_vars.frameLength;
 2904              		.loc 1 791 0
 2905 0e1e 054B     		ldr	r3, .L175
 2906 0e20 B3F8F832 		ldrh	r3, [r3, #760]	@ movhi
 2907 0e24 FB80     		strh	r3, [r7, #6]	@ movhi
 792:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 793:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2908              		.loc 1 793 0
 2909 0e26 FFF7FEFF 		bl	IntMasterEnable
 794:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 795:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return returnVal;
 2910              		.loc 1 795 0
 2911 0e2a FB88     		ldrh	r3, [r7, #6]
 796:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2912              		.loc 1 796 0
 2913 0e2c 1846     		mov	r0, r3
 2914 0e2e 0837     		adds	r7, r7, #8
 2915              		.cfi_def_cfa_offset 8
 2916 0e30 BD46     		mov	sp, r7
 2917              		.cfi_def_cfa_register 13
 2918              		@ sp needed
 2919 0e32 80BD     		pop	{r7, pc}
 2920              	.L176:
 2921              		.align	2
 2922              	.L175:
 2923 0e34 00000000 		.word	schedule_vars
 2924              		.cfi_endproc
 2925              	.LFE28:
 2927              		.align	1
 2928              		.global	schedule_getType
 2929              		.syntax unified
 2930              		.thumb
 2931              		.thumb_func
 2932              		.fpu softvfp
 2934              	schedule_getType:
 2935              	.LFB29:
 797:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 798:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 799:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 800:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Get the type of the current schedule entry.
 801:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 802:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns The type of the current schedule entry.
 803:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 804:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** cellType_t schedule_getType(void) {
 2936              		.loc 1 804 0
 2937              		.cfi_startproc
 2938              		@ args = 0, pretend = 0, frame = 8
 2939              		@ frame_needed = 1, uses_anonymous_args = 0
 2940 0e38 80B5     		push	{r7, lr}
 2941              		.cfi_def_cfa_offset 8
 2942              		.cfi_offset 7, -8
 2943              		.cfi_offset 14, -4
 2944 0e3a 82B0     		sub	sp, sp, #8
 2945              		.cfi_def_cfa_offset 16
 2946 0e3c 00AF     		add	r7, sp, #0
 2947              		.cfi_def_cfa_register 7
 805:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     cellType_t returnVal;
 806:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 807:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 808:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2948              		.loc 1 808 0
 2949 0e3e FFF7FEFF 		bl	IntMasterDisable
 809:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 810:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     returnVal = schedule_vars.currentScheduleEntry->type;
 2950              		.loc 1 810 0
 2951 0e42 064B     		ldr	r3, .L179
 2952 0e44 D3F8F432 		ldr	r3, [r3, #756]
 2953 0e48 9B78     		ldrb	r3, [r3, #2]
 2954 0e4a FB71     		strb	r3, [r7, #7]
 811:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 812:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 2955              		.loc 1 812 0
 2956 0e4c FFF7FEFF 		bl	IntMasterEnable
 813:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 814:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return returnVal;
 2957              		.loc 1 814 0
 2958 0e50 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 815:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 2959              		.loc 1 815 0
 2960 0e52 1846     		mov	r0, r3
 2961 0e54 0837     		adds	r7, r7, #8
 2962              		.cfi_def_cfa_offset 8
 2963 0e56 BD46     		mov	sp, r7
 2964              		.cfi_def_cfa_register 13
 2965              		@ sp needed
 2966 0e58 80BD     		pop	{r7, pc}
 2967              	.L180:
 2968 0e5a 00BF     		.align	2
 2969              	.L179:
 2970 0e5c 00000000 		.word	schedule_vars
 2971              		.cfi_endproc
 2972              	.LFE29:
 2974              		.align	1
 2975              		.global	schedule_getShared
 2976              		.syntax unified
 2977              		.thumb
 2978              		.thumb_func
 2979              		.fpu softvfp
 2981              	schedule_getShared:
 2982              	.LFB30:
 816:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 817:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 818:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 819:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Get the isShared of the current schedule entry.
 820:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 821:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns The isShared of the current schedule entry.
 822:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 823:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_getShared(void) {
 2983              		.loc 1 823 0
 2984              		.cfi_startproc
 2985              		@ args = 0, pretend = 0, frame = 8
 2986              		@ frame_needed = 1, uses_anonymous_args = 0
 2987 0e60 80B5     		push	{r7, lr}
 2988              		.cfi_def_cfa_offset 8
 2989              		.cfi_offset 7, -8
 2990              		.cfi_offset 14, -4
 2991 0e62 82B0     		sub	sp, sp, #8
 2992              		.cfi_def_cfa_offset 16
 2993 0e64 00AF     		add	r7, sp, #0
 2994              		.cfi_def_cfa_register 7
 824:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     bool returnVal;
 825:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 826:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 827:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 2995              		.loc 1 827 0
 2996 0e66 FFF7FEFF 		bl	IntMasterDisable
 828:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 829:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     returnVal = schedule_vars.currentScheduleEntry->shared;
 2997              		.loc 1 829 0
 2998 0e6a 064B     		ldr	r3, .L183
 2999 0e6c D3F8F432 		ldr	r3, [r3, #756]
 3000 0e70 DB78     		ldrb	r3, [r3, #3]
 3001 0e72 FB71     		strb	r3, [r7, #7]
 830:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 831:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3002              		.loc 1 831 0
 3003 0e74 FFF7FEFF 		bl	IntMasterEnable
 832:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 833:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return returnVal;
 3004              		.loc 1 833 0
 3005 0e78 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 834:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3006              		.loc 1 834 0
 3007 0e7a 1846     		mov	r0, r3
 3008 0e7c 0837     		adds	r7, r7, #8
 3009              		.cfi_def_cfa_offset 8
 3010 0e7e BD46     		mov	sp, r7
 3011              		.cfi_def_cfa_register 13
 3012              		@ sp needed
 3013 0e80 80BD     		pop	{r7, pc}
 3014              	.L184:
 3015 0e82 00BF     		.align	2
 3016              	.L183:
 3017 0e84 00000000 		.word	schedule_vars
 3018              		.cfi_endproc
 3019              	.LFE30:
 3021              		.align	1
 3022              		.global	schedule_getNeighbor
 3023              		.syntax unified
 3024              		.thumb
 3025              		.thumb_func
 3026              		.fpu softvfp
 3028              	schedule_getNeighbor:
 3029              	.LFB31:
 835:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 836:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 837:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Get the neighbor associated wit the current schedule entry.
 838:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 839:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns The neighbor associated wit the current schedule entry.
 840:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 841:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_getNeighbor(open_addr_t* addrToWrite) {
 3030              		.loc 1 841 0
 3031              		.cfi_startproc
 3032              		@ args = 0, pretend = 0, frame = 8
 3033              		@ frame_needed = 1, uses_anonymous_args = 0
 3034 0e88 80B5     		push	{r7, lr}
 3035              		.cfi_def_cfa_offset 8
 3036              		.cfi_offset 7, -8
 3037              		.cfi_offset 14, -4
 3038 0e8a 82B0     		sub	sp, sp, #8
 3039              		.cfi_def_cfa_offset 16
 3040 0e8c 00AF     		add	r7, sp, #0
 3041              		.cfi_def_cfa_register 7
 3042 0e8e 7860     		str	r0, [r7, #4]
 842:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 843:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 844:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3043              		.loc 1 844 0
 3044 0e90 FFF7FEFF 		bl	IntMasterDisable
 845:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 846:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     memcpy(addrToWrite,&(schedule_vars.currentScheduleEntry->neighbor),sizeof(open_addr_t));
 3045              		.loc 1 846 0
 3046 0e94 074B     		ldr	r3, .L186
 3047 0e96 D3F8F432 		ldr	r3, [r3, #756]
 3048 0e9a 0533     		adds	r3, r3, #5
 3049 0e9c 1122     		movs	r2, #17
 3050 0e9e 1946     		mov	r1, r3
 3051 0ea0 7868     		ldr	r0, [r7, #4]
 3052 0ea2 FFF7FEFF 		bl	memcpy
 847:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 848:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3053              		.loc 1 848 0
 3054 0ea6 FFF7FEFF 		bl	IntMasterEnable
 849:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3055              		.loc 1 849 0
 3056 0eaa 00BF     		nop
 3057 0eac 0837     		adds	r7, r7, #8
 3058              		.cfi_def_cfa_offset 8
 3059 0eae BD46     		mov	sp, r7
 3060              		.cfi_def_cfa_register 13
 3061              		@ sp needed
 3062 0eb0 80BD     		pop	{r7, pc}
 3063              	.L187:
 3064 0eb2 00BF     		.align	2
 3065              	.L186:
 3066 0eb4 00000000 		.word	schedule_vars
 3067              		.cfi_endproc
 3068              	.LFE31:
 3070              		.align	1
 3071              		.global	schedule_getChannelOffset
 3072              		.syntax unified
 3073              		.thumb
 3074              		.thumb_func
 3075              		.fpu softvfp
 3077              	schedule_getChannelOffset:
 3078              	.LFB32:
 850:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 851:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 852:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Get the channel offset of the current schedule entry.
 853:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 854:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns The channel offset of the current schedule entry.
 855:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 856:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** channelOffset_t schedule_getChannelOffset(void) {
 3079              		.loc 1 856 0
 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 8
 3082              		@ frame_needed = 1, uses_anonymous_args = 0
 3083 0eb8 80B5     		push	{r7, lr}
 3084              		.cfi_def_cfa_offset 8
 3085              		.cfi_offset 7, -8
 3086              		.cfi_offset 14, -4
 3087 0eba 82B0     		sub	sp, sp, #8
 3088              		.cfi_def_cfa_offset 16
 3089 0ebc 00AF     		add	r7, sp, #0
 3090              		.cfi_def_cfa_register 7
 857:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     channelOffset_t returnVal;
 858:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 859:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 860:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3091              		.loc 1 860 0
 3092 0ebe FFF7FEFF 		bl	IntMasterDisable
 861:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 862:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     returnVal = schedule_vars.currentScheduleEntry->channelOffset;
 3093              		.loc 1 862 0
 3094 0ec2 064B     		ldr	r3, .L190
 3095 0ec4 D3F8F432 		ldr	r3, [r3, #756]
 3096 0ec8 1B79     		ldrb	r3, [r3, #4]
 3097 0eca FB71     		strb	r3, [r7, #7]
 863:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 864:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3098              		.loc 1 864 0
 3099 0ecc FFF7FEFF 		bl	IntMasterEnable
 865:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 866:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return returnVal;
 3100              		.loc 1 866 0
 3101 0ed0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 867:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3102              		.loc 1 867 0
 3103 0ed2 1846     		mov	r0, r3
 3104 0ed4 0837     		adds	r7, r7, #8
 3105              		.cfi_def_cfa_offset 8
 3106 0ed6 BD46     		mov	sp, r7
 3107              		.cfi_def_cfa_register 13
 3108              		@ sp needed
 3109 0ed8 80BD     		pop	{r7, pc}
 3110              	.L191:
 3111 0eda 00BF     		.align	2
 3112              	.L190:
 3113 0edc 00000000 		.word	schedule_vars
 3114              		.cfi_endproc
 3115              	.LFE32:
 3117              		.align	1
 3118              		.global	schedule_getOkToSend
 3119              		.syntax unified
 3120              		.thumb
 3121              		.thumb_func
 3122              		.fpu softvfp
 3124              	schedule_getOkToSend:
 3125              	.LFB33:
 868:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 869:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 870:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Check whether I can send on this slot.
 871:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 872:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** This function is called at the beginning of every TX slot.
 873:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** If the slot is *not* a shared slot, it always return TRUE.
 874:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** If the slot is a shared slot, it decrements the backoff counter and returns
 875:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** TRUE only if it hits 0.
 876:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 877:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** Note that the backoff counter is global, not per slot.
 878:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 879:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \returns TRUE if it is OK to send on this slot, FALSE otherwise.
 880:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 881:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_getOkToSend(void) {
 3126              		.loc 1 881 0
 3127              		.cfi_startproc
 3128              		@ args = 0, pretend = 0, frame = 8
 3129              		@ frame_needed = 1, uses_anonymous_args = 0
 3130 0ee0 80B5     		push	{r7, lr}
 3131              		.cfi_def_cfa_offset 8
 3132              		.cfi_offset 7, -8
 3133              		.cfi_offset 14, -4
 3134 0ee2 82B0     		sub	sp, sp, #8
 3135              		.cfi_def_cfa_offset 16
 3136 0ee4 00AF     		add	r7, sp, #0
 3137              		.cfi_def_cfa_register 7
 882:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     bool returnVal;
 883:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 884:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 885:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3138              		.loc 1 885 0
 3139 0ee6 FFF7FEFF 		bl	IntMasterDisable
 886:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 887:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (schedule_vars.currentScheduleEntry->shared==FALSE) {
 3140              		.loc 1 887 0
 3141 0eea 204B     		ldr	r3, .L200
 3142 0eec D3F8F432 		ldr	r3, [r3, #756]
 3143 0ef0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3144 0ef2 83F00103 		eor	r3, r3, #1
 3145 0ef6 DBB2     		uxtb	r3, r3
 3146 0ef8 002B     		cmp	r3, #0
 3147 0efa 02D0     		beq	.L193
 888:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         // non-shared slot: backoff does not apply
 889:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 890:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         returnVal = TRUE;
 3148              		.loc 1 890 0
 3149 0efc 0123     		movs	r3, #1
 3150 0efe FB71     		strb	r3, [r7, #7]
 3151 0f00 2DE0     		b	.L194
 3152              	.L193:
 891:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     } else {
 892:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         // shared slot: check backoff before answering
 893:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 894:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (schedule_vars.currentScheduleEntry->neighbor.type == ADDR_ANYCAST){
 3153              		.loc 1 894 0
 3154 0f02 1A4B     		ldr	r3, .L200
 3155 0f04 D3F8F432 		ldr	r3, [r3, #756]
 3156 0f08 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3157 0f0a 062B     		cmp	r3, #6
 3158 0f0c 17D1     		bne	.L195
 895:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             // this is a minimal cell
 896:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.backoff>0) {
 3159              		.loc 1 896 0
 3160 0f0e 174B     		ldr	r3, .L200
 3161 0f10 93F8FF32 		ldrb	r3, [r3, #767]	@ zero_extendqisi2
 3162 0f14 002B     		cmp	r3, #0
 3163 0f16 07D0     		beq	.L196
 897:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.backoff--;
 3164              		.loc 1 897 0
 3165 0f18 144B     		ldr	r3, .L200
 3166 0f1a 93F8FF32 		ldrb	r3, [r3, #767]	@ zero_extendqisi2
 3167 0f1e 013B     		subs	r3, r3, #1
 3168 0f20 DAB2     		uxtb	r2, r3
 3169 0f22 124B     		ldr	r3, .L200
 3170 0f24 83F8FF22 		strb	r2, [r3, #767]
 3171              	.L196:
 898:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 899:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 900:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             // only return TRUE if backoff hit 0
 901:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.backoff==0) {
 3172              		.loc 1 901 0
 3173 0f28 104B     		ldr	r3, .L200
 3174 0f2a 93F8FF32 		ldrb	r3, [r3, #767]	@ zero_extendqisi2
 3175 0f2e 002B     		cmp	r3, #0
 3176 0f30 02D1     		bne	.L197
 902:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 returnVal = TRUE;
 3177              		.loc 1 902 0
 3178 0f32 0123     		movs	r3, #1
 3179 0f34 FB71     		strb	r3, [r7, #7]
 3180 0f36 12E0     		b	.L194
 3181              	.L197:
 903:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             } else {
 904:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 returnVal = FALSE;
 3182              		.loc 1 904 0
 3183 0f38 0023     		movs	r3, #0
 3184 0f3a FB71     		strb	r3, [r7, #7]
 3185 0f3c 0FE0     		b	.L194
 3186              	.L195:
 905:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 906:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         } else {
 907:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             // this is a dedicated cell
 908:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             neighbors_decreaseBackoff(&schedule_vars.currentScheduleEntry->neighbor);
 3187              		.loc 1 908 0
 3188 0f3e 0B4B     		ldr	r3, .L200
 3189 0f40 D3F8F432 		ldr	r3, [r3, #756]
 3190 0f44 0533     		adds	r3, r3, #5
 3191 0f46 1846     		mov	r0, r3
 3192 0f48 FFF7FEFF 		bl	neighbors_decreaseBackoff
 909:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 910:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             returnVal = neighbors_backoffHitZero(&schedule_vars.currentScheduleEntry->neighbor);
 3193              		.loc 1 910 0
 3194 0f4c 074B     		ldr	r3, .L200
 3195 0f4e D3F8F432 		ldr	r3, [r3, #756]
 3196 0f52 0533     		adds	r3, r3, #5
 3197 0f54 1846     		mov	r0, r3
 3198 0f56 FFF7FEFF 		bl	neighbors_backoffHitZero
 3199 0f5a 0346     		mov	r3, r0
 3200 0f5c FB71     		strb	r3, [r7, #7]
 3201              	.L194:
 911:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 912:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 913:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 914:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3202              		.loc 1 914 0
 3203 0f5e FFF7FEFF 		bl	IntMasterEnable
 915:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 916:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     return returnVal;
 3204              		.loc 1 916 0
 3205 0f62 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 917:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3206              		.loc 1 917 0
 3207 0f64 1846     		mov	r0, r3
 3208 0f66 0837     		adds	r7, r7, #8
 3209              		.cfi_def_cfa_offset 8
 3210 0f68 BD46     		mov	sp, r7
 3211              		.cfi_def_cfa_register 13
 3212              		@ sp needed
 3213 0f6a 80BD     		pop	{r7, pc}
 3214              	.L201:
 3215              		.align	2
 3216              	.L200:
 3217 0f6c 00000000 		.word	schedule_vars
 3218              		.cfi_endproc
 3219              	.LFE33:
 3221              		.align	1
 3222              		.global	schedule_resetBackoff
 3223              		.syntax unified
 3224              		.thumb
 3225              		.thumb_func
 3226              		.fpu softvfp
 3228              	schedule_resetBackoff:
 3229              	.LFB34:
 918:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 919:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 920:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Reset the backoff and backoffExponent.
 921:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 922:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_resetBackoff(void) {
 3230              		.loc 1 922 0
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 0
 3233              		@ frame_needed = 1, uses_anonymous_args = 0
 3234 0f70 80B5     		push	{r7, lr}
 3235              		.cfi_def_cfa_offset 8
 3236              		.cfi_offset 7, -8
 3237              		.cfi_offset 14, -4
 3238 0f72 00AF     		add	r7, sp, #0
 3239              		.cfi_def_cfa_register 7
 923:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 924:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 925:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3240              		.loc 1 925 0
 3241 0f74 FFF7FEFF 		bl	IntMasterDisable
 926:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 927:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // reset backoffExponent
 928:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.backoffExponenton   = MINBE-1;
 3242              		.loc 1 928 0
 3243 0f78 054B     		ldr	r3, .L203
 3244 0f7a 0122     		movs	r2, #1
 3245 0f7c 83F8FE22 		strb	r2, [r3, #766]
 929:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // reset backoff
 930:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.backoff             = 0;
 3246              		.loc 1 930 0
 3247 0f80 034B     		ldr	r3, .L203
 3248 0f82 0022     		movs	r2, #0
 3249 0f84 83F8FF22 		strb	r2, [r3, #767]
 931:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 932:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3250              		.loc 1 932 0
 3251 0f88 FFF7FEFF 		bl	IntMasterEnable
 933:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3252              		.loc 1 933 0
 3253 0f8c 00BF     		nop
 3254 0f8e 80BD     		pop	{r7, pc}
 3255              	.L204:
 3256              		.align	2
 3257              	.L203:
 3258 0f90 00000000 		.word	schedule_vars
 3259              		.cfi_endproc
 3260              	.LFE34:
 3262              		.align	1
 3263              		.global	schedule_indicateRx
 3264              		.syntax unified
 3265              		.thumb
 3266              		.thumb_func
 3267              		.fpu softvfp
 3269              	schedule_indicateRx:
 3270              	.LFB35:
 934:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 935:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 936:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Indicate the reception of a packet.
 937:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 938:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_indicateRx(asn_t* asnTimestamp) {
 3271              		.loc 1 938 0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 8
 3274              		@ frame_needed = 1, uses_anonymous_args = 0
 3275 0f94 80B5     		push	{r7, lr}
 3276              		.cfi_def_cfa_offset 8
 3277              		.cfi_offset 7, -8
 3278              		.cfi_offset 14, -4
 3279 0f96 82B0     		sub	sp, sp, #8
 3280              		.cfi_def_cfa_offset 16
 3281 0f98 00AF     		add	r7, sp, #0
 3282              		.cfi_def_cfa_register 7
 3283 0f9a 7860     		str	r0, [r7, #4]
 939:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 940:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 941:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3284              		.loc 1 941 0
 3285 0f9c FFF7FEFF 		bl	IntMasterDisable
 942:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 943:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // increment usage statistics
 944:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.currentScheduleEntry->numRx++;
 3286              		.loc 1 944 0
 3287 0fa0 0A4B     		ldr	r3, .L206
 3288 0fa2 D3F8F432 		ldr	r3, [r3, #756]
 3289 0fa6 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 3290 0fa8 0132     		adds	r2, r2, #1
 3291 0faa D2B2     		uxtb	r2, r2
 3292 0fac 9A75     		strb	r2, [r3, #22]
 945:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 946:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // update last used timestamp
 947:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     memcpy(&(schedule_vars.currentScheduleEntry->lastUsedAsn), asnTimestamp, sizeof(asn_t));
 3293              		.loc 1 947 0
 3294 0fae 074B     		ldr	r3, .L206
 3295 0fb0 D3F8F432 		ldr	r3, [r3, #756]
 3296 0fb4 1933     		adds	r3, r3, #25
 3297 0fb6 0522     		movs	r2, #5
 3298 0fb8 7968     		ldr	r1, [r7, #4]
 3299 0fba 1846     		mov	r0, r3
 3300 0fbc FFF7FEFF 		bl	memcpy
 948:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 949:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3301              		.loc 1 949 0
 3302 0fc0 FFF7FEFF 		bl	IntMasterEnable
 950:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3303              		.loc 1 950 0
 3304 0fc4 00BF     		nop
 3305 0fc6 0837     		adds	r7, r7, #8
 3306              		.cfi_def_cfa_offset 8
 3307 0fc8 BD46     		mov	sp, r7
 3308              		.cfi_def_cfa_register 13
 3309              		@ sp needed
 3310 0fca 80BD     		pop	{r7, pc}
 3311              	.L207:
 3312              		.align	2
 3313              	.L206:
 3314 0fcc 00000000 		.word	schedule_vars
 3315              		.cfi_endproc
 3316              	.LFE35:
 3318              		.align	1
 3319              		.global	schedule_indicateTx
 3320              		.syntax unified
 3321              		.thumb
 3322              		.thumb_func
 3323              		.fpu softvfp
 3325              	schedule_indicateTx:
 3326              	.LFB36:
 951:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 952:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
 953:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \brief Indicate the transmission of a packet.
 954:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
 955:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_indicateTx(asn_t* asnTimestamp, bool succesfullTx) {
 3327              		.loc 1 955 0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 8
 3330              		@ frame_needed = 1, uses_anonymous_args = 0
 3331 0fd0 80B5     		push	{r7, lr}
 3332              		.cfi_def_cfa_offset 8
 3333              		.cfi_offset 7, -8
 3334              		.cfi_offset 14, -4
 3335 0fd2 82B0     		sub	sp, sp, #8
 3336              		.cfi_def_cfa_offset 16
 3337 0fd4 00AF     		add	r7, sp, #0
 3338              		.cfi_def_cfa_register 7
 3339 0fd6 7860     		str	r0, [r7, #4]
 3340 0fd8 0B46     		mov	r3, r1
 3341 0fda FB70     		strb	r3, [r7, #3]
 956:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 957:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
 958:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3342              		.loc 1 958 0
 3343 0fdc FFF7FEFF 		bl	IntMasterDisable
 959:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 960:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // increment usage statistics
 961:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (schedule_vars.currentScheduleEntry->numTx==0xFF) {
 3344              		.loc 1 961 0
 3345 0fe0 444B     		ldr	r3, .L217
 3346 0fe2 D3F8F432 		ldr	r3, [r3, #756]
 3347 0fe6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 3348 0fe8 FF2B     		cmp	r3, #255
 3349 0fea 13D1     		bne	.L209
 962:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         schedule_vars.currentScheduleEntry->numTx/=2;
 3350              		.loc 1 962 0
 3351 0fec 414B     		ldr	r3, .L217
 3352 0fee D3F8F432 		ldr	r3, [r3, #756]
 3353 0ff2 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 3354 0ff4 3F4B     		ldr	r3, .L217
 3355 0ff6 D3F8F432 		ldr	r3, [r3, #756]
 3356 0ffa 5208     		lsrs	r2, r2, #1
 3357 0ffc D2B2     		uxtb	r2, r2
 3358 0ffe DA75     		strb	r2, [r3, #23]
 963:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         schedule_vars.currentScheduleEntry->numTxACK/=2;
 3359              		.loc 1 963 0
 3360 1000 3C4B     		ldr	r3, .L217
 3361 1002 D3F8F432 		ldr	r3, [r3, #756]
 3362 1006 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 3363 1008 3A4B     		ldr	r3, .L217
 3364 100a D3F8F432 		ldr	r3, [r3, #756]
 3365 100e 5208     		lsrs	r2, r2, #1
 3366 1010 D2B2     		uxtb	r2, r2
 3367 1012 1A76     		strb	r2, [r3, #24]
 3368              	.L209:
 964:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 965:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     schedule_vars.currentScheduleEntry->numTx++;
 3369              		.loc 1 965 0
 3370 1014 374B     		ldr	r3, .L217
 3371 1016 D3F8F432 		ldr	r3, [r3, #756]
 3372 101a DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 3373 101c 0132     		adds	r2, r2, #1
 3374 101e D2B2     		uxtb	r2, r2
 3375 1020 DA75     		strb	r2, [r3, #23]
 966:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (succesfullTx==TRUE) {
 3376              		.loc 1 966 0
 3377 1022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3378 1024 002B     		cmp	r3, #0
 3379 1026 06D0     		beq	.L210
 967:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         schedule_vars.currentScheduleEntry->numTxACK++;
 3380              		.loc 1 967 0
 3381 1028 324B     		ldr	r3, .L217
 3382 102a D3F8F432 		ldr	r3, [r3, #756]
 3383 102e 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 3384 1030 0132     		adds	r2, r2, #1
 3385 1032 D2B2     		uxtb	r2, r2
 3386 1034 1A76     		strb	r2, [r3, #24]
 3387              	.L210:
 968:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 969:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 970:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // update last used timestamp
 971:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     memcpy(&schedule_vars.currentScheduleEntry->lastUsedAsn, asnTimestamp, sizeof(asn_t));
 3388              		.loc 1 971 0
 3389 1036 2F4B     		ldr	r3, .L217
 3390 1038 D3F8F432 		ldr	r3, [r3, #756]
 3391 103c 1933     		adds	r3, r3, #25
 3392 103e 0522     		movs	r2, #5
 3393 1040 7968     		ldr	r1, [r7, #4]
 3394 1042 1846     		mov	r0, r3
 3395 1044 FFF7FEFF 		bl	memcpy
 972:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 973:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // update this backoff parameters for shared slots
 974:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (schedule_vars.currentScheduleEntry->shared==TRUE) {
 3396              		.loc 1 974 0
 3397 1048 2A4B     		ldr	r3, .L217
 3398 104a D3F8F432 		ldr	r3, [r3, #756]
 3399 104e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3400 1050 002B     		cmp	r3, #0
 3401 1052 48D0     		beq	.L211
 975:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if (succesfullTx==TRUE) {
 3402              		.loc 1 975 0
 3403 1054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3404 1056 002B     		cmp	r3, #0
 3405 1058 16D0     		beq	.L212
 976:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.currentScheduleEntry->neighbor.type==ADDR_ANYCAST){
 3406              		.loc 1 976 0
 3407 105a 264B     		ldr	r3, .L217
 3408 105c D3F8F432 		ldr	r3, [r3, #756]
 3409 1060 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3410 1062 062B     		cmp	r3, #6
 3411 1064 08D1     		bne	.L213
 977:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 // reset backoffExponent
 978:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.backoffExponenton     = MINBE-1;
 3412              		.loc 1 978 0
 3413 1066 234B     		ldr	r3, .L217
 3414 1068 0122     		movs	r2, #1
 3415 106a 83F8FE22 		strb	r2, [r3, #766]
 979:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 // reset backoff
 980:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.backoff               = 0;
 3416              		.loc 1 980 0
 3417 106e 214B     		ldr	r3, .L217
 3418 1070 0022     		movs	r2, #0
 3419 1072 83F8FF22 		strb	r2, [r3, #767]
 3420 1076 36E0     		b	.L211
 3421              	.L213:
 981:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             } else {
 982:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 neighbors_resetBackoff(&schedule_vars.currentScheduleEntry->neighbor);
 3422              		.loc 1 982 0
 3423 1078 1E4B     		ldr	r3, .L217
 3424 107a D3F8F432 		ldr	r3, [r3, #756]
 3425 107e 0533     		adds	r3, r3, #5
 3426 1080 1846     		mov	r0, r3
 3427 1082 FFF7FEFF 		bl	neighbors_resetBackoff
 3428 1086 2EE0     		b	.L211
 3429              	.L212:
 983:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 984:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         } else {
 985:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             if (schedule_vars.currentScheduleEntry->neighbor.type==ADDR_ANYCAST){
 3430              		.loc 1 985 0
 3431 1088 1A4B     		ldr	r3, .L217
 3432 108a D3F8F432 		ldr	r3, [r3, #756]
 3433 108e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3434 1090 062B     		cmp	r3, #6
 3435 1092 21D1     		bne	.L215
 986:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 // increase the backoffExponent
 987:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 if (schedule_vars.backoffExponenton<MAXBE) {
 3436              		.loc 1 987 0
 3437 1094 174B     		ldr	r3, .L217
 3438 1096 93F8FE32 		ldrb	r3, [r3, #766]	@ zero_extendqisi2
 3439 109a 042B     		cmp	r3, #4
 3440 109c 07D8     		bhi	.L216
 988:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                     schedule_vars.backoffExponenton++;
 3441              		.loc 1 988 0
 3442 109e 154B     		ldr	r3, .L217
 3443 10a0 93F8FE32 		ldrb	r3, [r3, #766]	@ zero_extendqisi2
 3444 10a4 0133     		adds	r3, r3, #1
 3445 10a6 DAB2     		uxtb	r2, r3
 3446 10a8 124B     		ldr	r3, .L217
 3447 10aa 83F8FE22 		strb	r2, [r3, #766]
 3448              	.L216:
 989:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 }
 990:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 // set the backoff to a random value in [0..2^BE]
 991:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 schedule_vars.backoff       = openrandom_get16b()%(1<<schedule_vars.backoffExponent
 3449              		.loc 1 991 0
 3450 10ae FFF7FEFF 		bl	openrandom_get16b
 3451 10b2 0346     		mov	r3, r0
 3452 10b4 5AB2     		sxtb	r2, r3
 3453 10b6 0F4B     		ldr	r3, .L217
 3454 10b8 93F8FE32 		ldrb	r3, [r3, #766]	@ zero_extendqisi2
 3455 10bc 1946     		mov	r1, r3
 3456 10be 0123     		movs	r3, #1
 3457 10c0 8B40     		lsls	r3, r3, r1
 3458 10c2 DBB2     		uxtb	r3, r3
 3459 10c4 013B     		subs	r3, r3, #1
 3460 10c6 DBB2     		uxtb	r3, r3
 3461 10c8 5BB2     		sxtb	r3, r3
 3462 10ca 1340     		ands	r3, r3, r2
 3463 10cc 5BB2     		sxtb	r3, r3
 3464 10ce DAB2     		uxtb	r2, r3
 3465 10d0 084B     		ldr	r3, .L217
 3466 10d2 83F8FF22 		strb	r2, [r3, #767]
 3467 10d6 06E0     		b	.L211
 3468              	.L215:
 992:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             } else {
 993:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****                 neighbors_updateBackoff(&schedule_vars.currentScheduleEntry->neighbor);
 3469              		.loc 1 993 0
 3470 10d8 064B     		ldr	r3, .L217
 3471 10da D3F8F432 		ldr	r3, [r3, #756]
 3472 10de 0533     		adds	r3, r3, #5
 3473 10e0 1846     		mov	r0, r3
 3474 10e2 FFF7FEFF 		bl	neighbors_updateBackoff
 3475              	.L211:
 994:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             }
 995:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
 996:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
 997:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
 998:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3476              		.loc 1 998 0
 3477 10e6 FFF7FEFF 		bl	IntMasterEnable
 999:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3478              		.loc 1 999 0
 3479 10ea 00BF     		nop
 3480 10ec 0837     		adds	r7, r7, #8
 3481              		.cfi_def_cfa_offset 8
 3482 10ee BD46     		mov	sp, r7
 3483              		.cfi_def_cfa_register 13
 3484              		@ sp needed
 3485 10f0 80BD     		pop	{r7, pc}
 3486              	.L218:
 3487 10f2 00BF     		.align	2
 3488              	.L217:
 3489 10f4 00000000 		.word	schedule_vars
 3490              		.cfi_endproc
 3491              	.LFE36:
 3493              		.align	1
 3494              		.global	schedule_getOneCellAfterOffset
 3495              		.syntax unified
 3496              		.thumb
 3497              		.thumb_func
 3498              		.fpu softvfp
 3500              	schedule_getOneCellAfterOffset:
 3501              	.LFB37:
1000:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1001:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** bool schedule_getOneCellAfterOffset(uint8_t metadata,uint8_t offset,open_addr_t* neighbor, uint8_t 
 3502              		.loc 1 1001 0
 3503              		.cfi_startproc
 3504              		@ args = 8, pretend = 0, frame = 24
 3505              		@ frame_needed = 1, uses_anonymous_args = 0
 3506 10f8 80B5     		push	{r7, lr}
 3507              		.cfi_def_cfa_offset 8
 3508              		.cfi_offset 7, -8
 3509              		.cfi_offset 14, -4
 3510 10fa 86B0     		sub	sp, sp, #24
 3511              		.cfi_def_cfa_offset 32
 3512 10fc 00AF     		add	r7, sp, #0
 3513              		.cfi_def_cfa_register 7
 3514 10fe 3A60     		str	r2, [r7]
 3515 1100 1A46     		mov	r2, r3
 3516 1102 0346     		mov	r3, r0
 3517 1104 FB71     		strb	r3, [r7, #7]
 3518 1106 0B46     		mov	r3, r1
 3519 1108 BB71     		strb	r3, [r7, #6]
 3520 110a 1346     		mov	r3, r2
 3521 110c 7B71     		strb	r3, [r7, #5]
1002:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     bool returnVal;
1003:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     scheduleEntry_t* scheduleWalker;
1004:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     cellType_t type;
1005:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     INTERRUPT_DECLARATION();
1006:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     DISABLE_INTERRUPTS();
 3522              		.loc 1 1006 0
 3523 110e FFF7FEFF 		bl	IntMasterDisable
1007:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1008:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     // translate cellOptions to cell type
1009:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (cellOptions == CELLOPTIONS_TX){
 3524              		.loc 1 1009 0
 3525 1112 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3526 1114 012B     		cmp	r3, #1
 3527 1116 01D1     		bne	.L220
1010:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         type = CELLTYPE_TX;
 3528              		.loc 1 1010 0
 3529 1118 0123     		movs	r3, #1
 3530 111a FB73     		strb	r3, [r7, #15]
 3531              	.L220:
1011:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
1012:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (cellOptions == CELLOPTIONS_RX){
 3532              		.loc 1 1012 0
 3533 111c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3534 111e 022B     		cmp	r3, #2
 3535 1120 01D1     		bne	.L221
1013:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         type = CELLTYPE_RX;
 3536              		.loc 1 1013 0
 3537 1122 0223     		movs	r3, #2
 3538 1124 FB73     		strb	r3, [r7, #15]
 3539              	.L221:
1014:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
1015:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     if (cellOptions == (CELLOPTIONS_TX | CELLOPTIONS_RX | CELLOPTIONS_SHARED)){
 3540              		.loc 1 1015 0
 3541 1126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3542 1128 072B     		cmp	r3, #7
 3543 112a 01D1     		bne	.L222
1016:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         type = CELLTYPE_TXRX;
 3544              		.loc 1 1016 0
 3545 112c 0323     		movs	r3, #3
 3546 112e FB73     		strb	r3, [r7, #15]
 3547              	.L222:
1017:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     }
1018:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1019:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     returnVal      = FALSE;
 3548              		.loc 1 1019 0
 3549 1130 0023     		movs	r3, #0
 3550 1132 FB75     		strb	r3, [r7, #23]
1020:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     scheduleWalker = &schedule_vars.scheduleBuf[0]; // fisrt entry record slotoffset 0
 3551              		.loc 1 1020 0
 3552 1134 134B     		ldr	r3, .L227
 3553 1136 3B61     		str	r3, [r7, #16]
 3554              	.L225:
1021:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     do {
1022:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         if(type == scheduleWalker->type && scheduleWalker->slotOffset >= offset){
 3555              		.loc 1 1022 0
 3556 1138 3B69     		ldr	r3, [r7, #16]
 3557 113a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3558 113c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3559 113e 9A42     		cmp	r2, r3
 3560 1140 11D1     		bne	.L223
 3561              		.loc 1 1022 0 is_stmt 0 discriminator 1
 3562 1142 3B69     		ldr	r3, [r7, #16]
 3563 1144 1A88     		ldrh	r2, [r3]
 3564 1146 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3565 1148 9BB2     		uxth	r3, r3
 3566 114a 9A42     		cmp	r2, r3
 3567 114c 0BD3     		bcc	.L223
1023:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             *slotoffset    = scheduleWalker->slotOffset;
 3568              		.loc 1 1023 0 is_stmt 1
 3569 114e 3B69     		ldr	r3, [r7, #16]
 3570 1150 1A88     		ldrh	r2, [r3]
 3571 1152 3B6A     		ldr	r3, [r7, #32]
 3572 1154 1A80     		strh	r2, [r3]	@ movhi
1024:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             *channeloffset = scheduleWalker->channelOffset;
 3573              		.loc 1 1024 0
 3574 1156 3B69     		ldr	r3, [r7, #16]
 3575 1158 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3576 115a 9AB2     		uxth	r2, r3
 3577 115c 7B6A     		ldr	r3, [r7, #36]
 3578 115e 1A80     		strh	r2, [r3]	@ movhi
1025:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             returnVal      = TRUE;
 3579              		.loc 1 1025 0
 3580 1160 0123     		movs	r3, #1
 3581 1162 FB75     		strb	r3, [r7, #23]
1026:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****             break;
 3582              		.loc 1 1026 0
 3583 1164 06E0     		b	.L224
 3584              	.L223:
1027:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         }
1028:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****         scheduleWalker = scheduleWalker->next;
 3585              		.loc 1 1028 0
 3586 1166 3B69     		ldr	r3, [r7, #16]
 3587 1168 1B6A     		ldr	r3, [r3, #32]
 3588 116a 3B61     		str	r3, [r7, #16]
1029:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    }while(scheduleWalker!=&schedule_vars.scheduleBuf[0]);
 3589              		.loc 1 1029 0
 3590 116c 3B69     		ldr	r3, [r7, #16]
 3591 116e 054A     		ldr	r2, .L227
 3592 1170 9342     		cmp	r3, r2
 3593 1172 E1D1     		bne	.L225
 3594              	.L224:
1030:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1031:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     ENABLE_INTERRUPTS();
 3595              		.loc 1 1031 0
 3596 1174 FFF7FEFF 		bl	IntMasterEnable
1032:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1033:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****    return returnVal;
 3597              		.loc 1 1033 0
 3598 1178 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1034:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3599              		.loc 1 1034 0
 3600 117a 1846     		mov	r0, r3
 3601 117c 1837     		adds	r7, r7, #24
 3602              		.cfi_def_cfa_offset 8
 3603 117e BD46     		mov	sp, r7
 3604              		.cfi_def_cfa_register 13
 3605              		@ sp needed
 3606 1180 80BD     		pop	{r7, pc}
 3607              	.L228:
 3608 1182 00BF     		.align	2
 3609              	.L227:
 3610 1184 00000000 		.word	schedule_vars
 3611              		.cfi_endproc
 3612              	.LFE37:
 3614              		.align	1
 3615              		.global	schedule_resetEntry
 3616              		.syntax unified
 3617              		.thumb
 3618              		.thumb_func
 3619              		.fpu softvfp
 3621              	schedule_resetEntry:
 3622              	.LFB38:
1035:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1036:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** //=========================== private =========================================
1037:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1038:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** /**
1039:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** \pre This function assumes interrupts are already disabled.
1040:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** */
1041:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** void schedule_resetEntry(scheduleEntry_t* e) {
 3623              		.loc 1 1041 0
 3624              		.cfi_startproc
 3625              		@ args = 0, pretend = 0, frame = 8
 3626              		@ frame_needed = 1, uses_anonymous_args = 0
 3627 1188 80B5     		push	{r7, lr}
 3628              		.cfi_def_cfa_offset 8
 3629              		.cfi_offset 7, -8
 3630              		.cfi_offset 14, -4
 3631 118a 82B0     		sub	sp, sp, #8
 3632              		.cfi_def_cfa_offset 16
 3633 118c 00AF     		add	r7, sp, #0
 3634              		.cfi_def_cfa_register 7
 3635 118e 7860     		str	r0, [r7, #4]
1042:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->slotOffset             = 0;
 3636              		.loc 1 1042 0
 3637 1190 7B68     		ldr	r3, [r7, #4]
 3638 1192 0022     		movs	r2, #0
 3639 1194 1A80     		strh	r2, [r3]	@ movhi
1043:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->type                   = CELLTYPE_OFF;
 3640              		.loc 1 1043 0
 3641 1196 7B68     		ldr	r3, [r7, #4]
 3642 1198 0022     		movs	r2, #0
 3643 119a 9A70     		strb	r2, [r3, #2]
1044:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->shared                 = FALSE;
 3644              		.loc 1 1044 0
 3645 119c 7B68     		ldr	r3, [r7, #4]
 3646 119e 0022     		movs	r2, #0
 3647 11a0 DA70     		strb	r2, [r3, #3]
1045:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->channelOffset          = 0;
 3648              		.loc 1 1045 0
 3649 11a2 7B68     		ldr	r3, [r7, #4]
 3650 11a4 0022     		movs	r2, #0
 3651 11a6 1A71     		strb	r2, [r3, #4]
1046:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1047:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->neighbor.type          = ADDR_NONE;
 3652              		.loc 1 1047 0
 3653 11a8 7B68     		ldr	r3, [r7, #4]
 3654 11aa 0022     		movs	r2, #0
 3655 11ac 5A71     		strb	r2, [r3, #5]
1048:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     memset(&e->neighbor.addr_64b[0], 0x00, sizeof(e->neighbor.addr_64b));
 3656              		.loc 1 1048 0
 3657 11ae 7B68     		ldr	r3, [r7, #4]
 3658 11b0 0633     		adds	r3, r3, #6
 3659 11b2 0822     		movs	r2, #8
 3660 11b4 0021     		movs	r1, #0
 3661 11b6 1846     		mov	r0, r3
 3662 11b8 FFF7FEFF 		bl	memset
1049:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** 
1050:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->numRx                  = 0;
 3663              		.loc 1 1050 0
 3664 11bc 7B68     		ldr	r3, [r7, #4]
 3665 11be 0022     		movs	r2, #0
 3666 11c0 9A75     		strb	r2, [r3, #22]
1051:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->numTx                  = 0;
 3667              		.loc 1 1051 0
 3668 11c2 7B68     		ldr	r3, [r7, #4]
 3669 11c4 0022     		movs	r2, #0
 3670 11c6 DA75     		strb	r2, [r3, #23]
1052:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->numTxACK               = 0;
 3671              		.loc 1 1052 0
 3672 11c8 7B68     		ldr	r3, [r7, #4]
 3673 11ca 0022     		movs	r2, #0
 3674 11cc 1A76     		strb	r2, [r3, #24]
1053:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->lastUsedAsn.bytes0and1 = 0;
 3675              		.loc 1 1053 0
 3676 11ce 7B68     		ldr	r3, [r7, #4]
 3677 11d0 0022     		movs	r2, #0
 3678 11d2 9A83     		strh	r2, [r3, #28]	@ movhi
1054:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->lastUsedAsn.bytes2and3 = 0;
 3679              		.loc 1 1054 0
 3680 11d4 7B68     		ldr	r3, [r7, #4]
 3681 11d6 0022     		movs	r2, #0
 3682 11d8 5A83     		strh	r2, [r3, #26]	@ movhi
1055:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->lastUsedAsn.byte4      = 0;
 3683              		.loc 1 1055 0
 3684 11da 7B68     		ldr	r3, [r7, #4]
 3685 11dc 0022     		movs	r2, #0
 3686 11de 5A76     		strb	r2, [r3, #25]
1056:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c ****     e->next                   = NULL;
 3687              		.loc 1 1056 0
 3688 11e0 7B68     		ldr	r3, [r7, #4]
 3689 11e2 0022     		movs	r2, #0
 3690 11e4 1A62     		str	r2, [r3, #32]
1057:build\openmote-cc2538_armgcc\openstack\02b-MAChigh/schedule.c **** }
 3691              		.loc 1 1057 0
 3692 11e6 00BF     		nop
 3693 11e8 0837     		adds	r7, r7, #8
 3694              		.cfi_def_cfa_offset 8
 3695 11ea BD46     		mov	sp, r7
 3696              		.cfi_def_cfa_register 13
 3697              		@ sp needed
 3698 11ec 80BD     		pop	{r7, pc}
 3699              		.cfi_endproc
 3700              	.LFE38:
 3702              	.Letext0:
 3703              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3704              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3705              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3706              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3707              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 3708              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3709              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 3710              		.file 9 "inc/opendefs.h"
 3711              		.file 10 "build\\openmote-cc2538_armgcc\\openstack\\02b-MAChigh\\schedule.h"
 3712              		.file 11 "openstack\\cross-layers/idmanager.h"
 3713              		.file 12 "openstack\\02a-MAClow/IEEE802154E.h"
 3714              		.file 13 "openstack\\03b-IPv6/icmpv6rpl.h"
DEFINED SYMBOLS
                            *ABS*:00000000 schedule.c
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:44     .rodata:00000030 linklocalprefix
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:56     .rodata:00000038 chTemplate_default
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:76     .rodata:00000048 ebIEsBytestream
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:108    .rodata:00000064 all_routers_multicast
                            *COM*:00000304 schedule_vars
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:127    .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:134    .text:00000000 schedule_init
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3621   .text:00001188 schedule_resetEntry
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:216    .text:00000064 schedule_startDAGroot
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:205    .text:00000060 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:209    .text:00000064 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:555    .text:0000024c schedule_setFrameLength
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:610    .text:00000280 schedule_setFrameHandle
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:656    .text:000002a8 schedule_setFrameNumber
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:818    .text:00000364 schedule_addActiveSlot
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:292    .text:000000c8 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:296    .text:000000cc $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:303    .text:000000cc debugPrint_schedule
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:492    .text:00000218 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:496    .text:0000021c $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:503    .text:0000021c debugPrint_backoff
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:544    .text:00000248 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:548    .text:0000024c $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:599    .text:0000027c $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:603    .text:00000280 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:645    .text:000002a4 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:649    .text:000002a8 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:691    .text:000002cc $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:695    .text:000002d0 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:702    .text:000002d0 schedule_getSlotInfo
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:807    .text:00000360 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:811    .text:00000364 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1107   .text:00000518 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1111   .text:0000051c $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1118   .text:0000051c schedule_removeActiveSlot
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1281   .text:00000608 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1285   .text:0000060c $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1292   .text:0000060c schedule_isSlotOffsetAvailable
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1365   .text:00000668 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1369   .text:0000066c $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1376   .text:0000066c schedule_removeAllManagedUnicastCellsToNeighbor
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1474   .text:000006f4 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1478   .text:000006f8 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1485   .text:000006f8 schedule_removeAllAutonomousTxRxCellUnicast
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1588   .text:00000788 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1592   .text:0000078c $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1599   .text:0000078c schedule_getNumberOfFreeEntries
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1664   .text:000007d8 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1668   .text:000007dc $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1675   .text:000007dc schedule_getNumberOfManagedTxCells
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1773   .text:00000864 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1777   .text:00000868 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1784   .text:00000868 schedule_isNumTxWrapped
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1873   .text:000008dc $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1877   .text:000008e0 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:1884   .text:000008e0 schedule_getCellsToBeRelocated
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2112   .text:00000a54 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2116   .text:00000a58 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2123   .text:00000a58 schedule_hasAutonomousTxRxCellUnicast
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2231   .text:00000aec $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2235   .text:00000af0 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2242   .text:00000af0 schedule_getAutonomousTxRxCellUnicastNeighbor
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2363   .text:00000ba0 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2367   .text:00000ba4 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2374   .text:00000ba4 schedule_hasManagedTxCellToNeighbor
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2484   .text:00000c40 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2488   .text:00000c44 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2495   .text:00000c44 schedule_hasNonParentAutonomousTxRxCellUnicast
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2619   .text:00000cfc $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2623   .text:00000d00 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2630   .text:00000d00 schedule_getAutonomousTxRxCellAnycast
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2735   .text:00000d90 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2739   .text:00000d94 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2746   .text:00000d94 schedule_syncSlotOffset
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2801   .text:00000dc8 schedule_advanceSlot
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2790   .text:00000dc4 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2794   .text:00000dc8 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2829   .text:00000de8 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2833   .text:00000dec $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2840   .text:00000dec schedule_getNextActiveSlotOffset
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2877   .text:00000e10 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2881   .text:00000e14 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2888   .text:00000e14 schedule_getFrameLength
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2923   .text:00000e34 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2927   .text:00000e38 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2934   .text:00000e38 schedule_getType
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2970   .text:00000e5c $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2974   .text:00000e60 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:2981   .text:00000e60 schedule_getShared
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3017   .text:00000e84 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3021   .text:00000e88 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3028   .text:00000e88 schedule_getNeighbor
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3066   .text:00000eb4 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3070   .text:00000eb8 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3077   .text:00000eb8 schedule_getChannelOffset
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3113   .text:00000edc $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3117   .text:00000ee0 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3124   .text:00000ee0 schedule_getOkToSend
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3217   .text:00000f6c $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3221   .text:00000f70 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3228   .text:00000f70 schedule_resetBackoff
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3258   .text:00000f90 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3262   .text:00000f94 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3269   .text:00000f94 schedule_indicateRx
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3314   .text:00000fcc $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3318   .text:00000fd0 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3325   .text:00000fd0 schedule_indicateTx
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3489   .text:000010f4 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3493   .text:000010f8 $t
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3500   .text:000010f8 schedule_getOneCellAfterOffset
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3610   .text:00001184 $d
C:\Users\Lee\AppData\Local\Temp\cclpSBuf.s:3614   .text:00001188 $t
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.schedule.h.2.655275e038307b96d02df4174b9f26be
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.openserial.h.32.ea1006cc0a4d06130c082222e630581b
                           .group:00000000 wm4.opentimers.h.8.eb1cab84a6e82ba9569a1990291c92ba
                           .group:00000000 wm4.sixtop.h.17.5b7dfb7ceba80358fb88ed53e947efbb
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.msf.h.2.f85db7704dc29e6182d0ed30c629097b
                           .group:00000000 wm4.IEEE802154E.h.31.0ae4fc33f8fea842f27863b9e73e066e
                           .group:00000000 wm4.icmpv6rpl.h.2.f31802bcce2a0808bf5db39ce34f4322
                           .group:00000000 wm4.neighbors.h.2.dc73553d81c7690511fc50397b17d6d5

UNDEFINED SYMBOLS
memset
idmanager_getIsDAGroot
openserial_printStatus
IntMasterDisable
IntMasterEnable
memcpy
openserial_printError
ieee154e_getAsn
packetfunctions_sameAddress
openserial_printCritical
msf_setHashCollisionFlag
neighbors_decreaseBackoff
neighbors_backoffHitZero
neighbors_resetBackoff
openrandom_get16b
neighbors_updateBackoff
