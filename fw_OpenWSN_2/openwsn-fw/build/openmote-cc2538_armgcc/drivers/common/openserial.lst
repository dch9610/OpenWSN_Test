   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"openserial.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  19              	rreg_uriquery:
  20 0000 683D7563 		.ascii	"h=ucb\000"
  20      6200
  21 0006 0000     		.align	2
  24              	infoBoardname:
  25 0008 43433235 		.ascii	"CC2538\000"
  25      333800
  26 000f 00       		.align	2
  29              	infouCName:
  30 0010 43433235 		.ascii	"CC2538\000"
  30      333800
  31 0017 00       		.align	2
  34              	infoRadioName:
  35 0018 43433235 		.ascii	"CC2538 SoC\000"
  35      33382053 
  35      6F4300
  36 0023 00       		.align	2
  39              	infoStackName:
  40 0024 4F70656E 		.ascii	"OpenWSN \000"
  40      57534E20 
  40      00
  41 002d 000000   		.align	2
  44              	chTemplate_default:
  45 0030 05       		.byte	5
  46 0031 06       		.byte	6
  47 0032 0C       		.byte	12
  48 0033 07       		.byte	7
  49 0034 0F       		.byte	15
  50 0035 04       		.byte	4
  51 0036 0E       		.byte	14
  52 0037 0B       		.byte	11
  53 0038 08       		.byte	8
  54 0039 00       		.byte	0
  55 003a 01       		.byte	1
  56 003b 02       		.byte	2
  57 003c 0D       		.byte	13
  58 003d 03       		.byte	3
  59 003e 09       		.byte	9
  60 003f 0A       		.byte	10
  61              		.align	2
  64              	ebIEsBytestream:
  65 0040 1A       		.byte	26
  66 0041 88       		.byte	-120
  67 0042 06       		.byte	6
  68 0043 1A       		.byte	26
  69 0044 00       		.byte	0
  70 0045 00       		.byte	0
  71 0046 00       		.byte	0
  72 0047 00       		.byte	0
  73 0048 00       		.byte	0
  74 0049 00       		.byte	0
  75 004a 01       		.byte	1
  76 004b 1C       		.byte	28
  77 004c 00       		.byte	0
  78 004d 01       		.byte	1
  79 004e C8       		.byte	-56
  80 004f 00       		.byte	0
  81 0050 0A       		.byte	10
  82 0051 1B       		.byte	27
  83 0052 01       		.byte	1
  84 0053 00       		.byte	0
  85 0054 0D       		.byte	13
  86 0055 00       		.byte	0
  87 0056 01       		.byte	1
  88 0057 00       		.byte	0
  89 0058 00       		.byte	0
  90 0059 00       		.byte	0
  91 005a 00       		.byte	0
  92 005b 0F       		.byte	15
  93              		.align	2
  96              	all_routers_multicast:
  97 005c FF       		.byte	-1
  98 005d 02       		.byte	2
  99 005e 00       		.byte	0
 100 005f 00       		.byte	0
 101 0060 00       		.byte	0
 102 0061 00       		.byte	0
 103 0062 00       		.byte	0
 104 0063 00       		.byte	0
 105 0064 00       		.byte	0
 106 0065 00       		.byte	0
 107 0066 00       		.byte	0
 108 0067 00       		.byte	0
 109 0068 00       		.byte	0
 110 0069 00       		.byte	0
 111 006a 00       		.byte	0
 112 006b 1A       		.byte	26
 113              		.align	2
 116              	linklocalprefix:
 117 006c FE       		.byte	-2
 118 006d 80       		.byte	-128
 119 006e 00       		.byte	0
 120 006f 00       		.byte	0
 121 0070 00       		.byte	0
 122 0071 00       		.byte	0
 123 0072 00       		.byte	0
 124 0073 00       		.byte	0
 125              		.align	2
 128              	fcstab:
 129 0074 0000     		.short	0
 130 0076 8911     		.short	4489
 131 0078 1223     		.short	8978
 132 007a 9B32     		.short	12955
 133 007c 2446     		.short	17956
 134 007e AD57     		.short	22445
 135 0080 3665     		.short	25910
 136 0082 BF74     		.short	29887
 137 0084 488C     		.short	-29624
 138 0086 C19D     		.short	-25151
 139 0088 5AAF     		.short	-20646
 140 008a D3BE     		.short	-16685
 141 008c 6CCA     		.short	-13716
 142 008e E5DB     		.short	-9243
 143 0090 7EE9     		.short	-5762
 144 0092 F7F8     		.short	-1801
 145 0094 8110     		.short	4225
 146 0096 0801     		.short	264
 147 0098 9333     		.short	13203
 148 009a 1A22     		.short	8730
 149 009c A556     		.short	22181
 150 009e 2C47     		.short	18220
 151 00a0 B775     		.short	30135
 152 00a2 3E64     		.short	25662
 153 00a4 C99C     		.short	-25399
 154 00a6 408D     		.short	-29376
 155 00a8 DBBF     		.short	-16421
 156 00aa 52AE     		.short	-20910
 157 00ac EDDA     		.short	-9491
 158 00ae 64CB     		.short	-13468
 159 00b0 FFF9     		.short	-1537
 160 00b2 76E8     		.short	-6026
 161 00b4 0221     		.short	8450
 162 00b6 8B30     		.short	12427
 163 00b8 1002     		.short	528
 164 00ba 9913     		.short	5017
 165 00bc 2667     		.short	26406
 166 00be AF76     		.short	30383
 167 00c0 3444     		.short	17460
 168 00c2 BD55     		.short	21949
 169 00c4 4AAD     		.short	-21174
 170 00c6 C3BC     		.short	-17213
 171 00c8 588E     		.short	-29096
 172 00ca D19F     		.short	-24623
 173 00cc 6EEB     		.short	-5266
 174 00ce E7FA     		.short	-1305
 175 00d0 7CC8     		.short	-14212
 176 00d2 F5D9     		.short	-9739
 177 00d4 8331     		.short	12675
 178 00d6 0A20     		.short	8202
 179 00d8 9112     		.short	4753
 180 00da 1803     		.short	792
 181 00dc A777     		.short	30631
 182 00de 2E66     		.short	26158
 183 00e0 B554     		.short	21685
 184 00e2 3C45     		.short	17724
 185 00e4 CBBD     		.short	-16949
 186 00e6 42AC     		.short	-21438
 187 00e8 D99E     		.short	-24871
 188 00ea 508F     		.short	-28848
 189 00ec EFFB     		.short	-1041
 190 00ee 66EA     		.short	-5530
 191 00f0 FDD8     		.short	-9987
 192 00f2 74C9     		.short	-13964
 193 00f4 0442     		.short	16900
 194 00f6 8D53     		.short	21389
 195 00f8 1661     		.short	24854
 196 00fa 9F70     		.short	28831
 197 00fc 2004     		.short	1056
 198 00fe A915     		.short	5545
 199 0100 3227     		.short	10034
 200 0102 BB36     		.short	14011
 201 0104 4CCE     		.short	-12724
 202 0106 C5DF     		.short	-8251
 203 0108 5EED     		.short	-4770
 204 010a D7FC     		.short	-809
 205 010c 6888     		.short	-30616
 206 010e E199     		.short	-26143
 207 0110 7AAB     		.short	-21638
 208 0112 F3BA     		.short	-17677
 209 0114 8552     		.short	21125
 210 0116 0C43     		.short	17164
 211 0118 9771     		.short	29079
 212 011a 1E60     		.short	24606
 213 011c A114     		.short	5281
 214 011e 2805     		.short	1320
 215 0120 B337     		.short	14259
 216 0122 3A26     		.short	9786
 217 0124 CDDE     		.short	-8499
 218 0126 44CF     		.short	-12476
 219 0128 DFFD     		.short	-545
 220 012a 56EC     		.short	-5034
 221 012c E998     		.short	-26391
 222 012e 6089     		.short	-30368
 223 0130 FBBB     		.short	-17413
 224 0132 72AA     		.short	-21902
 225 0134 0663     		.short	25350
 226 0136 8F72     		.short	29327
 227 0138 1440     		.short	16404
 228 013a 9D51     		.short	20893
 229 013c 2225     		.short	9506
 230 013e AB34     		.short	13483
 231 0140 3006     		.short	1584
 232 0142 B917     		.short	6073
 233 0144 4EEF     		.short	-4274
 234 0146 C7FE     		.short	-313
 235 0148 5CCC     		.short	-13220
 236 014a D5DD     		.short	-8747
 237 014c 6AA9     		.short	-22166
 238 014e E3B8     		.short	-18205
 239 0150 788A     		.short	-30088
 240 0152 F19B     		.short	-25615
 241 0154 8773     		.short	29575
 242 0156 0E62     		.short	25102
 243 0158 9550     		.short	20629
 244 015a 1C41     		.short	16668
 245 015c A335     		.short	13731
 246 015e 2A24     		.short	9258
 247 0160 B116     		.short	5809
 248 0162 3807     		.short	1848
 249 0164 CFFF     		.short	-49
 250 0166 46EE     		.short	-4538
 251 0168 DDDC     		.short	-8995
 252 016a 54CD     		.short	-12972
 253 016c EBB9     		.short	-17941
 254 016e 62A8     		.short	-22430
 255 0170 F99A     		.short	-25863
 256 0172 708B     		.short	-29840
 257 0174 0884     		.short	-31736
 258 0176 8195     		.short	-27263
 259 0178 1AA7     		.short	-22758
 260 017a 93B6     		.short	-18797
 261 017c 2CC2     		.short	-15828
 262 017e A5D3     		.short	-11355
 263 0180 3EE1     		.short	-7874
 264 0182 B7F0     		.short	-3913
 265 0184 4008     		.short	2112
 266 0186 C919     		.short	6601
 267 0188 522B     		.short	11090
 268 018a DB3A     		.short	15067
 269 018c 644E     		.short	20068
 270 018e ED5F     		.short	24557
 271 0190 766D     		.short	28022
 272 0192 FF7C     		.short	31999
 273 0194 8994     		.short	-27511
 274 0196 0085     		.short	-31488
 275 0198 9BB7     		.short	-18533
 276 019a 12A6     		.short	-23022
 277 019c ADD2     		.short	-11603
 278 019e 24C3     		.short	-15580
 279 01a0 BFF1     		.short	-3649
 280 01a2 36E0     		.short	-8138
 281 01a4 C118     		.short	6337
 282 01a6 4809     		.short	2376
 283 01a8 D33B     		.short	15315
 284 01aa 5A2A     		.short	10842
 285 01ac E55E     		.short	24293
 286 01ae 6C4F     		.short	20332
 287 01b0 F77D     		.short	32247
 288 01b2 7E6C     		.short	27774
 289 01b4 0AA5     		.short	-23286
 290 01b6 83B4     		.short	-19325
 291 01b8 1886     		.short	-31208
 292 01ba 9197     		.short	-26735
 293 01bc 2EE3     		.short	-7378
 294 01be A7F2     		.short	-3417
 295 01c0 3CC0     		.short	-16324
 296 01c2 B5D1     		.short	-11851
 297 01c4 4229     		.short	10562
 298 01c6 CB38     		.short	14539
 299 01c8 500A     		.short	2640
 300 01ca D91B     		.short	7129
 301 01cc 666F     		.short	28518
 302 01ce EF7E     		.short	32495
 303 01d0 744C     		.short	19572
 304 01d2 FD5D     		.short	24061
 305 01d4 8BB5     		.short	-19061
 306 01d6 02A4     		.short	-23550
 307 01d8 9996     		.short	-26983
 308 01da 1087     		.short	-30960
 309 01dc AFF3     		.short	-3153
 310 01de 26E2     		.short	-7642
 311 01e0 BDD0     		.short	-12099
 312 01e2 34C1     		.short	-16076
 313 01e4 C339     		.short	14787
 314 01e6 4A28     		.short	10314
 315 01e8 D11A     		.short	6865
 316 01ea 580B     		.short	2904
 317 01ec E77F     		.short	32743
 318 01ee 6E6E     		.short	28270
 319 01f0 F55C     		.short	23797
 320 01f2 7C4D     		.short	19836
 321 01f4 0CC6     		.short	-14836
 322 01f6 85D7     		.short	-10363
 323 01f8 1EE5     		.short	-6882
 324 01fa 97F4     		.short	-2921
 325 01fc 2880     		.short	-32728
 326 01fe A191     		.short	-28255
 327 0200 3AA3     		.short	-23750
 328 0202 B3B2     		.short	-19789
 329 0204 444A     		.short	19012
 330 0206 CD5B     		.short	23501
 331 0208 5669     		.short	26966
 332 020a DF78     		.short	30943
 333 020c 600C     		.short	3168
 334 020e E91D     		.short	7657
 335 0210 722F     		.short	12146
 336 0212 FB3E     		.short	16123
 337 0214 8DD6     		.short	-10611
 338 0216 04C7     		.short	-14588
 339 0218 9FF5     		.short	-2657
 340 021a 16E4     		.short	-7146
 341 021c A990     		.short	-28503
 342 021e 2081     		.short	-32480
 343 0220 BBB3     		.short	-19525
 344 0222 32A2     		.short	-24014
 345 0224 C55A     		.short	23237
 346 0226 4C4B     		.short	19276
 347 0228 D779     		.short	31191
 348 022a 5E68     		.short	26718
 349 022c E11C     		.short	7393
 350 022e 680D     		.short	3432
 351 0230 F33F     		.short	16371
 352 0232 7A2E     		.short	11898
 353 0234 0EE7     		.short	-6386
 354 0236 87F6     		.short	-2425
 355 0238 1CC4     		.short	-15332
 356 023a 95D5     		.short	-10859
 357 023c 2AA1     		.short	-24278
 358 023e A3B0     		.short	-20317
 359 0240 3882     		.short	-32200
 360 0242 B193     		.short	-27727
 361 0244 466B     		.short	27462
 362 0246 CF7A     		.short	31439
 363 0248 5448     		.short	18516
 364 024a DD59     		.short	23005
 365 024c 622D     		.short	11618
 366 024e EB3C     		.short	15595
 367 0250 700E     		.short	3696
 368 0252 F91F     		.short	8185
 369 0254 8FF7     		.short	-2161
 370 0256 06E6     		.short	-6650
 371 0258 9DD4     		.short	-11107
 372 025a 14C5     		.short	-15084
 373 025c ABB1     		.short	-20053
 374 025e 22A0     		.short	-24542
 375 0260 B992     		.short	-27975
 376 0262 3083     		.short	-31952
 377 0264 C77B     		.short	31687
 378 0266 4E6A     		.short	27214
 379 0268 D558     		.short	22741
 380 026a 5C49     		.short	18780
 381 026c E33D     		.short	15843
 382 026e 6A2C     		.short	11370
 383 0270 F11E     		.short	7921
 384 0272 780F     		.short	3960
 385              		.comm	openserial_vars,1252,4
 386              		.text
 387              		.align	1
 388              		.global	openserial_init
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu softvfp
 394              	openserial_init:
 395              	.LFB3:
 396              		.file 1 "build\\openmote-cc2538_armgcc\\drivers\\common\\openserial.c"
   1:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
   2:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Definition of the "openserial" driver.
   3:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
   4:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \author Fabien Chraim <chraim@eecs.berkeley.edu>, March 2012.
   5:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \author Thomas Watteyne <thomas.watteyne@inria.fr>, August 2016.
   6:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
   7:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include <stdio.h>
   8:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include <stdarg.h>
   9:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include <string.h>
  10:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  11:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "opendefs.h"
  12:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openserial.h"
  13:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "scheduler.h"
  14:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "IEEE802154E.h"
  15:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "neighbors.h"
  16:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "sixtop.h"
  17:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "icmpv6echo.h"
  18:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "idmanager.h"
  19:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openqueue.h"
  20:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openbridge.h"
  21:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "leds.h"
  22:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "schedule.h"
  23:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "uart.h"
  24:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "opentimers.h"
  25:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "openhdlc.h"
  26:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "schedule.h"
  27:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "icmpv6rpl.h"
  28:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "icmpv6echo.h"
  29:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "msf.h"
  30:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #include "debugpins.h"
  31:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  32:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== variables =======================================
  33:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  34:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** openserial_vars_t openserial_vars;
  35:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  36:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** enum{
  37:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     TYPE_STR = 0,       //subtype for the printf message
  38:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     TYPE_INT = 1
  39:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** };
  40:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  41:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #define DEBUGPRINT_PERIOD 100 // in ms
  42:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  43:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== prototypes ======================================
  44:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  45:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  46:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // printing
  47:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printInfoErrorCritical(
  48:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     char             severity,
  49:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          calling_component,
  50:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          error_code,
  51:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg1,
  52:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg2
  53:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** );
  54:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  55:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // command handlers
  56:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleRxFrame(void);
  57:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleEcho(uint8_t* but, uint8_t bufLen);
  58:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_get6pInfo(uint8_t commandId, uint8_t* code,uint8_t* cellOptions,uint8_t* numCells,c
  59:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleCommands(void);
  60:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  61:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // misc
  62:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_debugPrint_timer_cb(opentimers_id_t id);
  63:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_board_reset_cb(opentimers_id_t id);
  64:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  65:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // HDLC output
  66:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void outputHdlcOpen(void);
  67:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void outputHdlcWrite(uint8_t b);
  68:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void outputHdlcClose(void);
  69:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  70:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // HDLC input
  71:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void inputHdlcOpen(void);
  72:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void inputHdlcWrite(uint8_t b);
  73:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void inputHdlcClose(void);
  74:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  75:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // task
  76:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printWrongCRCInput(void);
  77:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printInputBufferOverflow(void);
  78:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  79:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== public ==========================================
  80:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  81:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== admin
  82:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  83:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_init(void) {
 397              		.loc 1 83 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 82B0     		sub	sp, sp, #8
 406              		.cfi_def_cfa_offset 16
 407 0004 02AF     		add	r7, sp, #8
 408              		.cfi_def_cfa 7, 8
  84:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // reset variable
  85:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memset(&openserial_vars,0,sizeof(openserial_vars_t));
 409              		.loc 1 85 0
 410 0006 40F2E442 		movw	r2, #1252
 411 000a 0021     		movs	r1, #0
 412 000c 2248     		ldr	r0, .L2
 413 000e FFF7FEFF 		bl	memset
  86:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  87:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // admin
  88:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fInhibited         = FALSE;
 414              		.loc 1 88 0
 415 0012 214B     		ldr	r3, .L2
 416 0014 0022     		movs	r2, #0
 417 0016 1A70     		strb	r2, [r3]
  89:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.ctsStateChanged    = FALSE;
 418              		.loc 1 89 0
 419 0018 1F4B     		ldr	r3, .L2
 420 001a 0022     		movs	r2, #0
 421 001c 5A70     		strb	r2, [r3, #1]
  90:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.debugPrintCounter  = 0;
 422              		.loc 1 90 0
 423 001e 1E4B     		ldr	r3, .L2
 424 0020 0022     		movs	r2, #0
 425 0022 9A70     		strb	r2, [r3, #2]
  91:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  92:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // input
  93:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcBusyReceiving  = FALSE;
 426              		.loc 1 93 0
 427 0024 1C4B     		ldr	r3, .L2
 428 0026 0022     		movs	r2, #0
 429 0028 83F8D420 		strb	r2, [r3, #212]
  94:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcInputEscaping  = FALSE;
 430              		.loc 1 94 0
 431 002c 1A4B     		ldr	r3, .L2
 432 002e 0022     		movs	r2, #0
 433 0030 83F8D820 		strb	r2, [r3, #216]
  95:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.inputBufFillLevel  = 0;
 434              		.loc 1 95 0
 435 0034 184B     		ldr	r3, .L2
 436 0036 0022     		movs	r2, #0
 437 0038 83F8D220 		strb	r2, [r3, #210]
  96:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
  97:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // ouput
  98:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBufIdxR      = 0;
 438              		.loc 1 98 0
 439 003c 164B     		ldr	r3, .L2
 440 003e 0022     		movs	r2, #0
 441 0040 A3F8DC24 		strh	r2, [r3, #1244]	@ movhi
  99:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBufIdxW      = 0;
 442              		.loc 1 99 0
 443 0044 144B     		ldr	r3, .L2
 444 0046 0022     		movs	r2, #0
 445 0048 A3F8DA24 		strh	r2, [r3, #1242]	@ movhi
 100:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fBusyFlushing      = FALSE;
 446              		.loc 1 100 0
 447 004c 124B     		ldr	r3, .L2
 448 004e 0022     		movs	r2, #0
 449 0050 83F8DE24 		strb	r2, [r3, #1246]
 101:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 102:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.reset_timerId      = opentimers_create(TIMER_GENERAL_PURPOSE, TASKPRIO_OPENSERI
 450              		.loc 1 102 0
 451 0054 0E21     		movs	r1, #14
 452 0056 FF20     		movs	r0, #255
 453 0058 FFF7FEFF 		bl	opentimers_create
 454 005c 0346     		mov	r3, r0
 455 005e 1A46     		mov	r2, r3
 456 0060 0D4B     		ldr	r3, .L2
 457 0062 1A72     		strb	r2, [r3, #8]
 103:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.debugPrint_timerId = opentimers_create(TIMER_GENERAL_PURPOSE, TASKPRIO_OPENSERI
 458              		.loc 1 103 0
 459 0064 0E21     		movs	r1, #14
 460 0066 FF20     		movs	r0, #255
 461 0068 FFF7FEFF 		bl	opentimers_create
 462 006c 0346     		mov	r3, r0
 463 006e 1A46     		mov	r2, r3
 464 0070 094B     		ldr	r3, .L2
 465 0072 5A72     		strb	r2, [r3, #9]
 104:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     opentimers_scheduleIn(
 466              		.loc 1 104 0
 467 0074 084B     		ldr	r3, .L2
 468 0076 587A     		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 469 0078 084B     		ldr	r3, .L2+4
 470 007a 0093     		str	r3, [sp]
 471 007c 0023     		movs	r3, #0
 472 007e 0022     		movs	r2, #0
 473 0080 6421     		movs	r1, #100
 474 0082 FFF7FEFF 		bl	opentimers_scheduleIn
 105:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.debugPrint_timerId,
 106:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         DEBUGPRINT_PERIOD,
 107:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         TIME_MS,
 108:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         TIMER_PERIODIC,
 109:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_debugPrint_timer_cb
 110:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 111:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 112:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // UART
 113:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uart_setCallbacks(
 475              		.loc 1 113 0
 476 0086 0649     		ldr	r1, .L2+8
 477 0088 0648     		ldr	r0, .L2+12
 478 008a FFF7FEFF 		bl	uart_setCallbacks
 114:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         isr_openserial_tx,
 115:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         isr_openserial_rx
 116:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 117:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uart_enableInterrupts();
 479              		.loc 1 117 0
 480 008e FFF7FEFF 		bl	uart_enableInterrupts
 118:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 481              		.loc 1 118 0
 482 0092 00BF     		nop
 483 0094 BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 0096 80BD     		pop	{r7, pc}
 487              	.L3:
 488              		.align	2
 489              	.L2:
 490 0098 00000000 		.word	openserial_vars
 491 009c 00000000 		.word	openserial_debugPrint_timer_cb
 492 00a0 00000000 		.word	isr_openserial_rx
 493 00a4 00000000 		.word	isr_openserial_tx
 494              		.cfi_endproc
 495              	.LFE3:
 497              		.align	1
 498              		.global	openserial_register
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu softvfp
 504              	openserial_register:
 505              	.LFB4:
 119:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 120:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_register(openserial_rsvpt* rsvp) {
 506              		.loc 1 120 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 00a8 80B4     		push	{r7}
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 00aa 83B0     		sub	sp, sp, #12
 515              		.cfi_def_cfa_offset 16
 516 00ac 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 518 00ae 7860     		str	r0, [r7, #4]
 121:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // FIXME: register multiple commands (linked list)
 122:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.registeredCmd = rsvp;
 519              		.loc 1 122 0
 520 00b0 034A     		ldr	r2, .L5
 521 00b2 7B68     		ldr	r3, [r7, #4]
 522 00b4 5360     		str	r3, [r2, #4]
 123:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 523              		.loc 1 123 0
 524 00b6 00BF     		nop
 525 00b8 0C37     		adds	r7, r7, #12
 526              		.cfi_def_cfa_offset 4
 527 00ba BD46     		mov	sp, r7
 528              		.cfi_def_cfa_register 13
 529              		@ sp needed
 530 00bc 80BC     		pop	{r7}
 531              		.cfi_restore 7
 532              		.cfi_def_cfa_offset 0
 533 00be 7047     		bx	lr
 534              	.L6:
 535              		.align	2
 536              	.L5:
 537 00c0 00000000 		.word	openserial_vars
 538              		.cfi_endproc
 539              	.LFE4:
 541              		.align	1
 542              		.global	openserial_printStatus
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu softvfp
 548              	openserial_printStatus:
 549              	.LFB5:
 124:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 125:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== transmitting
 126:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 127:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printStatus(
 128:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             statusElement,
 129:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t*            buffer,
 130:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             length
 131:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 550              		.loc 1 131 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 16
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 00c4 80B5     		push	{r7, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 00c6 84B0     		sub	sp, sp, #16
 559              		.cfi_def_cfa_offset 24
 560 00c8 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 562 00ca 0346     		mov	r3, r0
 563 00cc 3960     		str	r1, [r7]
 564 00ce FB71     		strb	r3, [r7, #7]
 565 00d0 1346     		mov	r3, r2
 566 00d2 BB71     		strb	r3, [r7, #6]
 132:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t i;
 133:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 134:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 567              		.loc 1 134 0
 568 00d4 FFF7FEFF 		bl	outputHdlcOpen
 135:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_STATUS);
 569              		.loc 1 135 0
 570 00d8 5320     		movs	r0, #83
 571 00da FFF7FEFF 		bl	outputHdlcWrite
 136:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 572              		.loc 1 136 0
 573 00de 0120     		movs	r0, #1
 574 00e0 FFF7FEFF 		bl	idmanager_getMyID
 575 00e4 0346     		mov	r3, r0
 576 00e6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 577 00e8 1846     		mov	r0, r3
 578 00ea FFF7FEFF 		bl	outputHdlcWrite
 137:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 579              		.loc 1 137 0
 580 00ee 0120     		movs	r0, #1
 581 00f0 FFF7FEFF 		bl	idmanager_getMyID
 582 00f4 0346     		mov	r3, r0
 583 00f6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 584 00f8 1846     		mov	r0, r3
 585 00fa FFF7FEFF 		bl	outputHdlcWrite
 138:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(statusElement);
 586              		.loc 1 138 0
 587 00fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 588 0100 1846     		mov	r0, r3
 589 0102 FFF7FEFF 		bl	outputHdlcWrite
 139:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 590              		.loc 1 139 0
 591 0106 0023     		movs	r3, #0
 592 0108 FB73     		strb	r3, [r7, #15]
 593 010a 09E0     		b	.L8
 594              	.L9:
 140:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 595              		.loc 1 140 0 discriminator 3
 596 010c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597 010e 3A68     		ldr	r2, [r7]
 598 0110 1344     		add	r3, r3, r2
 599 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600 0114 1846     		mov	r0, r3
 601 0116 FFF7FEFF 		bl	outputHdlcWrite
 139:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 602              		.loc 1 139 0 discriminator 3
 603 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 604 011c 0133     		adds	r3, r3, #1
 605 011e FB73     		strb	r3, [r7, #15]
 606              	.L8:
 139:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 607              		.loc 1 139 0 is_stmt 0 discriminator 1
 608 0120 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 609 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 610 0124 9A42     		cmp	r2, r3
 611 0126 F1D3     		bcc	.L9
 141:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 142:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 612              		.loc 1 142 0 is_stmt 1
 613 0128 FFF7FEFF 		bl	outputHdlcClose
 143:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 144:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 145:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 614              		.loc 1 145 0
 615 012c FFF7FEFF 		bl	openserial_flush
 146:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 147:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 616              		.loc 1 147 0
 617 0130 0023     		movs	r3, #0
 148:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 618              		.loc 1 148 0
 619 0132 1846     		mov	r0, r3
 620 0134 1037     		adds	r7, r7, #16
 621              		.cfi_def_cfa_offset 8
 622 0136 BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0138 80BD     		pop	{r7, pc}
 626              		.cfi_endproc
 627              	.LFE5:
 629              		.align	1
 630              		.global	openserial_printInfo
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu softvfp
 636              	openserial_printInfo:
 637              	.LFB6:
 149:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 150:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printInfo(
 151:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 152:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 153:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 154:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 155:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 638              		.loc 1 155 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 013a 90B5     		push	{r4, r7, lr}
 643              		.cfi_def_cfa_offset 12
 644              		.cfi_offset 4, -12
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 647 013c 85B0     		sub	sp, sp, #20
 648              		.cfi_def_cfa_offset 32
 649 013e 02AF     		add	r7, sp, #8
 650              		.cfi_def_cfa 7, 24
 651 0140 0446     		mov	r4, r0
 652 0142 0846     		mov	r0, r1
 653 0144 1146     		mov	r1, r2
 654 0146 1A46     		mov	r2, r3
 655 0148 2346     		mov	r3, r4
 656 014a FB71     		strb	r3, [r7, #7]
 657 014c 0346     		mov	r3, r0
 658 014e BB71     		strb	r3, [r7, #6]
 659 0150 0B46     		mov	r3, r1	@ movhi
 660 0152 BB80     		strh	r3, [r7, #4]	@ movhi
 661 0154 1346     		mov	r3, r2	@ movhi
 662 0156 7B80     		strh	r3, [r7, #2]	@ movhi
 156:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 663              		.loc 1 156 0
 664 0158 B888     		ldrh	r0, [r7, #4]
 665 015a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 666 015c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 667 015e 7B88     		ldrh	r3, [r7, #2]
 668 0160 0093     		str	r3, [sp]
 669 0162 0346     		mov	r3, r0
 670 0164 4920     		movs	r0, #73
 671 0166 FFF7FEFF 		bl	openserial_printInfoErrorCritical
 672 016a 0346     		mov	r3, r0
 157:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_INFO,
 158:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 159:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 160:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 161:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 162:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 163:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 164:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 165:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 673              		.loc 1 165 0
 674 016c 1846     		mov	r0, r3
 675 016e 0C37     		adds	r7, r7, #12
 676              		.cfi_def_cfa_offset 12
 677 0170 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0172 90BD     		pop	{r4, r7, pc}
 681              		.cfi_endproc
 682              	.LFE6:
 684              		.align	1
 685              		.global	openserial_printError
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu softvfp
 691              	openserial_printError:
 692              	.LFB7:
 166:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 167:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printError(
 168:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 169:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 170:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 171:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 172:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 693              		.loc 1 172 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0174 90B5     		push	{r4, r7, lr}
 698              		.cfi_def_cfa_offset 12
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0176 85B0     		sub	sp, sp, #20
 703              		.cfi_def_cfa_offset 32
 704 0178 02AF     		add	r7, sp, #8
 705              		.cfi_def_cfa 7, 24
 706 017a 0446     		mov	r4, r0
 707 017c 0846     		mov	r0, r1
 708 017e 1146     		mov	r1, r2
 709 0180 1A46     		mov	r2, r3
 710 0182 2346     		mov	r3, r4
 711 0184 FB71     		strb	r3, [r7, #7]
 712 0186 0346     		mov	r3, r0
 713 0188 BB71     		strb	r3, [r7, #6]
 714 018a 0B46     		mov	r3, r1	@ movhi
 715 018c BB80     		strh	r3, [r7, #4]	@ movhi
 716 018e 1346     		mov	r3, r2	@ movhi
 717 0190 7B80     		strh	r3, [r7, #2]	@ movhi
 173:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // toggle error LED
 174:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     leds_error_toggle();
 718              		.loc 1 174 0
 719 0192 FFF7FEFF 		bl	leds_error_toggle
 175:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 176:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 720              		.loc 1 176 0
 721 0196 B888     		ldrh	r0, [r7, #4]
 722 0198 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 723 019a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 724 019c 7B88     		ldrh	r3, [r7, #2]
 725 019e 0093     		str	r3, [sp]
 726 01a0 0346     		mov	r3, r0
 727 01a2 4520     		movs	r0, #69
 728 01a4 FFF7FEFF 		bl	openserial_printInfoErrorCritical
 729 01a8 0346     		mov	r3, r0
 177:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_ERROR,
 178:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 179:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 180:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 181:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 182:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 183:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 184:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 185:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 730              		.loc 1 185 0
 731 01aa 1846     		mov	r0, r3
 732 01ac 0C37     		adds	r7, r7, #12
 733              		.cfi_def_cfa_offset 12
 734 01ae BD46     		mov	sp, r7
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 01b0 90BD     		pop	{r4, r7, pc}
 738              		.cfi_endproc
 739              	.LFE7:
 741              		.align	1
 742              		.global	openserial_printCritical
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu softvfp
 748              	openserial_printCritical:
 749              	.LFB8:
 186:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 187:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printCritical(
 188:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             calling_component,
 189:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t             error_code,
 190:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg1,
 191:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t    arg2
 192:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 750              		.loc 1 192 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 16
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 01b2 90B5     		push	{r4, r7, lr}
 755              		.cfi_def_cfa_offset 12
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 7, -8
 758              		.cfi_offset 14, -4
 759 01b4 87B0     		sub	sp, sp, #28
 760              		.cfi_def_cfa_offset 40
 761 01b6 02AF     		add	r7, sp, #8
 762              		.cfi_def_cfa 7, 32
 763 01b8 0446     		mov	r4, r0
 764 01ba 0846     		mov	r0, r1
 765 01bc 1146     		mov	r1, r2
 766 01be 1A46     		mov	r2, r3
 767 01c0 2346     		mov	r3, r4
 768 01c2 FB71     		strb	r3, [r7, #7]
 769 01c4 0346     		mov	r3, r0
 770 01c6 BB71     		strb	r3, [r7, #6]
 771 01c8 0B46     		mov	r3, r1	@ movhi
 772 01ca BB80     		strh	r3, [r7, #4]	@ movhi
 773 01cc 1346     		mov	r3, r2	@ movhi
 774 01ce 7B80     		strh	r3, [r7, #2]	@ movhi
 193:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint32_t         reference;
 194:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 195:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // blink error LED, this is serious
 196:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     leds_error_blink();
 775              		.loc 1 196 0
 776 01d0 FFF7FEFF 		bl	leds_error_blink
 197:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 198:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // schedule for the mote to reboot in 10s
 199:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     reference = opentimers_getValue();
 777              		.loc 1 199 0
 778 01d4 FFF7FEFF 		bl	opentimers_getValue
 779 01d8 F860     		str	r0, [r7, #12]
 200:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     opentimers_scheduleAbsolute(
 780              		.loc 1 200 0
 781 01da 0C4B     		ldr	r3, .L17
 782 01dc 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 783 01de 0C4B     		ldr	r3, .L17+4
 784 01e0 0093     		str	r3, [sp]
 785 01e2 0023     		movs	r3, #0
 786 01e4 FA68     		ldr	r2, [r7, #12]
 787 01e6 42F21071 		movw	r1, #10000
 788 01ea FFF7FEFF 		bl	opentimers_scheduleAbsolute
 201:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.reset_timerId,  // timerId
 202:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         10000,                          // duration
 203:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         reference,                      // reference
 204:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         TIME_MS,                        // timetype
 205:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_board_reset_cb       // callback
 206:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 207:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 208:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return openserial_printInfoErrorCritical(
 789              		.loc 1 208 0
 790 01ee B888     		ldrh	r0, [r7, #4]
 791 01f0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 792 01f2 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 793 01f4 7B88     		ldrh	r3, [r7, #2]
 794 01f6 0093     		str	r3, [sp]
 795 01f8 0346     		mov	r3, r0
 796 01fa 4320     		movs	r0, #67
 797 01fc FFF7FEFF 		bl	openserial_printInfoErrorCritical
 798 0200 0346     		mov	r3, r0
 209:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         SERFRAME_MOTE2PC_CRITICAL,
 210:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         calling_component,
 211:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         error_code,
 212:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg1,
 213:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         arg2
 214:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 215:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 216:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // openserial_flush called by openserial_printInfoErrorCritical()
 217:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 799              		.loc 1 217 0
 800 0202 1846     		mov	r0, r3
 801 0204 1437     		adds	r7, r7, #20
 802              		.cfi_def_cfa_offset 12
 803 0206 BD46     		mov	sp, r7
 804              		.cfi_def_cfa_register 13
 805              		@ sp needed
 806 0208 90BD     		pop	{r4, r7, pc}
 807              	.L18:
 808 020a 00BF     		.align	2
 809              	.L17:
 810 020c 00000000 		.word	openserial_vars
 811 0210 00000000 		.word	openserial_board_reset_cb
 812              		.cfi_endproc
 813              	.LFE8:
 815              		.align	1
 816              		.global	openserial_printData
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu softvfp
 822              	openserial_printData:
 823              	.LFB9:
 218:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 219:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printData(uint8_t* buffer, uint8_t length) {
 824              		.loc 1 219 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 16
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0214 80B5     		push	{r7, lr}
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0216 84B0     		sub	sp, sp, #16
 833              		.cfi_def_cfa_offset 24
 834 0218 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 836 021a 7860     		str	r0, [r7, #4]
 837 021c 0B46     		mov	r3, r1
 838 021e FB70     		strb	r3, [r7, #3]
 220:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 221:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  asn[5];
 222:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 223:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // retrieve ASN
 224:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ieee154e_getAsn(asn);
 839              		.loc 1 224 0
 840 0220 07F10803 		add	r3, r7, #8
 841 0224 1846     		mov	r0, r3
 842 0226 FFF7FEFF 		bl	ieee154e_getAsn
 225:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 226:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 843              		.loc 1 226 0
 844 022a FFF7FEFF 		bl	outputHdlcOpen
 227:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_DATA);
 845              		.loc 1 227 0
 846 022e 4420     		movs	r0, #68
 847 0230 FFF7FEFF 		bl	outputHdlcWrite
 228:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 848              		.loc 1 228 0
 849 0234 0120     		movs	r0, #1
 850 0236 FFF7FEFF 		bl	idmanager_getMyID
 851 023a 0346     		mov	r3, r0
 852 023c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 853 023e 1846     		mov	r0, r3
 854 0240 FFF7FEFF 		bl	outputHdlcWrite
 229:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 855              		.loc 1 229 0
 856 0244 0120     		movs	r0, #1
 857 0246 FFF7FEFF 		bl	idmanager_getMyID
 858 024a 0346     		mov	r3, r0
 859 024c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 860 024e 1846     		mov	r0, r3
 861 0250 FFF7FEFF 		bl	outputHdlcWrite
 230:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[0]);
 862              		.loc 1 230 0
 863 0254 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 864 0256 1846     		mov	r0, r3
 865 0258 FFF7FEFF 		bl	outputHdlcWrite
 231:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[1]);
 866              		.loc 1 231 0
 867 025c 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 868 025e 1846     		mov	r0, r3
 869 0260 FFF7FEFF 		bl	outputHdlcWrite
 232:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[2]);
 870              		.loc 1 232 0
 871 0264 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 872 0266 1846     		mov	r0, r3
 873 0268 FFF7FEFF 		bl	outputHdlcWrite
 233:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[3]);
 874              		.loc 1 233 0
 875 026c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 876 026e 1846     		mov	r0, r3
 877 0270 FFF7FEFF 		bl	outputHdlcWrite
 234:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(asn[4]);
 878              		.loc 1 234 0
 879 0274 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 880 0276 1846     		mov	r0, r3
 881 0278 FFF7FEFF 		bl	outputHdlcWrite
 235:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 882              		.loc 1 235 0
 883 027c 0023     		movs	r3, #0
 884 027e FB73     		strb	r3, [r7, #15]
 885 0280 09E0     		b	.L20
 886              	.L21:
 236:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 887              		.loc 1 236 0 discriminator 3
 888 0282 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 889 0284 7A68     		ldr	r2, [r7, #4]
 890 0286 1344     		add	r3, r3, r2
 891 0288 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 892 028a 1846     		mov	r0, r3
 893 028c FFF7FEFF 		bl	outputHdlcWrite
 235:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 894              		.loc 1 235 0 discriminator 3
 895 0290 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 896 0292 0133     		adds	r3, r3, #1
 897 0294 FB73     		strb	r3, [r7, #15]
 898              	.L20:
 235:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 899              		.loc 1 235 0 is_stmt 0 discriminator 1
 900 0296 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 901 0298 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 902 029a 9A42     		cmp	r2, r3
 903 029c F1D3     		bcc	.L21
 237:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 238:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 904              		.loc 1 238 0 is_stmt 1
 905 029e FFF7FEFF 		bl	outputHdlcClose
 239:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 240:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 241:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 906              		.loc 1 241 0
 907 02a2 FFF7FEFF 		bl	openserial_flush
 242:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 243:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 908              		.loc 1 243 0
 909 02a6 0023     		movs	r3, #0
 244:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 910              		.loc 1 244 0
 911 02a8 1846     		mov	r0, r3
 912 02aa 1037     		adds	r7, r7, #16
 913              		.cfi_def_cfa_offset 8
 914 02ac BD46     		mov	sp, r7
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 02ae 80BD     		pop	{r7, pc}
 918              		.cfi_endproc
 919              	.LFE9:
 921              		.align	1
 922              		.global	openserial_printSniffedPacket
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu softvfp
 928              	openserial_printSniffedPacket:
 929              	.LFB10:
 245:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 246:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 247:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 248:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printSniffedPacket(uint8_t* buffer, uint8_t length, uint8_t channel) {
 930              		.loc 1 248 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 16
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 02b0 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 02b2 84B0     		sub	sp, sp, #16
 939              		.cfi_def_cfa_offset 24
 940 02b4 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 02b6 7860     		str	r0, [r7, #4]
 943 02b8 0B46     		mov	r3, r1
 944 02ba FB70     		strb	r3, [r7, #3]
 945 02bc 1346     		mov	r3, r2
 946 02be BB70     		strb	r3, [r7, #2]
 249:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 250:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 251:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 947              		.loc 1 251 0
 948 02c0 FFF7FEFF 		bl	outputHdlcOpen
 252:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_SNIFFED_PACKET);
 949              		.loc 1 252 0
 950 02c4 5020     		movs	r0, #80
 951 02c6 FFF7FEFF 		bl	outputHdlcWrite
 253:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 952              		.loc 1 253 0
 953 02ca 0120     		movs	r0, #1
 954 02cc FFF7FEFF 		bl	idmanager_getMyID
 955 02d0 0346     		mov	r3, r0
 956 02d2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 957 02d4 1846     		mov	r0, r3
 958 02d6 FFF7FEFF 		bl	outputHdlcWrite
 254:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 959              		.loc 1 254 0
 960 02da 0120     		movs	r0, #1
 961 02dc FFF7FEFF 		bl	idmanager_getMyID
 962 02e0 0346     		mov	r3, r0
 963 02e2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 964 02e4 1846     		mov	r0, r3
 965 02e6 FFF7FEFF 		bl	outputHdlcWrite
 255:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 966              		.loc 1 255 0
 967 02ea 0023     		movs	r3, #0
 968 02ec FB73     		strb	r3, [r7, #15]
 969 02ee 09E0     		b	.L24
 970              	.L25:
 256:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****        outputHdlcWrite(buffer[i]);
 971              		.loc 1 256 0 discriminator 3
 972 02f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 973 02f2 7A68     		ldr	r2, [r7, #4]
 974 02f4 1344     		add	r3, r3, r2
 975 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 02f8 1846     		mov	r0, r3
 977 02fa FFF7FEFF 		bl	outputHdlcWrite
 255:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 978              		.loc 1 255 0 discriminator 3
 979 02fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 980 0300 0133     		adds	r3, r3, #1
 981 0302 FB73     		strb	r3, [r7, #15]
 982              	.L24:
 255:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 983              		.loc 1 255 0 is_stmt 0 discriminator 1
 984 0304 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 985 0306 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 986 0308 9A42     		cmp	r2, r3
 987 030a F1D3     		bcc	.L25
 257:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 258:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(channel);
 988              		.loc 1 258 0 is_stmt 1
 989 030c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 990 030e 1846     		mov	r0, r3
 991 0310 FFF7FEFF 		bl	outputHdlcWrite
 259:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 992              		.loc 1 259 0
 993 0314 FFF7FEFF 		bl	outputHdlcClose
 260:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 261:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 262:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 994              		.loc 1 262 0
 995 0318 FFF7FEFF 		bl	openserial_flush
 263:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 264:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 996              		.loc 1 264 0
 997 031c 0023     		movs	r3, #0
 265:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 998              		.loc 1 265 0
 999 031e 1846     		mov	r0, r3
 1000 0320 1037     		adds	r7, r7, #16
 1001              		.cfi_def_cfa_offset 8
 1002 0322 BD46     		mov	sp, r7
 1003              		.cfi_def_cfa_register 13
 1004              		@ sp needed
 1005 0324 80BD     		pop	{r7, pc}
 1006              		.cfi_endproc
 1007              	.LFE10:
 1009              		.align	1
 1010              		.global	openserial_print_uint32_t
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu softvfp
 1016              	openserial_print_uint32_t:
 1017              	.LFB11:
 266:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 267:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_print_uint32_t(uint32_t value) {
 1018              		.loc 1 267 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 16
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022 0326 80B5     		push	{r7, lr}
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0328 84B0     		sub	sp, sp, #16
 1027              		.cfi_def_cfa_offset 24
 1028 032a 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 1030 032c 7860     		str	r0, [r7, #4]
 268:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef OPENSERIAL_PRINTF
 269:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 270:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  pvalue[4];
 271:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 272:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1031              		.loc 1 272 0
 1032 032e FFF7FEFF 		bl	outputHdlcOpen
 273:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_PRINTF);
 1033              		.loc 1 273 0
 1034 0332 4620     		movs	r0, #70
 1035 0334 FFF7FEFF 		bl	outputHdlcWrite
 274:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(TYPE_INT);
 1036              		.loc 1 274 0
 1037 0338 0120     		movs	r0, #1
 1038 033a FFF7FEFF 		bl	outputHdlcWrite
 275:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memcpy(pvalue, &value, 4);
 1039              		.loc 1 275 0
 1040 033e 7B68     		ldr	r3, [r7, #4]
 1041 0340 BB60     		str	r3, [r7, #8]
 276:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<4;i++) {
 1042              		.loc 1 276 0
 1043 0342 0023     		movs	r3, #0
 1044 0344 FB73     		strb	r3, [r7, #15]
 1045 0346 0BE0     		b	.L28
 1046              	.L29:
 277:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(pvalue[i]);
 1047              		.loc 1 277 0 discriminator 3
 1048 0348 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1049 034a 07F11002 		add	r2, r7, #16
 1050 034e 1344     		add	r3, r3, r2
 1051 0350 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1052 0354 1846     		mov	r0, r3
 1053 0356 FFF7FEFF 		bl	outputHdlcWrite
 276:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<4;i++) {
 1054              		.loc 1 276 0 discriminator 3
 1055 035a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1056 035c 0133     		adds	r3, r3, #1
 1057 035e FB73     		strb	r3, [r7, #15]
 1058              	.L28:
 276:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<4;i++) {
 1059              		.loc 1 276 0 is_stmt 0 discriminator 1
 1060 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 0362 032B     		cmp	r3, #3
 1062 0364 F0D9     		bls	.L29
 278:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 279:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1063              		.loc 1 279 0 is_stmt 1
 1064 0366 FFF7FEFF 		bl	outputHdlcClose
 280:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 281:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 282:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1065              		.loc 1 282 0
 1066 036a FFF7FEFF 		bl	openserial_flush
 283:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 284:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 1067              		.loc 1 284 0
 1068 036e 0023     		movs	r3, #0
 285:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1069              		.loc 1 285 0
 1070 0370 1846     		mov	r0, r3
 1071 0372 1037     		adds	r7, r7, #16
 1072              		.cfi_def_cfa_offset 8
 1073 0374 BD46     		mov	sp, r7
 1074              		.cfi_def_cfa_register 13
 1075              		@ sp needed
 1076 0376 80BD     		pop	{r7, pc}
 1077              		.cfi_endproc
 1078              	.LFE11:
 1080              		.align	1
 1081              		.global	openserial_print_str
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu softvfp
 1087              	openserial_print_str:
 1088              	.LFB12:
 286:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 287:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_print_str(char* buffer, uint8_t length) {
 1089              		.loc 1 287 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 16
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
 1093 0378 80B5     		push	{r7, lr}
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 7, -8
 1096              		.cfi_offset 14, -4
 1097 037a 84B0     		sub	sp, sp, #16
 1098              		.cfi_def_cfa_offset 24
 1099 037c 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 1101 037e 7860     		str	r0, [r7, #4]
 1102 0380 0B46     		mov	r3, r1
 1103 0382 FB70     		strb	r3, [r7, #3]
 288:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef OPENSERIAL_PRINTF
 289:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  i;
 290:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  asn[5];
 291:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 292:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // retrieve ASN
 293:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ieee154e_getAsn(asn);
 1104              		.loc 1 293 0
 1105 0384 07F10803 		add	r3, r7, #8
 1106 0388 1846     		mov	r0, r3
 1107 038a FFF7FEFF 		bl	ieee154e_getAsn
 294:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 295:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1108              		.loc 1 295 0
 1109 038e FFF7FEFF 		bl	outputHdlcOpen
 296:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(SERFRAME_MOTE2PC_PRINTF);
 1110              		.loc 1 296 0
 1111 0392 4620     		movs	r0, #70
 1112 0394 FFF7FEFF 		bl	outputHdlcWrite
 297:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(TYPE_STR);
 1113              		.loc 1 297 0
 1114 0398 0020     		movs	r0, #0
 1115 039a FFF7FEFF 		bl	outputHdlcWrite
 298:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 1116              		.loc 1 298 0
 1117 039e 0120     		movs	r0, #1
 1118 03a0 FFF7FEFF 		bl	idmanager_getMyID
 1119 03a4 0346     		mov	r3, r0
 1120 03a6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1121 03a8 1846     		mov	r0, r3
 1122 03aa FFF7FEFF 		bl	outputHdlcWrite
 299:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 1123              		.loc 1 299 0
 1124 03ae 0120     		movs	r0, #1
 1125 03b0 FFF7FEFF 		bl	idmanager_getMyID
 1126 03b4 0346     		mov	r3, r0
 1127 03b6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1128 03b8 1846     		mov	r0, r3
 1129 03ba FFF7FEFF 		bl	outputHdlcWrite
 300:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for(i=0; i<5;i++) {
 1130              		.loc 1 300 0
 1131 03be 0023     		movs	r3, #0
 1132 03c0 FB73     		strb	r3, [r7, #15]
 1133 03c2 0BE0     		b	.L32
 1134              	.L33:
 301:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(asn[i]);
 1135              		.loc 1 301 0 discriminator 3
 1136 03c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1137 03c6 07F11002 		add	r2, r7, #16
 1138 03ca 1344     		add	r3, r3, r2
 1139 03cc 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1140 03d0 1846     		mov	r0, r3
 1141 03d2 FFF7FEFF 		bl	outputHdlcWrite
 300:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for(i=0; i<5;i++) {
 1142              		.loc 1 300 0 discriminator 3
 1143 03d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1144 03d8 0133     		adds	r3, r3, #1
 1145 03da FB73     		strb	r3, [r7, #15]
 1146              	.L32:
 300:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for(i=0; i<5;i++) {
 1147              		.loc 1 300 0 is_stmt 0 discriminator 1
 1148 03dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1149 03de 042B     		cmp	r3, #4
 1150 03e0 F0D9     		bls	.L33
 302:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 303:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     for (i=0;i<length;i++){
 1151              		.loc 1 303 0 is_stmt 1
 1152 03e2 0023     		movs	r3, #0
 1153 03e4 FB73     		strb	r3, [r7, #15]
 1154 03e6 09E0     		b	.L34
 1155              	.L35:
 304:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 1156              		.loc 1 304 0 discriminator 3
 1157 03e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1158 03ea 7A68     		ldr	r2, [r7, #4]
 1159 03ec 1344     		add	r3, r3, r2
 1160 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1161 03f0 1846     		mov	r0, r3
 1162 03f2 FFF7FEFF 		bl	outputHdlcWrite
 303:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 1163              		.loc 1 303 0 discriminator 3
 1164 03f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1165 03f8 0133     		adds	r3, r3, #1
 1166 03fa FB73     		strb	r3, [r7, #15]
 1167              	.L34:
 303:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         outputHdlcWrite(buffer[i]);
 1168              		.loc 1 303 0 is_stmt 0 discriminator 1
 1169 03fc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1170 03fe FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1171 0400 9A42     		cmp	r2, r3
 1172 0402 F1D3     		bcc	.L35
 305:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 306:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1173              		.loc 1 306 0 is_stmt 1
 1174 0404 FFF7FEFF 		bl	outputHdlcClose
 307:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 308:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 309:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1175              		.loc 1 309 0
 1176 0408 FFF7FEFF 		bl	openserial_flush
 310:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 311:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    return E_SUCCESS;
 1177              		.loc 1 311 0
 1178 040c 0023     		movs	r3, #0
 312:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1179              		.loc 1 312 0
 1180 040e 1846     		mov	r0, r3
 1181 0410 1037     		adds	r7, r7, #16
 1182              		.cfi_def_cfa_offset 8
 1183 0412 BD46     		mov	sp, r7
 1184              		.cfi_def_cfa_register 13
 1185              		@ sp needed
 1186 0414 80BD     		pop	{r7, pc}
 1187              		.cfi_endproc
 1188              	.LFE12:
 1190              		.align	1
 1191              		.global	task_openserial_debugPrint
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1195              		.fpu softvfp
 1197              	task_openserial_debugPrint:
 1198              	.LFB13:
 313:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 314:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== retrieving inputBuffer
 315:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 316:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_openserial_debugPrint(void) {
 1199              		.loc 1 316 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 8
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0416 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0418 82B0     		sub	sp, sp, #8
 1208              		.cfi_def_cfa_offset 16
 1209 041a 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 317:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t debugPrintCounter;
 318:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 319:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 320:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 321:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1211              		.loc 1 321 0
 1212 041c FFF7FEFF 		bl	IntMasterDisable
 322:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     debugPrintCounter = openserial_vars.debugPrintCounter;
 1213              		.loc 1 322 0
 1214 0420 4A4B     		ldr	r3, .L69
 1215 0422 9B78     		ldrb	r3, [r3, #2]
 1216 0424 FB71     		strb	r3, [r7, #7]
 323:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1217              		.loc 1 323 0
 1218 0426 FFF7FEFF 		bl	IntMasterEnable
 324:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 325:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 326:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.outputBufIdxW!=openserial_vars.outputBufIdxR) {
 1219              		.loc 1 326 0
 1220 042a 484B     		ldr	r3, .L69
 1221 042c B3F8DA24 		ldrh	r2, [r3, #1242]
 1222 0430 464B     		ldr	r3, .L69
 1223 0432 B3F8DC34 		ldrh	r3, [r3, #1244]
 1224 0436 9A42     		cmp	r2, r3
 1225 0438 40F08480 		bne	.L56
 327:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 328:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 329:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 330:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     debugPrintCounter++;
 1226              		.loc 1 330 0
 1227 043c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1228 043e 0133     		adds	r3, r3, #1
 1229 0440 FB71     		strb	r3, [r7, #7]
 331:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (debugPrintCounter==STATUS_MAX) {
 1230              		.loc 1 331 0
 1231 0442 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1232 0444 0C2B     		cmp	r3, #12
 1233 0446 01D1     		bne	.L40
 332:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****        debugPrintCounter = 0;
 1234              		.loc 1 332 0
 1235 0448 0023     		movs	r3, #0
 1236 044a FB71     		strb	r3, [r7, #7]
 1237              	.L40:
 333:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 334:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 335:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     switch (debugPrintCounter) {
 1238              		.loc 1 335 0
 1239 044c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1240 044e 0B2B     		cmp	r3, #11
 1241 0450 56D8     		bhi	.L41
 1242 0452 01A2     		adr	r2, .L43
 1243 0454 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1244              		.p2align 2
 1245              	.L43:
 1246 0458 89040000 		.word	.L42+1
 1247 045c 93040000 		.word	.L44+1
 1248 0460 9D040000 		.word	.L45+1
 1249 0464 A7040000 		.word	.L46+1
 1250 0468 B1040000 		.word	.L47+1
 1251 046c BB040000 		.word	.L48+1
 1252 0470 C5040000 		.word	.L49+1
 1253 0474 CF040000 		.word	.L50+1
 1254 0478 D9040000 		.word	.L51+1
 1255 047c E3040000 		.word	.L52+1
 1256 0480 ED040000 		.word	.L53+1
 1257 0484 F7040000 		.word	.L54+1
 1258              		.p2align 1
 1259              	.L42:
 336:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_ISSYNC:
 337:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_isSync()==TRUE) {
 1260              		.loc 1 337 0
 1261 0488 FFF7FEFF 		bl	debugPrint_isSync
 1262 048c 0346     		mov	r3, r0
 1263 048e 002B     		cmp	r3, #0
 1264 0490 39D1     		bne	.L57
 1265              	.L44:
 338:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 339:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 340:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_ID:
 341:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_id()==TRUE) {
 1266              		.loc 1 341 0
 1267 0492 FFF7FEFF 		bl	debugPrint_id
 1268 0496 0346     		mov	r3, r0
 1269 0498 002B     		cmp	r3, #0
 1270 049a 36D1     		bne	.L58
 1271              	.L45:
 342:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                break;
 343:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 344:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_DAGRANK:
 345:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_myDAGrank()==TRUE) {
 1272              		.loc 1 345 0
 1273 049c FFF7FEFF 		bl	debugPrint_myDAGrank
 1274 04a0 0346     		mov	r3, r0
 1275 04a2 002B     		cmp	r3, #0
 1276 04a4 33D1     		bne	.L59
 1277              	.L46:
 346:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 347:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 348:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_OUTBUFFERINDEXES:
 349:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_outBufferIndexes()==TRUE) {
 1278              		.loc 1 349 0
 1279 04a6 FFF7FEFF 		bl	debugPrint_outBufferIndexes
 1280 04aa 0346     		mov	r3, r0
 1281 04ac 002B     		cmp	r3, #0
 1282 04ae 30D1     		bne	.L60
 1283              	.L47:
 350:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 351:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 352:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_ASN:
 353:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_asn()==TRUE) {
 1284              		.loc 1 353 0
 1285 04b0 FFF7FEFF 		bl	debugPrint_asn
 1286 04b4 0346     		mov	r3, r0
 1287 04b6 002B     		cmp	r3, #0
 1288 04b8 2DD1     		bne	.L61
 1289              	.L48:
 354:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 355:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 356:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_MACSTATS:
 357:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_macStats()==TRUE) {
 1290              		.loc 1 357 0
 1291 04ba FFF7FEFF 		bl	debugPrint_macStats
 1292 04be 0346     		mov	r3, r0
 1293 04c0 002B     		cmp	r3, #0
 1294 04c2 2AD1     		bne	.L62
 1295              	.L49:
 358:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 359:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 360:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_SCHEDULE:
 361:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if(debugPrint_schedule()==TRUE) {
 1296              		.loc 1 361 0
 1297 04c4 FFF7FEFF 		bl	debugPrint_schedule
 1298 04c8 0346     		mov	r3, r0
 1299 04ca 002B     		cmp	r3, #0
 1300 04cc 27D1     		bne	.L63
 1301              	.L50:
 362:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 363:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 364:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_BACKOFF:
 365:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if(debugPrint_backoff()==TRUE) {
 1302              		.loc 1 365 0
 1303 04ce FFF7FEFF 		bl	debugPrint_backoff
 1304 04d2 0346     		mov	r3, r0
 1305 04d4 002B     		cmp	r3, #0
 1306 04d6 24D1     		bne	.L64
 1307              	.L51:
 366:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 367:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 368:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_QUEUE:
 369:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if(debugPrint_queue()==TRUE) {
 1308              		.loc 1 369 0
 1309 04d8 FFF7FEFF 		bl	debugPrint_queue
 1310 04dc 0346     		mov	r3, r0
 1311 04de 002B     		cmp	r3, #0
 1312 04e0 21D1     		bne	.L65
 1313              	.L52:
 370:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 371:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 372:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_NEIGHBORS:
 373:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_neighbors()==TRUE) {
 1314              		.loc 1 373 0
 1315 04e2 FFF7FEFF 		bl	debugPrint_neighbors
 1316 04e6 0346     		mov	r3, r0
 1317 04e8 002B     		cmp	r3, #0
 1318 04ea 1ED1     		bne	.L66
 1319              	.L53:
 374:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 375:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 376:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_KAPERIOD:
 377:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_kaPeriod()==TRUE) {
 1320              		.loc 1 377 0
 1321 04ec FFF7FEFF 		bl	debugPrint_kaPeriod
 1322 04f0 0346     		mov	r3, r0
 1323 04f2 002B     		cmp	r3, #0
 1324 04f4 1BD1     		bne	.L67
 1325              	.L54:
 378:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 379:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 380:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case STATUS_JOINED:
 381:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (debugPrint_joined()==TRUE) {
 1326              		.loc 1 381 0
 1327 04f6 FFF7FEFF 		bl	debugPrint_joined
 1328 04fa 0346     		mov	r3, r0
 1329 04fc 002B     		cmp	r3, #0
 1330 04fe 18D1     		bne	.L68
 1331              	.L41:
 382:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 383:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 384:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         default:
 385:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             debugPrintCounter=0;
 1332              		.loc 1 385 0
 1333 0500 0023     		movs	r3, #0
 1334 0502 FB71     		strb	r3, [r7, #7]
 1335 0504 16E0     		b	.L55
 1336              	.L57:
 338:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1337              		.loc 1 338 0
 1338 0506 00BF     		nop
 1339 0508 14E0     		b	.L55
 1340              	.L58:
 342:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1341              		.loc 1 342 0
 1342 050a 00BF     		nop
 1343 050c 12E0     		b	.L55
 1344              	.L59:
 346:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1345              		.loc 1 346 0
 1346 050e 00BF     		nop
 1347 0510 10E0     		b	.L55
 1348              	.L60:
 350:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1349              		.loc 1 350 0
 1350 0512 00BF     		nop
 1351 0514 0EE0     		b	.L55
 1352              	.L61:
 354:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1353              		.loc 1 354 0
 1354 0516 00BF     		nop
 1355 0518 0CE0     		b	.L55
 1356              	.L62:
 358:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1357              		.loc 1 358 0
 1358 051a 00BF     		nop
 1359 051c 0AE0     		b	.L55
 1360              	.L63:
 362:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1361              		.loc 1 362 0
 1362 051e 00BF     		nop
 1363 0520 08E0     		b	.L55
 1364              	.L64:
 366:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1365              		.loc 1 366 0
 1366 0522 00BF     		nop
 1367 0524 06E0     		b	.L55
 1368              	.L65:
 370:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1369              		.loc 1 370 0
 1370 0526 00BF     		nop
 1371 0528 04E0     		b	.L55
 1372              	.L66:
 374:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1373              		.loc 1 374 0
 1374 052a 00BF     		nop
 1375 052c 02E0     		b	.L55
 1376              	.L67:
 378:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1377              		.loc 1 378 0
 1378 052e 00BF     		nop
 1379 0530 00E0     		b	.L55
 1380              	.L68:
 382:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 1381              		.loc 1 382 0
 1382 0532 00BF     		nop
 1383              	.L55:
 386:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 387:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 388:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 389:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1384              		.loc 1 389 0
 1385 0534 FFF7FEFF 		bl	IntMasterDisable
 390:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.debugPrintCounter = debugPrintCounter;
 1386              		.loc 1 390 0
 1387 0538 044A     		ldr	r2, .L69
 1388 053a FB79     		ldrb	r3, [r7, #7]
 1389 053c 9370     		strb	r3, [r2, #2]
 391:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1390              		.loc 1 391 0
 1391 053e FFF7FEFF 		bl	IntMasterEnable
 1392 0542 00E0     		b	.L37
 1393              	.L56:
 327:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 1394              		.loc 1 327 0
 1395 0544 00BF     		nop
 1396              	.L37:
 392:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 393:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1397              		.loc 1 393 0
 1398 0546 0837     		adds	r7, r7, #8
 1399              		.cfi_def_cfa_offset 8
 1400 0548 BD46     		mov	sp, r7
 1401              		.cfi_def_cfa_register 13
 1402              		@ sp needed
 1403 054a 80BD     		pop	{r7, pc}
 1404              	.L70:
 1405              		.align	2
 1406              	.L69:
 1407 054c 00000000 		.word	openserial_vars
 1408              		.cfi_endproc
 1409              	.LFE13:
 1411              		.align	1
 1412              		.global	openserial_getInputBufferFillLevel
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu softvfp
 1418              	openserial_getInputBufferFillLevel:
 1419              	.LFB14:
 394:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 395:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== receiving
 396:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 397:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** uint8_t openserial_getInputBufferFillLevel() {
 1420              		.loc 1 397 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 8
 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424 0550 80B5     		push	{r7, lr}
 1425              		.cfi_def_cfa_offset 8
 1426              		.cfi_offset 7, -8
 1427              		.cfi_offset 14, -4
 1428 0552 82B0     		sub	sp, sp, #8
 1429              		.cfi_def_cfa_offset 16
 1430 0554 00AF     		add	r7, sp, #0
 1431              		.cfi_def_cfa_register 7
 398:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t inputBufFillLevel;
 399:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 400:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 401:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 402:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1432              		.loc 1 402 0
 1433 0556 FFF7FEFF 		bl	IntMasterDisable
 403:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     inputBufFillLevel = openserial_vars.inputBufFillLevel;
 1434              		.loc 1 403 0
 1435 055a 064B     		ldr	r3, .L73
 1436 055c 93F8D230 		ldrb	r3, [r3, #210]
 1437 0560 FB71     		strb	r3, [r7, #7]
 404:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1438              		.loc 1 404 0
 1439 0562 FFF7FEFF 		bl	IntMasterEnable
 405:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 406:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 407:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return inputBufFillLevel-1; // removing the command byte
 1440              		.loc 1 407 0
 1441 0566 FB79     		ldrb	r3, [r7, #7]
 1442 0568 013B     		subs	r3, r3, #1
 1443 056a DBB2     		uxtb	r3, r3
 408:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1444              		.loc 1 408 0
 1445 056c 1846     		mov	r0, r3
 1446 056e 0837     		adds	r7, r7, #8
 1447              		.cfi_def_cfa_offset 8
 1448 0570 BD46     		mov	sp, r7
 1449              		.cfi_def_cfa_register 13
 1450              		@ sp needed
 1451 0572 80BD     		pop	{r7, pc}
 1452              	.L74:
 1453              		.align	2
 1454              	.L73:
 1455 0574 00000000 		.word	openserial_vars
 1456              		.cfi_endproc
 1457              	.LFE14:
 1459              		.align	1
 1460              		.global	openserial_getInputBuffer
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu softvfp
 1466              	openserial_getInputBuffer:
 1467              	.LFB15:
 409:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 410:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** uint8_t openserial_getInputBuffer(uint8_t* bufferToWrite, uint8_t maxNumBytes) {
 1468              		.loc 1 410 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 16
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472 0578 80B5     		push	{r7, lr}
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 057a 84B0     		sub	sp, sp, #16
 1477              		.cfi_def_cfa_offset 24
 1478 057c 00AF     		add	r7, sp, #0
 1479              		.cfi_def_cfa_register 7
 1480 057e 7860     		str	r0, [r7, #4]
 1481 0580 0B46     		mov	r3, r1
 1482 0582 FB70     		strb	r3, [r7, #3]
 411:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t numBytesWritten;
 412:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t inputBufFillLevel;
 413:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 414:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 415:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 416:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1483              		.loc 1 416 0
 1484 0584 FFF7FEFF 		bl	IntMasterDisable
 417:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     inputBufFillLevel = openserial_vars.inputBufFillLevel;
 1485              		.loc 1 417 0
 1486 0588 144B     		ldr	r3, .L79
 1487 058a 93F8D230 		ldrb	r3, [r3, #210]
 1488 058e BB73     		strb	r3, [r7, #14]
 418:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1489              		.loc 1 418 0
 1490 0590 FFF7FEFF 		bl	IntMasterEnable
 419:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 420:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 421:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (maxNumBytes<inputBufFillLevel-1) {
 1491              		.loc 1 421 0
 1492 0594 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1493 0596 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1494 0598 013B     		subs	r3, r3, #1
 1495 059a 9A42     		cmp	r2, r3
 1496 059c 0CDA     		bge	.L76
 422:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_printError(
 1497              		.loc 1 422 0
 1498 059e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1499 05a0 9AB2     		uxth	r2, r3
 1500 05a2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1501 05a4 9BB2     		uxth	r3, r3
 1502 05a6 013B     		subs	r3, r3, #1
 1503 05a8 9BB2     		uxth	r3, r3
 1504 05aa 0321     		movs	r1, #3
 1505 05ac 0420     		movs	r0, #4
 1506 05ae FFF7FEFF 		bl	openserial_printError
 423:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             COMPONENT_OPENSERIAL,
 424:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ERR_GETDATA_ASKS_TOO_FEW_BYTES,
 425:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             (errorparameter_t)maxNumBytes,
 426:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             (errorparameter_t)inputBufFillLevel-1
 427:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         );
 428:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         numBytesWritten = 0;
 1507              		.loc 1 428 0
 1508 05b2 0023     		movs	r3, #0
 1509 05b4 FB73     		strb	r3, [r7, #15]
 1510 05b6 0CE0     		b	.L77
 1511              	.L76:
 429:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 430:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         numBytesWritten = inputBufFillLevel-1;
 1512              		.loc 1 430 0
 1513 05b8 BB7B     		ldrb	r3, [r7, #14]
 1514 05ba 013B     		subs	r3, r3, #1
 1515 05bc FB73     		strb	r3, [r7, #15]
 431:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         //<<<<<<<<<<<<<<<<<<<<<<<
 432:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         DISABLE_INTERRUPTS();
 1516              		.loc 1 432 0
 1517 05be FFF7FEFF 		bl	IntMasterDisable
 433:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         memcpy(bufferToWrite,&(openserial_vars.inputBuf[1]),numBytesWritten);
 1518              		.loc 1 433 0
 1519 05c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1520 05c4 1A46     		mov	r2, r3
 1521 05c6 0649     		ldr	r1, .L79+4
 1522 05c8 7868     		ldr	r0, [r7, #4]
 1523 05ca FFF7FEFF 		bl	memcpy
 434:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ENABLE_INTERRUPTS();
 1524              		.loc 1 434 0
 1525 05ce FFF7FEFF 		bl	IntMasterEnable
 1526              	.L77:
 435:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         //>>>>>>>>>>>>>>>>>>>>>>>
 436:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 437:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 438:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return numBytesWritten;
 1527              		.loc 1 438 0
 1528 05d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 439:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1529              		.loc 1 439 0
 1530 05d4 1846     		mov	r0, r3
 1531 05d6 1037     		adds	r7, r7, #16
 1532              		.cfi_def_cfa_offset 8
 1533 05d8 BD46     		mov	sp, r7
 1534              		.cfi_def_cfa_register 13
 1535              		@ sp needed
 1536 05da 80BD     		pop	{r7, pc}
 1537              	.L80:
 1538              		.align	2
 1539              	.L79:
 1540 05dc 00000000 		.word	openserial_vars
 1541 05e0 0B000000 		.word	openserial_vars+11
 1542              		.cfi_endproc
 1543              	.LFE15:
 1545              		.align	1
 1546              		.global	openserial_flush
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu softvfp
 1552              	openserial_flush:
 1553              	.LFB16:
 440:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 441:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== scheduling
 442:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 443:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_flush(void) {
 1554              		.loc 1 443 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558 05e4 80B5     		push	{r7, lr}
 1559              		.cfi_def_cfa_offset 8
 1560              		.cfi_offset 7, -8
 1561              		.cfi_offset 14, -4
 1562 05e6 00AF     		add	r7, sp, #0
 1563              		.cfi_def_cfa_register 7
 444:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 445:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 446:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 447:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1564              		.loc 1 447 0
 1565 05e8 FFF7FEFF 		bl	IntMasterDisable
 448:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.fBusyFlushing==FALSE) {
 1566              		.loc 1 448 0
 1567 05ec 1F4B     		ldr	r3, .L86
 1568 05ee 93F8DE34 		ldrb	r3, [r3, #1246]	@ zero_extendqisi2
 1569 05f2 83F00103 		eor	r3, r3, #1
 1570 05f6 DBB2     		uxtb	r3, r3
 1571 05f8 002B     		cmp	r3, #0
 1572 05fa 33D0     		beq	.L82
 449:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.ctsStateChanged==TRUE) {
 1573              		.loc 1 449 0
 1574 05fc 1B4B     		ldr	r3, .L86
 1575 05fe 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1576 0600 012B     		cmp	r3, #1
 1577 0602 0ED1     		bne	.L83
 450:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // send CTS
 451:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 452:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 453:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (openserial_vars.fInhibited==TRUE) {
 1578              		.loc 1 453 0
 1579 0604 194B     		ldr	r3, .L86
 1580 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1581 0608 012B     		cmp	r3, #1
 1582 060a 03D1     		bne	.L84
 454:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 uart_setCTS(FALSE);
 1583              		.loc 1 454 0
 1584 060c 0020     		movs	r0, #0
 1585 060e FFF7FEFF 		bl	uart_setCTS
 1586 0612 02E0     		b	.L85
 1587              	.L84:
 455:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 456:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 uart_setCTS(TRUE);
 1588              		.loc 1 456 0
 1589 0614 0120     		movs	r0, #1
 1590 0616 FFF7FEFF 		bl	uart_setCTS
 1591              	.L85:
 457:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 458:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 459:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.ctsStateChanged = FALSE;
 1592              		.loc 1 459 0
 1593 061a 144B     		ldr	r3, .L86
 1594 061c 0022     		movs	r2, #0
 1595 061e 5A70     		strb	r2, [r3, #1]
 1596 0620 20E0     		b	.L82
 1597              	.L83:
 460:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
 461:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (openserial_vars.fInhibited==TRUE) {
 1598              		.loc 1 461 0
 1599 0622 124B     		ldr	r3, .L86
 1600 0624 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1601 0626 012B     		cmp	r3, #1
 1602 0628 1CD0     		beq	.L82
 462:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 // currently inhibited
 463:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 464:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 // not inhibited
 465:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 if (openserial_vars.outputBufIdxW!=openserial_vars.outputBufIdxR) {
 1603              		.loc 1 465 0
 1604 062a 104B     		ldr	r3, .L86
 1605 062c B3F8DA24 		ldrh	r2, [r3, #1242]
 1606 0630 0E4B     		ldr	r3, .L86
 1607 0632 B3F8DC34 		ldrh	r3, [r3, #1244]
 1608 0636 9A42     		cmp	r2, r3
 1609 0638 14D0     		beq	.L82
 466:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     // I have some bytes to transmit
 467:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 468:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 469:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     uart_writeCircularBuffer_FASTSIM(
 470:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                         openserial_vars.outputBuf,
 471:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                         &openserial_vars.outputBufIdxR,
 472:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                         &openserial_vars.outputBufIdxW
 473:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     );
 474:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 475:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     uart_writeByte(openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.
 1610              		.loc 1 475 0
 1611 063a 0C4B     		ldr	r3, .L86
 1612 063c B3F8DC34 		ldrh	r3, [r3, #1244]
 1613 0640 5A1C     		adds	r2, r3, #1
 1614 0642 91B2     		uxth	r1, r2
 1615 0644 094A     		ldr	r2, .L86
 1616 0646 A2F8DC14 		strh	r1, [r2, #1244]	@ movhi
 1617 064a C3F30903 		ubfx	r3, r3, #0, #10
 1618 064e 074A     		ldr	r2, .L86
 1619 0650 1344     		add	r3, r3, r2
 1620 0652 93F8D930 		ldrb	r3, [r3, #217]	@ zero_extendqisi2
 1621 0656 1846     		mov	r0, r3
 1622 0658 FFF7FEFF 		bl	uart_writeByte
 476:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     openserial_vars.fBusyFlushing = TRUE;
 1623              		.loc 1 476 0
 1624 065c 034B     		ldr	r3, .L86
 1625 065e 0122     		movs	r2, #1
 1626 0660 83F8DE24 		strb	r2, [r3, #1246]
 1627              	.L82:
 477:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 478:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 479:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 480:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 481:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 482:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1628              		.loc 1 482 0
 1629 0664 FFF7FEFF 		bl	IntMasterEnable
 483:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 484:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1630              		.loc 1 484 0
 1631 0668 00BF     		nop
 1632 066a 80BD     		pop	{r7, pc}
 1633              	.L87:
 1634              		.align	2
 1635              	.L86:
 1636 066c 00000000 		.word	openserial_vars
 1637              		.cfi_endproc
 1638              	.LFE16:
 1640              		.align	1
 1641              		.global	openserial_inhibitStart
 1642              		.syntax unified
 1643              		.thumb
 1644              		.thumb_func
 1645              		.fpu softvfp
 1647              	openserial_inhibitStart:
 1648              	.LFB17:
 485:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 486:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_inhibitStart(void) {
 1649              		.loc 1 486 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653 0670 80B5     		push	{r7, lr}
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0672 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 487:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // this function needs to run in non-interrupt mode
 488:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // since the inhibitStart is always called in an interrupt mode,
 489:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // DISABLE_INTERRUPT is not necessary here.
 490:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 491:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fInhibited      = TRUE;
 1659              		.loc 1 491 0
 1660 0674 044B     		ldr	r3, .L89
 1661 0676 0122     		movs	r2, #1
 1662 0678 1A70     		strb	r2, [r3]
 492:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 493:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 494:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.ctsStateChanged = TRUE;
 1663              		.loc 1 494 0
 1664 067a 034B     		ldr	r3, .L89
 1665 067c 0122     		movs	r2, #1
 1666 067e 5A70     		strb	r2, [r3, #1]
 495:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 496:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 497:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // it's openserial_flush() which will set CTS
 498:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1667              		.loc 1 498 0
 1668 0680 FFF7FEFF 		bl	openserial_flush
 499:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1669              		.loc 1 499 0
 1670 0684 00BF     		nop
 1671 0686 80BD     		pop	{r7, pc}
 1672              	.L90:
 1673              		.align	2
 1674              	.L89:
 1675 0688 00000000 		.word	openserial_vars
 1676              		.cfi_endproc
 1677              	.LFE17:
 1679              		.align	1
 1680              		.global	openserial_inhibitStop
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu softvfp
 1686              	openserial_inhibitStop:
 1687              	.LFB18:
 500:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 501:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_inhibitStop(void) {
 1688              		.loc 1 501 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 068c 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 068e 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 502:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 503:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 504:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 505:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1698              		.loc 1 505 0
 1699 0690 FFF7FEFF 		bl	IntMasterDisable
 506:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.fInhibited      = FALSE;
 1700              		.loc 1 506 0
 1701 0694 054B     		ldr	r3, .L92
 1702 0696 0022     		movs	r2, #0
 1703 0698 1A70     		strb	r2, [r3]
 507:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #ifdef FASTSIM
 508:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #else
 509:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.ctsStateChanged = TRUE;
 1704              		.loc 1 509 0
 1705 069a 044B     		ldr	r3, .L92
 1706 069c 0122     		movs	r2, #1
 1707 069e 5A70     		strb	r2, [r3, #1]
 510:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** #endif
 511:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1708              		.loc 1 511 0
 1709 06a0 FFF7FEFF 		bl	IntMasterEnable
 512:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 513:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 514:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // it's openserial_flush() which will set CTS
 515:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1710              		.loc 1 515 0
 1711 06a4 FFF7FEFF 		bl	openserial_flush
 516:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1712              		.loc 1 516 0
 1713 06a8 00BF     		nop
 1714 06aa 80BD     		pop	{r7, pc}
 1715              	.L93:
 1716              		.align	2
 1717              	.L92:
 1718 06ac 00000000 		.word	openserial_vars
 1719              		.cfi_endproc
 1720              	.LFE18:
 1722              		.align	1
 1723              		.global	debugPrint_outBufferIndexes
 1724              		.syntax unified
 1725              		.thumb
 1726              		.thumb_func
 1727              		.fpu softvfp
 1729              	debugPrint_outBufferIndexes:
 1730              	.LFB19:
 517:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 518:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== debugprint
 519:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 520:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 521:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Trigger this module to print status information, over serial.
 522:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 523:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** debugPrint_* functions are used by the openserial module to continuously print
 524:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** status information about several modules in the OpenWSN stack.
 525:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 526:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \returns TRUE if this function printed something, FALSE otherwise.
 527:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 528:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** bool debugPrint_outBufferIndexes(void) {
 1731              		.loc 1 528 0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 8
 1734              		@ frame_needed = 1, uses_anonymous_args = 0
 1735 06b0 80B5     		push	{r7, lr}
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 7, -8
 1738              		.cfi_offset 14, -4
 1739 06b2 82B0     		sub	sp, sp, #8
 1740              		.cfi_def_cfa_offset 16
 1741 06b4 00AF     		add	r7, sp, #0
 1742              		.cfi_def_cfa_register 7
 529:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint16_t temp_buffer[2];
 530:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 531:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 532:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 533:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 1743              		.loc 1 533 0
 1744 06b6 FFF7FEFF 		bl	IntMasterDisable
 534:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     temp_buffer[0] = openserial_vars.outputBufIdxW;
 1745              		.loc 1 534 0
 1746 06ba 0A4B     		ldr	r3, .L96
 1747 06bc B3F8DA34 		ldrh	r3, [r3, #1242]
 1748 06c0 BB80     		strh	r3, [r7, #4]	@ movhi
 535:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     temp_buffer[1] = openserial_vars.outputBufIdxR;
 1749              		.loc 1 535 0
 1750 06c2 084B     		ldr	r3, .L96
 1751 06c4 B3F8DC34 		ldrh	r3, [r3, #1244]
 1752 06c8 FB80     		strh	r3, [r7, #6]	@ movhi
 536:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 1753              		.loc 1 536 0
 1754 06ca FFF7FEFF 		bl	IntMasterEnable
 537:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 538:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 539:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printStatus(
 1755              		.loc 1 539 0
 1756 06ce 3B1D     		adds	r3, r7, #4
 1757 06d0 0422     		movs	r2, #4
 1758 06d2 1946     		mov	r1, r3
 1759 06d4 0320     		movs	r0, #3
 1760 06d6 FFF7FEFF 		bl	openserial_printStatus
 540:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         STATUS_OUTBUFFERINDEXES,
 541:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (uint8_t*)temp_buffer,
 542:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         sizeof(temp_buffer)
 543:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 544:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 545:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return TRUE;
 1761              		.loc 1 545 0
 1762 06da 0123     		movs	r3, #1
 546:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1763              		.loc 1 546 0
 1764 06dc 1846     		mov	r0, r3
 1765 06de 0837     		adds	r7, r7, #8
 1766              		.cfi_def_cfa_offset 8
 1767 06e0 BD46     		mov	sp, r7
 1768              		.cfi_def_cfa_register 13
 1769              		@ sp needed
 1770 06e2 80BD     		pop	{r7, pc}
 1771              	.L97:
 1772              		.align	2
 1773              	.L96:
 1774 06e4 00000000 		.word	openserial_vars
 1775              		.cfi_endproc
 1776              	.LFE19:
 1778              		.align	1
 1779              		.global	openserial_printInfoErrorCritical
 1780              		.syntax unified
 1781              		.thumb
 1782              		.thumb_func
 1783              		.fpu softvfp
 1785              	openserial_printInfoErrorCritical:
 1786              	.LFB20:
 547:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 548:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== private =========================================
 549:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 550:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== printing
 551:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 552:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** owerror_t openserial_printInfoErrorCritical(
 553:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     char             severity,
 554:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          calling_component,
 555:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t          error_code,
 556:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg1,
 557:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     errorparameter_t arg2
 558:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** ) {
 1787              		.loc 1 558 0
 1788              		.cfi_startproc
 1789              		@ args = 4, pretend = 0, frame = 8
 1790              		@ frame_needed = 1, uses_anonymous_args = 0
 1791 06e8 90B5     		push	{r4, r7, lr}
 1792              		.cfi_def_cfa_offset 12
 1793              		.cfi_offset 4, -12
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 06ea 83B0     		sub	sp, sp, #12
 1797              		.cfi_def_cfa_offset 24
 1798 06ec 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 1800 06ee 0446     		mov	r4, r0
 1801 06f0 0846     		mov	r0, r1
 1802 06f2 1146     		mov	r1, r2
 1803 06f4 1A46     		mov	r2, r3
 1804 06f6 2346     		mov	r3, r4
 1805 06f8 FB71     		strb	r3, [r7, #7]
 1806 06fa 0346     		mov	r3, r0
 1807 06fc BB71     		strb	r3, [r7, #6]
 1808 06fe 0B46     		mov	r3, r1
 1809 0700 7B71     		strb	r3, [r7, #5]
 1810 0702 1346     		mov	r3, r2	@ movhi
 1811 0704 7B80     		strh	r3, [r7, #2]	@ movhi
 559:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 560:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcOpen();
 1812              		.loc 1 560 0
 1813 0706 FFF7FEFF 		bl	outputHdlcOpen
 561:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(severity);
 1814              		.loc 1 561 0
 1815 070a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1816 070c 1846     		mov	r0, r3
 1817 070e FFF7FEFF 		bl	outputHdlcWrite
 562:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[0]);
 1818              		.loc 1 562 0
 1819 0712 0120     		movs	r0, #1
 1820 0714 FFF7FEFF 		bl	idmanager_getMyID
 1821 0718 0346     		mov	r3, r0
 1822 071a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1823 071c 1846     		mov	r0, r3
 1824 071e FFF7FEFF 		bl	outputHdlcWrite
 563:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(idmanager_getMyID(ADDR_16B)->addr_16b[1]);
 1825              		.loc 1 563 0
 1826 0722 0120     		movs	r0, #1
 1827 0724 FFF7FEFF 		bl	idmanager_getMyID
 1828 0728 0346     		mov	r3, r0
 1829 072a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1830 072c 1846     		mov	r0, r3
 1831 072e FFF7FEFF 		bl	outputHdlcWrite
 564:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(calling_component);
 1832              		.loc 1 564 0
 1833 0732 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1834 0734 1846     		mov	r0, r3
 1835 0736 FFF7FEFF 		bl	outputHdlcWrite
 565:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite(error_code);
 1836              		.loc 1 565 0
 1837 073a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1838 073c 1846     		mov	r0, r3
 1839 073e FFF7FEFF 		bl	outputHdlcWrite
 566:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t)((arg1 & 0xff00)>>8));
 1840              		.loc 1 566 0
 1841 0742 7B88     		ldrh	r3, [r7, #2]
 1842 0744 1B0A     		lsrs	r3, r3, #8
 1843 0746 9BB2     		uxth	r3, r3
 1844 0748 DBB2     		uxtb	r3, r3
 1845 074a 1846     		mov	r0, r3
 1846 074c FFF7FEFF 		bl	outputHdlcWrite
 567:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t) (arg1 & 0x00ff));
 1847              		.loc 1 567 0
 1848 0750 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1849 0752 DBB2     		uxtb	r3, r3
 1850 0754 1846     		mov	r0, r3
 1851 0756 FFF7FEFF 		bl	outputHdlcWrite
 568:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t)((arg2 & 0xff00)>>8));
 1852              		.loc 1 568 0
 1853 075a 3B8B     		ldrh	r3, [r7, #24]
 1854 075c 1B0A     		lsrs	r3, r3, #8
 1855 075e 9BB2     		uxth	r3, r3
 1856 0760 DBB2     		uxtb	r3, r3
 1857 0762 1846     		mov	r0, r3
 1858 0764 FFF7FEFF 		bl	outputHdlcWrite
 569:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((uint8_t) (arg2 & 0x00ff));
 1859              		.loc 1 569 0
 1860 0768 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1861 076a DBB2     		uxtb	r3, r3
 1862 076c 1846     		mov	r0, r3
 1863 076e FFF7FEFF 		bl	outputHdlcWrite
 570:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcClose();
 1864              		.loc 1 570 0
 1865 0772 FFF7FEFF 		bl	outputHdlcClose
 571:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 572:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // start TX'ing
 573:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_flush();
 1866              		.loc 1 573 0
 1867 0776 FFF7FEFF 		bl	openserial_flush
 574:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 575:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return E_SUCCESS;
 1868              		.loc 1 575 0
 1869 077a 0023     		movs	r3, #0
 576:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1870              		.loc 1 576 0
 1871 077c 1846     		mov	r0, r3
 1872 077e 0C37     		adds	r7, r7, #12
 1873              		.cfi_def_cfa_offset 12
 1874 0780 BD46     		mov	sp, r7
 1875              		.cfi_def_cfa_register 13
 1876              		@ sp needed
 1877 0782 90BD     		pop	{r4, r7, pc}
 1878              		.cfi_endproc
 1879              	.LFE20:
 1881              		.align	1
 1882              		.global	openserial_handleRxFrame
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1886              		.fpu softvfp
 1888              	openserial_handleRxFrame:
 1889              	.LFB21:
 577:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 578:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== command handlers
 579:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 580:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // executed in ISR
 581:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleRxFrame() {
 1890              		.loc 1 581 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 8
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894 0784 80B5     		push	{r7, lr}
 1895              		.cfi_def_cfa_offset 8
 1896              		.cfi_offset 7, -8
 1897              		.cfi_offset 14, -4
 1898 0786 82B0     		sub	sp, sp, #8
 1899              		.cfi_def_cfa_offset 16
 1900 0788 00AF     		add	r7, sp, #0
 1901              		.cfi_def_cfa_register 7
 582:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t cmdByte;
 583:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 584:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     cmdByte = openserial_vars.inputBuf[0];
 1902              		.loc 1 584 0
 1903 078a 2A4B     		ldr	r3, .L110
 1904 078c 9B7A     		ldrb	r3, [r3, #10]
 1905 078e FB71     		strb	r3, [r7, #7]
 585:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // call hard-coded commands
 586:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // FIXME: needs to be replaced by registered commands only
 587:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     switch (cmdByte) {
 1906              		.loc 1 587 0
 1907 0790 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1908 0792 433B     		subs	r3, r3, #67
 1909 0794 102B     		cmp	r3, #16
 1910 0796 3BD8     		bhi	.L101
 1911 0798 01A2     		adr	r2, .L103
 1912 079a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1913 079e 00BF     		.p2align 2
 1914              	.L103:
 1915 07a0 0B080000 		.word	.L102+1
 1916 07a4 F1070000 		.word	.L104+1
 1917 07a8 11080000 		.word	.L101+1
 1918 07ac 11080000 		.word	.L101+1
 1919 07b0 11080000 		.word	.L101+1
 1920 07b4 11080000 		.word	.L101+1
 1921 07b8 11080000 		.word	.L101+1
 1922 07bc 11080000 		.word	.L101+1
 1923 07c0 11080000 		.word	.L101+1
 1924 07c4 11080000 		.word	.L101+1
 1925 07c8 11080000 		.word	.L101+1
 1926 07cc 11080000 		.word	.L101+1
 1927 07d0 11080000 		.word	.L101+1
 1928 07d4 11080000 		.word	.L101+1
 1929 07d8 EB070000 		.word	.L105+1
 1930 07dc E5070000 		.word	.L106+1
 1931 07e0 F7070000 		.word	.L107+1
 1932              		.p2align 1
 1933              	.L106:
 588:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_SETROOT:
 589:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             idmanager_triggerAboutRoot();
 1934              		.loc 1 589 0
 1935 07e4 FFF7FEFF 		bl	idmanager_triggerAboutRoot
 590:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1936              		.loc 1 590 0
 1937 07e8 12E0     		b	.L101
 1938              	.L105:
 591:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_RESET:
 592:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             board_reset();
 1939              		.loc 1 592 0
 1940 07ea FFF7FEFF 		bl	board_reset
 593:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1941              		.loc 1 593 0
 1942 07ee 0FE0     		b	.L101
 1943              	.L104:
 594:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_DATA:
 595:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openbridge_triggerData();
 1944              		.loc 1 595 0
 1945 07f0 FFF7FEFF 		bl	openbridge_triggerData
 596:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1946              		.loc 1 596 0
 1947 07f4 0CE0     		b	.L101
 1948              	.L107:
 597:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_TRIGGERSERIALECHO:
 598:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_handleEcho(
 599:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 &openserial_vars.inputBuf[1],
 600:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 openserial_vars.inputBufFillLevel-1
 1949              		.loc 1 600 0
 1950 07f6 0F4B     		ldr	r3, .L110
 1951 07f8 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 598:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 &openserial_vars.inputBuf[1],
 1952              		.loc 1 598 0
 1953 07fc 013B     		subs	r3, r3, #1
 1954 07fe DBB2     		uxtb	r3, r3
 1955 0800 1946     		mov	r1, r3
 1956 0802 0D48     		ldr	r0, .L110+4
 1957 0804 FFF7FEFF 		bl	openserial_handleEcho
 601:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             );
 602:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1958              		.loc 1 602 0
 1959 0808 02E0     		b	.L101
 1960              	.L102:
 603:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case SERFRAME_PC2MOTE_COMMAND:
 604:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_handleCommands();
 1961              		.loc 1 604 0
 1962 080a FFF7FEFF 		bl	openserial_handleCommands
 605:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 1963              		.loc 1 605 0
 1964 080e 00BF     		nop
 1965              	.L101:
 606:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 607:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // call registered commands
 608:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.registeredCmd!=NULL && openserial_vars.registeredCmd->cmdId==cmdByte) {
 1966              		.loc 1 608 0
 1967 0810 084B     		ldr	r3, .L110
 1968 0812 5B68     		ldr	r3, [r3, #4]
 1969 0814 002B     		cmp	r3, #0
 1970 0816 09D0     		beq	.L109
 1971              		.loc 1 608 0 is_stmt 0 discriminator 1
 1972 0818 064B     		ldr	r3, .L110
 1973 081a 5B68     		ldr	r3, [r3, #4]
 1974 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 081e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1976 0820 9A42     		cmp	r2, r3
 1977 0822 03D1     		bne	.L109
 609:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.registeredCmd->cb();
 1978              		.loc 1 609 0 is_stmt 1
 1979 0824 034B     		ldr	r3, .L110
 1980 0826 5B68     		ldr	r3, [r3, #4]
 1981 0828 5B68     		ldr	r3, [r3, #4]
 1982 082a 9847     		blx	r3
 1983              	.LVL0:
 1984              	.L109:
 610:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 611:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 1985              		.loc 1 611 0
 1986 082c 00BF     		nop
 1987 082e 0837     		adds	r7, r7, #8
 1988              		.cfi_def_cfa_offset 8
 1989 0830 BD46     		mov	sp, r7
 1990              		.cfi_def_cfa_register 13
 1991              		@ sp needed
 1992 0832 80BD     		pop	{r7, pc}
 1993              	.L111:
 1994              		.align	2
 1995              	.L110:
 1996 0834 00000000 		.word	openserial_vars
 1997 0838 0B000000 		.word	openserial_vars+11
 1998              		.cfi_endproc
 1999              	.LFE21:
 2001              		.align	1
 2002              		.global	openserial_handleEcho
 2003              		.syntax unified
 2004              		.thumb
 2005              		.thumb_func
 2006              		.fpu softvfp
 2008              	openserial_handleEcho:
 2009              	.LFB22:
 612:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 613:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleEcho(uint8_t* buf, uint8_t bufLen){
 2010              		.loc 1 613 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 8
 2013              		@ frame_needed = 1, uses_anonymous_args = 0
 2014 083c 80B5     		push	{r7, lr}
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 7, -8
 2017              		.cfi_offset 14, -4
 2018 083e 82B0     		sub	sp, sp, #8
 2019              		.cfi_def_cfa_offset 16
 2020 0840 00AF     		add	r7, sp, #0
 2021              		.cfi_def_cfa_register 7
 2022 0842 7860     		str	r0, [r7, #4]
 2023 0844 0B46     		mov	r3, r1
 2024 0846 FB70     		strb	r3, [r7, #3]
 614:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // echo back what you received
 615:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printData(
 2025              		.loc 1 615 0
 2026 0848 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2027 084a 1946     		mov	r1, r3
 2028 084c 7868     		ldr	r0, [r7, #4]
 2029 084e FFF7FEFF 		bl	openserial_printData
 616:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         buf,
 617:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         bufLen
 618:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
 619:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2030              		.loc 1 619 0
 2031 0852 00BF     		nop
 2032 0854 0837     		adds	r7, r7, #8
 2033              		.cfi_def_cfa_offset 8
 2034 0856 BD46     		mov	sp, r7
 2035              		.cfi_def_cfa_register 13
 2036              		@ sp needed
 2037 0858 80BD     		pop	{r7, pc}
 2038              		.cfi_endproc
 2039              	.LFE22:
 2041              		.align	1
 2042              		.global	openserial_get6pInfo
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu softvfp
 2048              	openserial_get6pInfo:
 2049              	.LFB23:
 620:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 621:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_get6pInfo(uint8_t commandId, uint8_t* code,uint8_t* cellOptions,uint8_t* numCells,c
 2050              		.loc 1 621 0
 2051              		.cfi_startproc
 2052              		@ args = 24, pretend = 0, frame = 24
 2053              		@ frame_needed = 1, uses_anonymous_args = 0
 2054              		@ link register save eliminated.
 2055 085a 80B4     		push	{r7}
 2056              		.cfi_def_cfa_offset 4
 2057              		.cfi_offset 7, -4
 2058 085c 87B0     		sub	sp, sp, #28
 2059              		.cfi_def_cfa_offset 32
 2060 085e 00AF     		add	r7, sp, #0
 2061              		.cfi_def_cfa_register 7
 2062 0860 B960     		str	r1, [r7, #8]
 2063 0862 7A60     		str	r2, [r7, #4]
 2064 0864 3B60     		str	r3, [r7]
 2065 0866 0346     		mov	r3, r0
 2066 0868 FB73     		strb	r3, [r7, #15]
 622:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t i;
 623:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t celllistLen;
 624:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 625:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // clear command
 626:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_CLEAR){
 2067              		.loc 1 626 0
 2068 086a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2069 086c 0E2B     		cmp	r3, #14
 2070 086e 03D1     		bne	.L114
 627:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_CLEAR;
 2071              		.loc 1 627 0
 2072 0870 BB68     		ldr	r3, [r7, #8]
 2073 0872 0722     		movs	r2, #7
 2074 0874 1A70     		strb	r2, [r3]
 628:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2075              		.loc 1 628 0
 2076 0876 61E1     		b	.L113
 2077              	.L114:
 629:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 630:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 631:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     *cellOptions  = openserial_vars.inputBuf[ptr];
 2078              		.loc 1 631 0
 2079 0878 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2080 087c B14A     		ldr	r2, .L128
 2081 087e 1344     		add	r3, r3, r2
 2082 0880 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2083 0882 7B68     		ldr	r3, [r7, #4]
 2084 0884 1A70     		strb	r2, [r3]
 632:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr          += 1;
 2085              		.loc 1 632 0
 2086 0886 97F83030 		ldrb	r3, [r7, #48]
 2087 088a 0133     		adds	r3, r3, #1
 2088 088c 87F83030 		strb	r3, [r7, #48]
 633:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandLen   -= 1;
 2089              		.loc 1 633 0
 2090 0890 97F83430 		ldrb	r3, [r7, #52]
 2091 0894 013B     		subs	r3, r3, #1
 2092 0896 87F83430 		strb	r3, [r7, #52]
 634:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 635:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // list command
 636:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_LIST){
 2093              		.loc 1 636 0
 2094 089a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2095 089c 0D2B     		cmp	r3, #13
 2096 089e 1BD1     		bne	.L116
 637:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_LIST;
 2097              		.loc 1 637 0
 2098 08a0 BB68     		ldr	r3, [r7, #8]
 2099 08a2 0522     		movs	r2, #5
 2100 08a4 1A70     		strb	r2, [r3]
 638:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *listOffset   = openserial_vars.inputBuf[ptr];
 2101              		.loc 1 638 0
 2102 08a6 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2103 08aa A64A     		ldr	r2, .L128
 2104 08ac 1344     		add	r3, r3, r2
 2105 08ae 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2106 08b0 BB6A     		ldr	r3, [r7, #40]
 2107 08b2 1A70     		strb	r2, [r3]
 639:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ptr += 1;
 2108              		.loc 1 639 0
 2109 08b4 97F83030 		ldrb	r3, [r7, #48]
 2110 08b8 0133     		adds	r3, r3, #1
 2111 08ba 87F83030 		strb	r3, [r7, #48]
 640:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *maxListLen   = openserial_vars.inputBuf[ptr];
 2112              		.loc 1 640 0
 2113 08be 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2114 08c2 A04A     		ldr	r2, .L128
 2115 08c4 1344     		add	r3, r3, r2
 2116 08c6 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2117 08c8 FB6A     		ldr	r3, [r7, #44]
 2118 08ca 1A70     		strb	r2, [r3]
 641:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ptr += 1;
 2119              		.loc 1 641 0
 2120 08cc 97F83030 		ldrb	r3, [r7, #48]
 2121 08d0 0133     		adds	r3, r3, #1
 2122 08d2 87F83030 		strb	r3, [r7, #48]
 642:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2123              		.loc 1 642 0
 2124 08d6 31E1     		b	.L113
 2125              	.L116:
 643:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 644:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 645:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // count command
 646:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_COUNT){
 2126              		.loc 1 646 0
 2127 08d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2128 08da 0C2B     		cmp	r3, #12
 2129 08dc 03D1     		bne	.L117
 647:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_COUNT;
 2130              		.loc 1 647 0
 2131 08de BB68     		ldr	r3, [r7, #8]
 2132 08e0 0422     		movs	r2, #4
 2133 08e2 1A70     		strb	r2, [r3]
 648:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2134              		.loc 1 648 0
 2135 08e4 2AE1     		b	.L113
 2136              	.L117:
 649:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 650:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 651:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     *numCells   = openserial_vars.inputBuf[ptr];
 2137              		.loc 1 651 0
 2138 08e6 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2139 08ea 964A     		ldr	r2, .L128
 2140 08ec 1344     		add	r3, r3, r2
 2141 08ee 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2142 08f0 3B68     		ldr	r3, [r7]
 2143 08f2 1A70     		strb	r2, [r3]
 652:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr        += 1;
 2144              		.loc 1 652 0
 2145 08f4 97F83030 		ldrb	r3, [r7, #48]
 2146 08f8 0133     		adds	r3, r3, #1
 2147 08fa 87F83030 		strb	r3, [r7, #48]
 653:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandLen -= 1;
 2148              		.loc 1 653 0
 2149 08fe 97F83430 		ldrb	r3, [r7, #52]
 2150 0902 013B     		subs	r3, r3, #1
 2151 0904 87F83430 		strb	r3, [r7, #52]
 654:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 655:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // add command
 656:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_ADD){
 2152              		.loc 1 656 0
 2153 0908 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2154 090a 092B     		cmp	r3, #9
 2155 090c 42D1     		bne	.L118
 657:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_ADD;
 2156              		.loc 1 657 0
 2157 090e BB68     		ldr	r3, [r7, #8]
 2158 0910 0122     		movs	r2, #1
 2159 0912 1A70     		strb	r2, [r3]
 658:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list
 659:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2160              		.loc 1 659 0
 2161 0914 0023     		movs	r3, #0
 2162 0916 FB75     		strb	r3, [r7, #23]
 660:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         celllistLen = commandLen/2;
 2163              		.loc 1 660 0
 2164 0918 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2165 091c 5B08     		lsrs	r3, r3, #1
 2166 091e BB75     		strb	r3, [r7, #22]
 661:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(commandLen>celllistLen){
 2167              		.loc 1 661 0
 2168 0920 32E0     		b	.L119
 2169              	.L120:
 662:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2170              		.loc 1 662 0
 2171 0922 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2172 0926 874A     		ldr	r2, .L128
 2173 0928 1344     		add	r3, r3, r2
 2174 092a 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2175 092c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2176 092e 1346     		mov	r3, r2
 2177 0930 9B00     		lsls	r3, r3, #2
 2178 0932 1344     		add	r3, r3, r2
 2179 0934 3A6A     		ldr	r2, [r7, #32]
 2180 0936 1344     		add	r3, r3, r2
 2181 0938 8AB2     		uxth	r2, r1
 2182 093a A3F80120 		strh	r2, [r3, #1]	@ unaligned
 663:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].channeloffset  = openserial_vars.inputBuf[ptr+celllistLen];
 2183              		.loc 1 663 0
 2184 093e 97F83020 		ldrb	r2, [r7, #48]	@ zero_extendqisi2
 2185 0942 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2186 0944 1344     		add	r3, r3, r2
 2187 0946 7F4A     		ldr	r2, .L128
 2188 0948 1344     		add	r3, r3, r2
 2189 094a 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2190 094c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2191 094e 1346     		mov	r3, r2
 2192 0950 9B00     		lsls	r3, r3, #2
 2193 0952 1344     		add	r3, r3, r2
 2194 0954 3A6A     		ldr	r2, [r7, #32]
 2195 0956 1344     		add	r3, r3, r2
 2196 0958 8AB2     		uxth	r2, r1
 2197 095a A3F80320 		strh	r2, [r3, #3]	@ unaligned
 664:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].isUsed         = TRUE;
 2198              		.loc 1 664 0
 2199 095e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2200 0960 1346     		mov	r3, r2
 2201 0962 9B00     		lsls	r3, r3, #2
 2202 0964 1344     		add	r3, r3, r2
 2203 0966 3A6A     		ldr	r2, [r7, #32]
 2204 0968 1344     		add	r3, r3, r2
 2205 096a 0122     		movs	r2, #1
 2206 096c 1A70     		strb	r2, [r3]
 665:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2207              		.loc 1 665 0
 2208 096e 97F83030 		ldrb	r3, [r7, #48]
 2209 0972 0133     		adds	r3, r3, #1
 2210 0974 87F83030 		strb	r3, [r7, #48]
 666:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             commandLen  -= 1;
 2211              		.loc 1 666 0
 2212 0978 97F83430 		ldrb	r3, [r7, #52]
 2213 097c 013B     		subs	r3, r3, #1
 2214 097e 87F83430 		strb	r3, [r7, #52]
 667:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2215              		.loc 1 667 0
 2216 0982 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2217 0984 0133     		adds	r3, r3, #1
 2218 0986 FB75     		strb	r3, [r7, #23]
 2219              	.L119:
 661:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2220              		.loc 1 661 0
 2221 0988 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 2222 098c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2223 098e 9A42     		cmp	r2, r3
 2224 0990 C7D8     		bhi	.L120
 668:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 669:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2225              		.loc 1 669 0
 2226 0992 D3E0     		b	.L113
 2227              	.L118:
 670:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 671:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 672:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // delete command
 673:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_DELETE){
 2228              		.loc 1 673 0
 2229 0994 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2230 0996 0A2B     		cmp	r3, #10
 2231 0998 42D1     		bne	.L121
 674:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_DELETE;
 2232              		.loc 1 674 0
 2233 099a BB68     		ldr	r3, [r7, #8]
 2234 099c 0222     		movs	r2, #2
 2235 099e 1A70     		strb	r2, [r3]
 675:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list
 676:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2236              		.loc 1 676 0
 2237 09a0 0023     		movs	r3, #0
 2238 09a2 FB75     		strb	r3, [r7, #23]
 677:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         celllistLen = commandLen/2;
 2239              		.loc 1 677 0
 2240 09a4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2241 09a8 5B08     		lsrs	r3, r3, #1
 2242 09aa BB75     		strb	r3, [r7, #22]
 678:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(commandLen>celllistLen){
 2243              		.loc 1 678 0
 2244 09ac 32E0     		b	.L122
 2245              	.L123:
 679:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2246              		.loc 1 679 0
 2247 09ae 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2248 09b2 644A     		ldr	r2, .L128
 2249 09b4 1344     		add	r3, r3, r2
 2250 09b6 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2251 09b8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2252 09ba 1346     		mov	r3, r2
 2253 09bc 9B00     		lsls	r3, r3, #2
 2254 09be 1344     		add	r3, r3, r2
 2255 09c0 7A6A     		ldr	r2, [r7, #36]
 2256 09c2 1344     		add	r3, r3, r2
 2257 09c4 8AB2     		uxth	r2, r1
 2258 09c6 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 680:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].channeloffset  = openserial_vars.inputBuf[ptr+celllistLen];
 2259              		.loc 1 680 0
 2260 09ca 97F83020 		ldrb	r2, [r7, #48]	@ zero_extendqisi2
 2261 09ce BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2262 09d0 1344     		add	r3, r3, r2
 2263 09d2 5C4A     		ldr	r2, .L128
 2264 09d4 1344     		add	r3, r3, r2
 2265 09d6 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2266 09d8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2267 09da 1346     		mov	r3, r2
 2268 09dc 9B00     		lsls	r3, r3, #2
 2269 09de 1344     		add	r3, r3, r2
 2270 09e0 7A6A     		ldr	r2, [r7, #36]
 2271 09e2 1344     		add	r3, r3, r2
 2272 09e4 8AB2     		uxth	r2, r1
 2273 09e6 A3F80320 		strh	r2, [r3, #3]	@ unaligned
 681:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].isUsed         = TRUE;
 2274              		.loc 1 681 0
 2275 09ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2276 09ec 1346     		mov	r3, r2
 2277 09ee 9B00     		lsls	r3, r3, #2
 2278 09f0 1344     		add	r3, r3, r2
 2279 09f2 7A6A     		ldr	r2, [r7, #36]
 2280 09f4 1344     		add	r3, r3, r2
 2281 09f6 0122     		movs	r2, #1
 2282 09f8 1A70     		strb	r2, [r3]
 682:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2283              		.loc 1 682 0
 2284 09fa 97F83030 		ldrb	r3, [r7, #48]
 2285 09fe 0133     		adds	r3, r3, #1
 2286 0a00 87F83030 		strb	r3, [r7, #48]
 683:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             commandLen  -= 1;
 2287              		.loc 1 683 0
 2288 0a04 97F83430 		ldrb	r3, [r7, #52]
 2289 0a08 013B     		subs	r3, r3, #1
 2290 0a0a 87F83430 		strb	r3, [r7, #52]
 684:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2291              		.loc 1 684 0
 2292 0a0e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2293 0a10 0133     		adds	r3, r3, #1
 2294 0a12 FB75     		strb	r3, [r7, #23]
 2295              	.L122:
 678:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2296              		.loc 1 678 0
 2297 0a14 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 2298 0a18 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2299 0a1a 9A42     		cmp	r2, r3
 2300 0a1c C7D8     		bhi	.L123
 685:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 686:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2301              		.loc 1 686 0
 2302 0a1e 8DE0     		b	.L113
 2303              	.L121:
 687:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 688:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 689:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // relocate command
 690:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (commandId == COMMAND_SET_6P_RELOCATE){
 2304              		.loc 1 690 0
 2305 0a20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2306 0a22 0B2B     		cmp	r3, #11
 2307 0a24 40F08A80 		bne	.L113
 691:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         *code = IANA_6TOP_CMD_RELOCATE;
 2308              		.loc 1 691 0
 2309 0a28 BB68     		ldr	r3, [r7, #8]
 2310 0a2a 0322     		movs	r2, #3
 2311 0a2c 1A70     		strb	r2, [r3]
 692:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list to be relocated
 693:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2312              		.loc 1 693 0
 2313 0a2e 0023     		movs	r3, #0
 2314 0a30 FB75     		strb	r3, [r7, #23]
 694:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(i<*numCells){
 2315              		.loc 1 694 0
 2316 0a32 2EE0     		b	.L124
 2317              	.L125:
 695:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2318              		.loc 1 695 0
 2319 0a34 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2320 0a38 424A     		ldr	r2, .L128
 2321 0a3a 1344     		add	r3, r3, r2
 2322 0a3c 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2323 0a3e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2324 0a40 1346     		mov	r3, r2
 2325 0a42 9B00     		lsls	r3, r3, #2
 2326 0a44 1344     		add	r3, r3, r2
 2327 0a46 7A6A     		ldr	r2, [r7, #36]
 2328 0a48 1344     		add	r3, r3, r2
 2329 0a4a 8AB2     		uxth	r2, r1
 2330 0a4c A3F80120 		strh	r2, [r3, #1]	@ unaligned
 696:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].channeloffset  = openserial_vars.inputBuf[ptr+*numCells];
 2331              		.loc 1 696 0
 2332 0a50 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2333 0a54 3A68     		ldr	r2, [r7]
 2334 0a56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2335 0a58 1344     		add	r3, r3, r2
 2336 0a5a 3A4A     		ldr	r2, .L128
 2337 0a5c 1344     		add	r3, r3, r2
 2338 0a5e 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2339 0a60 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2340 0a62 1346     		mov	r3, r2
 2341 0a64 9B00     		lsls	r3, r3, #2
 2342 0a66 1344     		add	r3, r3, r2
 2343 0a68 7A6A     		ldr	r2, [r7, #36]
 2344 0a6a 1344     		add	r3, r3, r2
 2345 0a6c 8AB2     		uxth	r2, r1
 2346 0a6e A3F80320 		strh	r2, [r3, #3]	@ unaligned
 697:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].isUsed         = TRUE;
 2347              		.loc 1 697 0
 2348 0a72 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2349 0a74 1346     		mov	r3, r2
 2350 0a76 9B00     		lsls	r3, r3, #2
 2351 0a78 1344     		add	r3, r3, r2
 2352 0a7a 7A6A     		ldr	r2, [r7, #36]
 2353 0a7c 1344     		add	r3, r3, r2
 2354 0a7e 0122     		movs	r2, #1
 2355 0a80 1A70     		strb	r2, [r3]
 698:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2356              		.loc 1 698 0
 2357 0a82 97F83030 		ldrb	r3, [r7, #48]
 2358 0a86 0133     		adds	r3, r3, #1
 2359 0a88 87F83030 		strb	r3, [r7, #48]
 699:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2360              		.loc 1 699 0
 2361 0a8c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2362 0a8e 0133     		adds	r3, r3, #1
 2363 0a90 FB75     		strb	r3, [r7, #23]
 2364              	.L124:
 694:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_delete[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2365              		.loc 1 694 0
 2366 0a92 3B68     		ldr	r3, [r7]
 2367 0a94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2368 0a96 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2369 0a98 9A42     		cmp	r2, r3
 2370 0a9a CBD3     		bcc	.L125
 700:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 701:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 702:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         commandLen      -= (*numCells) * 2;
 2371              		.loc 1 702 0
 2372 0a9c 3B68     		ldr	r3, [r7]
 2373 0a9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2374 0aa0 5B00     		lsls	r3, r3, #1
 2375 0aa2 DBB2     		uxtb	r3, r3
 2376 0aa4 97F83420 		ldrb	r2, [r7, #52]
 2377 0aa8 D31A     		subs	r3, r2, r3
 2378 0aaa 87F83430 		strb	r3, [r7, #52]
 703:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ptr             += *numCells;
 2379              		.loc 1 703 0
 2380 0aae 3B68     		ldr	r3, [r7]
 2381 0ab0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2382 0ab2 97F83030 		ldrb	r3, [r7, #48]
 2383 0ab6 1344     		add	r3, r3, r2
 2384 0ab8 87F83030 		strb	r3, [r7, #48]
 704:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // retrieve cell list to be relocated
 705:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         i = 0;
 2385              		.loc 1 705 0
 2386 0abc 0023     		movs	r3, #0
 2387 0abe FB75     		strb	r3, [r7, #23]
 706:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         celllistLen = commandLen/2;
 2388              		.loc 1 706 0
 2389 0ac0 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2390 0ac4 5B08     		lsrs	r3, r3, #1
 2391 0ac6 BB75     		strb	r3, [r7, #22]
 707:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         while(commandLen>celllistLen){
 2392              		.loc 1 707 0
 2393 0ac8 32E0     		b	.L126
 2394              	.L127:
 708:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2395              		.loc 1 708 0
 2396 0aca 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2397 0ace 1D4A     		ldr	r2, .L128
 2398 0ad0 1344     		add	r3, r3, r2
 2399 0ad2 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2400 0ad4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2401 0ad6 1346     		mov	r3, r2
 2402 0ad8 9B00     		lsls	r3, r3, #2
 2403 0ada 1344     		add	r3, r3, r2
 2404 0adc 3A6A     		ldr	r2, [r7, #32]
 2405 0ade 1344     		add	r3, r3, r2
 2406 0ae0 8AB2     		uxth	r2, r1
 2407 0ae2 A3F80120 		strh	r2, [r3, #1]	@ unaligned
 709:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].channeloffset  = openserial_vars.inputBuf[ptr+celllistLen];
 2408              		.loc 1 709 0
 2409 0ae6 97F83020 		ldrb	r2, [r7, #48]	@ zero_extendqisi2
 2410 0aea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2411 0aec 1344     		add	r3, r3, r2
 2412 0aee 154A     		ldr	r2, .L128
 2413 0af0 1344     		add	r3, r3, r2
 2414 0af2 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2415 0af4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2416 0af6 1346     		mov	r3, r2
 2417 0af8 9B00     		lsls	r3, r3, #2
 2418 0afa 1344     		add	r3, r3, r2
 2419 0afc 3A6A     		ldr	r2, [r7, #32]
 2420 0afe 1344     		add	r3, r3, r2
 2421 0b00 8AB2     		uxth	r2, r1
 2422 0b02 A3F80320 		strh	r2, [r3, #3]	@ unaligned
 710:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].isUsed         = TRUE;
 2423              		.loc 1 710 0
 2424 0b06 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2425 0b08 1346     		mov	r3, r2
 2426 0b0a 9B00     		lsls	r3, r3, #2
 2427 0b0c 1344     		add	r3, r3, r2
 2428 0b0e 3A6A     		ldr	r2, [r7, #32]
 2429 0b10 1344     		add	r3, r3, r2
 2430 0b12 0122     		movs	r2, #1
 2431 0b14 1A70     		strb	r2, [r3]
 711:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ptr         += 1;
 2432              		.loc 1 711 0
 2433 0b16 97F83030 		ldrb	r3, [r7, #48]
 2434 0b1a 0133     		adds	r3, r3, #1
 2435 0b1c 87F83030 		strb	r3, [r7, #48]
 712:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             commandLen  -= 1;
 2436              		.loc 1 712 0
 2437 0b20 97F83430 		ldrb	r3, [r7, #52]
 2438 0b24 013B     		subs	r3, r3, #1
 2439 0b26 87F83430 		strb	r3, [r7, #52]
 713:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             i++;
 2440              		.loc 1 713 0
 2441 0b2a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2442 0b2c 0133     		adds	r3, r3, #1
 2443 0b2e FB75     		strb	r3, [r7, #23]
 2444              	.L126:
 707:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             celllist_add[i].slotoffset     = openserial_vars.inputBuf[ptr];
 2445              		.loc 1 707 0
 2446 0b30 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 2447 0b34 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2448 0b36 9A42     		cmp	r2, r3
 2449 0b38 C7D8     		bhi	.L127
 714:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 715:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         return;
 2450              		.loc 1 715 0 discriminator 3
 2451 0b3a 00BF     		nop
 2452              	.L113:
 716:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 717:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2453              		.loc 1 717 0
 2454 0b3c 1C37     		adds	r7, r7, #28
 2455              		.cfi_def_cfa_offset 4
 2456 0b3e BD46     		mov	sp, r7
 2457              		.cfi_def_cfa_register 13
 2458              		@ sp needed
 2459 0b40 80BC     		pop	{r7}
 2460              		.cfi_restore 7
 2461              		.cfi_def_cfa_offset 0
 2462 0b42 7047     		bx	lr
 2463              	.L129:
 2464              		.align	2
 2465              	.L128:
 2466 0b44 00000000 		.word	openserial_vars
 2467              		.cfi_endproc
 2468              	.LFE23:
 2470              		.align	1
 2471              		.global	openserial_handleCommands
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2475              		.fpu softvfp
 2477              	openserial_handleCommands:
 2478              	.LFB24:
 718:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 719:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_handleCommands(void){
 2479              		.loc 1 719 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 112
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0b48 F0B5     		push	{r4, r5, r6, r7, lr}
 2484              		.cfi_def_cfa_offset 20
 2485              		.cfi_offset 4, -20
 2486              		.cfi_offset 5, -16
 2487              		.cfi_offset 6, -12
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0b4a A3B0     		sub	sp, sp, #140
 2491              		.cfi_def_cfa_offset 160
 2492 0b4c 06AF     		add	r7, sp, #24
 2493              		.cfi_def_cfa 7, 136
 720:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  input_buffer[20];
 721:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  numDataBytes;
 722:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  commandId;
 723:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  commandLen;
 724:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  comandParam_8;
 725:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint16_t comandParam_16;
 726:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 727:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  code,cellOptions,numCell,listOffset,maxListLen;
 728:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t  ptr;
 729:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     cellInfo_ht celllist_add[CELLLIST_MAX_LEN];
 730:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     cellInfo_ht celllist_delete[CELLLIST_MAX_LEN];
 731:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 732:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     open_addr_t neighbor;
 733:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     bool        foundNeighbor;
 734:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 735:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr = 0;
 2494              		.loc 1 735 0
 2495 0b4e 0023     		movs	r3, #0
 2496 0b50 87F86F30 		strb	r3, [r7, #111]
 736:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memset(celllist_add,0,CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 2497              		.loc 1 736 0
 2498 0b54 07F13003 		add	r3, r7, #48
 2499 0b58 1922     		movs	r2, #25
 2500 0b5a 0021     		movs	r1, #0
 2501 0b5c 1846     		mov	r0, r3
 2502 0b5e FFF7FEFF 		bl	memset
 737:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     memset(celllist_delete,0,CELLLIST_MAX_LEN*sizeof(cellInfo_ht));
 2503              		.loc 1 737 0
 2504 0b62 07F11403 		add	r3, r7, #20
 2505 0b66 1922     		movs	r2, #25
 2506 0b68 0021     		movs	r1, #0
 2507 0b6a 1846     		mov	r0, r3
 2508 0b6c FFF7FEFF 		bl	memset
 738:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 739:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    numDataBytes = openserial_getInputBufferFillLevel();
 2509              		.loc 1 739 0
 2510 0b70 FFF7FEFF 		bl	openserial_getInputBufferFillLevel
 2511 0b74 0346     		mov	r3, r0
 2512 0b76 87F86E30 		strb	r3, [r7, #110]
 740:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    //copying the buffer
 741:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_getInputBuffer(&(input_buffer[ptr]),numDataBytes);
 2513              		.loc 1 741 0
 2514 0b7a 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2515 0b7e 07F15002 		add	r2, r7, #80
 2516 0b82 1344     		add	r3, r3, r2
 2517 0b84 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 2518 0b88 1146     		mov	r1, r2
 2519 0b8a 1846     		mov	r0, r3
 2520 0b8c FFF7FEFF 		bl	openserial_getInputBuffer
 742:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr++;
 2521              		.loc 1 742 0
 2522 0b90 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2523 0b94 0133     		adds	r3, r3, #1
 2524 0b96 87F86F30 		strb	r3, [r7, #111]
 743:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandId  = openserial_vars.inputBuf[ptr];
 2525              		.loc 1 743 0
 2526 0b9a 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2527 0b9e CE4A     		ldr	r2, .L162
 2528 0ba0 1344     		add	r3, r3, r2
 2529 0ba2 9B7A     		ldrb	r3, [r3, #10]
 2530 0ba4 87F86D30 		strb	r3, [r7, #109]
 744:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr++;
 2531              		.loc 1 744 0
 2532 0ba8 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2533 0bac 0133     		adds	r3, r3, #1
 2534 0bae 87F86F30 		strb	r3, [r7, #111]
 745:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     commandLen = openserial_vars.inputBuf[ptr];
 2535              		.loc 1 745 0
 2536 0bb2 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2537 0bb6 C84A     		ldr	r2, .L162
 2538 0bb8 1344     		add	r3, r3, r2
 2539 0bba 9B7A     		ldrb	r3, [r3, #10]
 2540 0bbc 87F86C30 		strb	r3, [r7, #108]
 746:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ptr++;
 2541              		.loc 1 746 0
 2542 0bc0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2543 0bc4 0133     		adds	r3, r3, #1
 2544 0bc6 87F86F30 		strb	r3, [r7, #111]
 747:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 748:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     switch(commandId) {
 2545              		.loc 1 748 0
 2546 0bca 97F86D30 		ldrb	r3, [r7, #109]	@ zero_extendqisi2
 2547 0bce 132B     		cmp	r3, #19
 2548 0bd0 00F29281 		bhi	.L157
 2549 0bd4 01A2     		adr	r2, .L133
 2550 0bd6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2551 0bda 00BF     		.p2align 2
 2552              	.L133:
 2553 0bdc 2D0C0000 		.word	.L132+1
 2554 0be0 470C0000 		.word	.L134+1
 2555 0be4 610C0000 		.word	.L135+1
 2556 0be8 910C0000 		.word	.L136+1
 2557 0bec C10C0000 		.word	.L137+1
 2558 0bf0 F10C0000 		.word	.L138+1
 2559 0bf4 210D0000 		.word	.L139+1
 2560 0bf8 450D0000 		.word	.L140+1
 2561 0bfc 750D0000 		.word	.L141+1
 2562 0c00 990D0000 		.word	.L142+1
 2563 0c04 990D0000 		.word	.L142+1
 2564 0c08 990D0000 		.word	.L142+1
 2565 0c0c 990D0000 		.word	.L142+1
 2566 0c10 990D0000 		.word	.L142+1
 2567 0c14 990D0000 		.word	.L142+1
 2568 0c18 310E0000 		.word	.L143+1
 2569 0c1c 610E0000 		.word	.L144+1
 2570 0c20 8F0E0000 		.word	.L145+1
 2571 0c24 A90E0000 		.word	.L146+1
 2572 0c28 DD0E0000 		.word	.L147+1
 2573              		.p2align 1
 2574              	.L132:
 749:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_EBPERIOD:
 750:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2575              		.loc 1 750 0
 2576 0c2c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2577 0c30 A94A     		ldr	r2, .L162
 2578 0c32 1344     		add	r3, r3, r2
 2579 0c34 9B7A     		ldrb	r3, [r3, #10]
 2580 0c36 87F86B30 		strb	r3, [r7, #107]
 751:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             sixtop_setEBPeriod(comandParam_8); // one byte, in seconds
 2581              		.loc 1 751 0
 2582 0c3a 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2583 0c3e 1846     		mov	r0, r3
 2584 0c40 FFF7FEFF 		bl	sixtop_setEBPeriod
 752:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2585              		.loc 1 752 0
 2586 0c44 61E1     		b	.L148
 2587              	.L134:
 753:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_CHANNEL:
 754:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2588              		.loc 1 754 0
 2589 0c46 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2590 0c4a A34A     		ldr	r2, .L162
 2591 0c4c 1344     		add	r3, r3, r2
 2592 0c4e 9B7A     		ldrb	r3, [r3, #10]
 2593 0c50 87F86B30 		strb	r3, [r7, #107]
 755:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // set communication channel for protocol stack
 756:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setSingleChannel(comandParam_8); // one byte
 2594              		.loc 1 756 0
 2595 0c54 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2596 0c58 1846     		mov	r0, r3
 2597 0c5a FFF7FEFF 		bl	ieee154e_setSingleChannel
 757:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2598              		.loc 1 757 0
 2599 0c5e 54E1     		b	.L148
 2600              	.L135:
 758:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_KAPERIOD: // two bytes, in slots
 759:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2601              		.loc 1 759 0
 2602 0c60 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2603 0c64 9C4A     		ldr	r2, .L162
 2604 0c66 1344     		add	r3, r3, r2
 2605 0c68 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2606 0c6a 1AB2     		sxth	r2, r3
 760:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2607              		.loc 1 760 0
 2608 0c6c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2609 0c70 0133     		adds	r3, r3, #1
 2610 0c72 9949     		ldr	r1, .L162
 2611 0c74 0B44     		add	r3, r3, r1
 2612 0c76 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2613 0c78 1B02     		lsls	r3, r3, #8
 759:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2614              		.loc 1 759 0
 2615 0c7a 1BB2     		sxth	r3, r3
 2616 0c7c 1343     		orrs	r3, r3, r2
 2617 0c7e 1BB2     		sxth	r3, r3
 2618 0c80 A7F86830 		strh	r3, [r7, #104]	@ movhi
 761:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             sixtop_setKaPeriod(comandParam_16);
 2619              		.loc 1 761 0
 2620 0c84 B7F86830 		ldrh	r3, [r7, #104]
 2621 0c88 1846     		mov	r0, r3
 2622 0c8a FFF7FEFF 		bl	sixtop_setKaPeriod
 762:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2623              		.loc 1 762 0
 2624 0c8e 3CE1     		b	.L148
 2625              	.L136:
 763:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_DIOPERIOD: // two bytes, in mili-seconds
 764:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2626              		.loc 1 764 0
 2627 0c90 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2628 0c94 904A     		ldr	r2, .L162
 2629 0c96 1344     		add	r3, r3, r2
 2630 0c98 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2631 0c9a 1AB2     		sxth	r2, r3
 765:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2632              		.loc 1 765 0
 2633 0c9c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2634 0ca0 0133     		adds	r3, r3, #1
 2635 0ca2 8D49     		ldr	r1, .L162
 2636 0ca4 0B44     		add	r3, r3, r1
 2637 0ca6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2638 0ca8 1B02     		lsls	r3, r3, #8
 764:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2639              		.loc 1 764 0
 2640 0caa 1BB2     		sxth	r3, r3
 2641 0cac 1343     		orrs	r3, r3, r2
 2642 0cae 1BB2     		sxth	r3, r3
 2643 0cb0 A7F86830 		strh	r3, [r7, #104]	@ movhi
 766:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             icmpv6rpl_setDIOPeriod(comandParam_16);
 2644              		.loc 1 766 0
 2645 0cb4 B7F86830 		ldrh	r3, [r7, #104]
 2646 0cb8 1846     		mov	r0, r3
 2647 0cba FFF7FEFF 		bl	icmpv6rpl_setDIOPeriod
 767:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2648              		.loc 1 767 0
 2649 0cbe 24E1     		b	.L148
 2650              	.L137:
 768:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_DAOPERIOD: // two bytes, in mili-seconds
 769:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2651              		.loc 1 769 0
 2652 0cc0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2653 0cc4 844A     		ldr	r2, .L162
 2654 0cc6 1344     		add	r3, r3, r2
 2655 0cc8 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2656 0cca 1AB2     		sxth	r2, r3
 770:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2657              		.loc 1 770 0
 2658 0ccc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2659 0cd0 0133     		adds	r3, r3, #1
 2660 0cd2 8149     		ldr	r1, .L162
 2661 0cd4 0B44     		add	r3, r3, r1
 2662 0cd6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2663 0cd8 1B02     		lsls	r3, r3, #8
 769:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2664              		.loc 1 769 0
 2665 0cda 1BB2     		sxth	r3, r3
 2666 0cdc 1343     		orrs	r3, r3, r2
 2667 0cde 1BB2     		sxth	r3, r3
 2668 0ce0 A7F86830 		strh	r3, [r7, #104]	@ movhi
 771:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             icmpv6rpl_setDAOPeriod(comandParam_16);
 2669              		.loc 1 771 0
 2670 0ce4 B7F86830 		ldrh	r3, [r7, #104]
 2671 0ce8 1846     		mov	r0, r3
 2672 0cea FFF7FEFF 		bl	icmpv6rpl_setDAOPeriod
 772:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2673              		.loc 1 772 0
 2674 0cee 0CE1     		b	.L148
 2675              	.L138:
 773:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_DAGRANK: // two bytes
 774:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2676              		.loc 1 774 0
 2677 0cf0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2678 0cf4 784A     		ldr	r2, .L162
 2679 0cf6 1344     		add	r3, r3, r2
 2680 0cf8 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2681 0cfa 1AB2     		sxth	r2, r3
 775:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2682              		.loc 1 775 0
 2683 0cfc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2684 0d00 0133     		adds	r3, r3, #1
 2685 0d02 7549     		ldr	r1, .L162
 2686 0d04 0B44     		add	r3, r3, r1
 2687 0d06 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2688 0d08 1B02     		lsls	r3, r3, #8
 774:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2689              		.loc 1 774 0
 2690 0d0a 1BB2     		sxth	r3, r3
 2691 0d0c 1343     		orrs	r3, r3, r2
 2692 0d0e 1BB2     		sxth	r3, r3
 2693 0d10 A7F86830 		strh	r3, [r7, #104]	@ movhi
 776:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             icmpv6rpl_setMyDAGrank(comandParam_16);
 2694              		.loc 1 776 0
 2695 0d14 B7F86830 		ldrh	r3, [r7, #104]
 2696 0d18 1846     		mov	r0, r3
 2697 0d1a FFF7FEFF 		bl	icmpv6rpl_setMyDAGrank
 777:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2698              		.loc 1 777 0
 2699 0d1e F4E0     		b	.L148
 2700              	.L139:
 778:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_SECURITY_STATUS: // one byte
 779:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2701              		.loc 1 779 0
 2702 0d20 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2703 0d24 6C4A     		ldr	r2, .L162
 2704 0d26 1344     		add	r3, r3, r2
 2705 0d28 9B7A     		ldrb	r3, [r3, #10]
 2706 0d2a 87F86B30 		strb	r3, [r7, #107]
 780:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setIsSecurityEnabled(comandParam_8);
 2707              		.loc 1 780 0
 2708 0d2e 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2709 0d32 002B     		cmp	r3, #0
 2710 0d34 14BF     		ite	ne
 2711 0d36 0123     		movne	r3, #1
 2712 0d38 0023     		moveq	r3, #0
 2713 0d3a DBB2     		uxtb	r3, r3
 2714 0d3c 1846     		mov	r0, r3
 2715 0d3e FFF7FEFF 		bl	ieee154e_setIsSecurityEnabled
 781:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                    break;
 2716              		.loc 1 781 0
 2717 0d42 E2E0     		b	.L148
 2718              	.L140:
 782:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_SLOTFRAMELENGTH: // two bytes
 783:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2719              		.loc 1 783 0
 2720 0d44 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2721 0d48 634A     		ldr	r2, .L162
 2722 0d4a 1344     		add	r3, r3, r2
 2723 0d4c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2724 0d4e 1AB2     		sxth	r2, r3
 784:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2725              		.loc 1 784 0
 2726 0d50 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2727 0d54 0133     		adds	r3, r3, #1
 2728 0d56 6049     		ldr	r1, .L162
 2729 0d58 0B44     		add	r3, r3, r1
 2730 0d5a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2731 0d5c 1B02     		lsls	r3, r3, #8
 783:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2732              		.loc 1 783 0
 2733 0d5e 1BB2     		sxth	r3, r3
 2734 0d60 1343     		orrs	r3, r3, r2
 2735 0d62 1BB2     		sxth	r3, r3
 2736 0d64 A7F86830 		strh	r3, [r7, #104]	@ movhi
 785:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             schedule_setFrameLength(comandParam_16);
 2737              		.loc 1 785 0
 2738 0d68 B7F86830 		ldrh	r3, [r7, #104]
 2739 0d6c 1846     		mov	r0, r3
 2740 0d6e FFF7FEFF 		bl	schedule_setFrameLength
 786:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2741              		.loc 1 786 0
 2742 0d72 CAE0     		b	.L148
 2743              	.L141:
 787:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_ACK_STATUS:
 788:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2744              		.loc 1 788 0
 2745 0d74 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2746 0d78 574A     		ldr	r2, .L162
 2747 0d7a 1344     		add	r3, r3, r2
 2748 0d7c 9B7A     		ldrb	r3, [r3, #10]
 2749 0d7e 87F86B30 		strb	r3, [r7, #107]
 789:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setIsAckEnabled(comandParam_8);
 2750              		.loc 1 789 0
 2751 0d82 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2752 0d86 002B     		cmp	r3, #0
 2753 0d88 14BF     		ite	ne
 2754 0d8a 0123     		movne	r3, #1
 2755 0d8c 0023     		moveq	r3, #0
 2756 0d8e DBB2     		uxtb	r3, r3
 2757 0d90 1846     		mov	r0, r3
 2758 0d92 FFF7FEFF 		bl	ieee154e_setIsAckEnabled
 790:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                    break;
 2759              		.loc 1 790 0
 2760 0d96 B8E0     		b	.L148
 2761              	.L142:
 791:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_ADD:
 792:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_DELETE:
 793:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_RELOCATE:
 794:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_COUNT:
 795:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_LIST:
 796:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6P_CLEAR:
 797:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // get preferred parent
 798:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             foundNeighbor =icmpv6rpl_getPreferredParentEui64(&neighbor);
 2762              		.loc 1 798 0
 2763 0d98 3B46     		mov	r3, r7
 2764 0d9a 1846     		mov	r0, r3
 2765 0d9c FFF7FEFF 		bl	icmpv6rpl_getPreferredParentEui64
 2766 0da0 0346     		mov	r3, r0
 2767 0da2 87F86730 		strb	r3, [r7, #103]
 799:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (foundNeighbor==FALSE) {
 2768              		.loc 1 799 0
 2769 0da6 97F86730 		ldrb	r3, [r7, #103]
 2770 0daa 83F00103 		eor	r3, r3, #1
 2771 0dae DBB2     		uxtb	r3, r3
 2772 0db0 002B     		cmp	r3, #0
 2773 0db2 40F0A380 		bne	.L158
 800:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 break;
 801:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 802:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // the following sequence of bytes are, slotframe, cellOption, numCell, celllist
 803:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_get6pInfo(commandId,&code,&cellOptions,&numCell,celllist_add,celllist_delete
 2774              		.loc 1 803 0
 2775 0db6 07F14D04 		add	r4, r7, #77
 2776 0dba 07F14E02 		add	r2, r7, #78
 2777 0dbe 07F14F01 		add	r1, r7, #79
 2778 0dc2 97F86D00 		ldrb	r0, [r7, #109]	@ zero_extendqisi2
 2779 0dc6 97F86C30 		ldrb	r3, [r7, #108]	@ zero_extendqisi2
 2780 0dca 0593     		str	r3, [sp, #20]
 2781 0dcc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2782 0dd0 0493     		str	r3, [sp, #16]
 2783 0dd2 07F14B03 		add	r3, r7, #75
 2784 0dd6 0393     		str	r3, [sp, #12]
 2785 0dd8 07F14C03 		add	r3, r7, #76
 2786 0ddc 0293     		str	r3, [sp, #8]
 2787 0dde 07F11403 		add	r3, r7, #20
 2788 0de2 0193     		str	r3, [sp, #4]
 2789 0de4 07F13003 		add	r3, r7, #48
 2790 0de8 0093     		str	r3, [sp]
 2791 0dea 2346     		mov	r3, r4
 2792 0dec FFF7FEFF 		bl	openserial_get6pInfo
 804:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             sixtop_request(
 2793              		.loc 1 804 0
 2794 0df0 97F84F40 		ldrb	r4, [r7, #79]	@ zero_extendqisi2
 2795 0df4 97F84D50 		ldrb	r5, [r7, #77]	@ zero_extendqisi2
 2796 0df8 97F84E60 		ldrb	r6, [r7, #78]	@ zero_extendqisi2
 2797 0dfc FFF7FEFF 		bl	msf_getsfid
 2798 0e00 0346     		mov	r3, r0
 2799 0e02 1846     		mov	r0, r3
 2800 0e04 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 2801 0e08 9BB2     		uxth	r3, r3
 2802 0e0a 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2803 0e0e 92B2     		uxth	r2, r2
 2804 0e10 3946     		mov	r1, r7
 2805 0e12 0492     		str	r2, [sp, #16]
 2806 0e14 0393     		str	r3, [sp, #12]
 2807 0e16 0290     		str	r0, [sp, #8]
 2808 0e18 07F11403 		add	r3, r7, #20
 2809 0e1c 0193     		str	r3, [sp, #4]
 2810 0e1e 07F13003 		add	r3, r7, #48
 2811 0e22 0093     		str	r3, [sp]
 2812 0e24 3346     		mov	r3, r6
 2813 0e26 2A46     		mov	r2, r5
 2814 0e28 2046     		mov	r0, r4
 2815 0e2a FFF7FEFF 		bl	sixtop_request
 805:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 code,              // code
 806:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 &neighbor,         // neighbor
 807:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 numCell,           // number cells
 808:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 cellOptions,       // cellOptions
 809:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 celllist_add,      // celllist to add
 810:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 celllist_delete,   // celllist to delete (not used)
 811:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 msf_getsfid(),     // sfid
 812:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 listOffset,        // list command offset (not used)
 813:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 maxListLen         // list command maximum celllist (not used)
 814:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             );
 815:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2816              		.loc 1 815 0
 2817 0e2e 6CE0     		b	.L148
 2818              	.L143:
 816:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_SLOTDURATION:
 817:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_16 = (openserial_vars.inputBuf[ptr] & 0x00ff) | \
 2819              		.loc 1 817 0
 2820 0e30 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2821 0e34 284A     		ldr	r2, .L162
 2822 0e36 1344     		add	r3, r3, r2
 2823 0e38 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2824 0e3a 1AB2     		sxth	r2, r3
 818:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2825              		.loc 1 818 0
 2826 0e3c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2827 0e40 0133     		adds	r3, r3, #1
 2828 0e42 2549     		ldr	r1, .L162
 2829 0e44 0B44     		add	r3, r3, r1
 2830 0e46 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2831 0e48 1B02     		lsls	r3, r3, #8
 817:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 ((openserial_vars.inputBuf[ptr+1]<<8) & 0xff00);
 2832              		.loc 1 817 0
 2833 0e4a 1BB2     		sxth	r3, r3
 2834 0e4c 1343     		orrs	r3, r3, r2
 2835 0e4e 1BB2     		sxth	r3, r3
 2836 0e50 A7F86830 		strh	r3, [r7, #104]	@ movhi
 819:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             ieee154e_setSlotDuration(comandParam_16);
 2837              		.loc 1 819 0
 2838 0e54 B7F86830 		ldrh	r3, [r7, #104]
 2839 0e58 1846     		mov	r0, r3
 2840 0e5a FFF7FEFF 		bl	ieee154e_setSlotDuration
 820:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2841              		.loc 1 820 0
 2842 0e5e 54E0     		b	.L148
 2843              	.L144:
 821:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_6PRESPONSE:
 822:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2844              		.loc 1 822 0
 2845 0e60 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2846 0e64 1C4A     		ldr	r2, .L162
 2847 0e66 1344     		add	r3, r3, r2
 2848 0e68 9B7A     		ldrb	r3, [r3, #10]
 2849 0e6a 87F86B30 		strb	r3, [r7, #107]
 823:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (comandParam_8 ==1) {
 2850              		.loc 1 823 0
 2851 0e6e 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2852 0e72 012B     		cmp	r3, #1
 2853 0e74 03D1     		bne	.L150
 824:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                sixtop_setIsResponseEnabled(TRUE);
 2854              		.loc 1 824 0
 2855 0e76 0120     		movs	r0, #1
 2856 0e78 FFF7FEFF 		bl	sixtop_setIsResponseEnabled
 825:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 826:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 if (comandParam_8 == 0) {
 827:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     sixtop_setIsResponseEnabled(FALSE);
 828:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 829:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     // security only can be 1 or 0
 830:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     break;
 831:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 832:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 833:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2857              		.loc 1 833 0
 2858 0e7c 45E0     		b	.L148
 2859              	.L150:
 826:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     sixtop_setIsResponseEnabled(FALSE);
 2860              		.loc 1 826 0
 2861 0e7e 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2862 0e82 002B     		cmp	r3, #0
 2863 0e84 3CD1     		bne	.L159
 827:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 2864              		.loc 1 827 0
 2865 0e86 0020     		movs	r0, #0
 2866 0e88 FFF7FEFF 		bl	sixtop_setIsResponseEnabled
 2867              		.loc 1 833 0
 2868 0e8c 3DE0     		b	.L148
 2869              	.L145:
 834:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_UINJECTPERIOD:
 835:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2870              		.loc 1 835 0
 2871 0e8e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2872 0e92 114A     		ldr	r2, .L162
 2873 0e94 1344     		add	r3, r3, r2
 2874 0e96 9B7A     		ldrb	r3, [r3, #10]
 2875 0e98 87F86B30 		strb	r3, [r7, #107]
 836:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             msf_appPktPeriod(comandParam_8);
 2876              		.loc 1 836 0
 2877 0e9c 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2878 0ea0 1846     		mov	r0, r3
 2879 0ea2 FFF7FEFF 		bl	msf_appPktPeriod
 837:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2880              		.loc 1 837 0
 2881 0ea6 30E0     		b	.L148
 2882              	.L146:
 838:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_ECHO_REPLY_STATUS:
 839:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             comandParam_8 = openserial_vars.inputBuf[ptr];
 2883              		.loc 1 839 0
 2884 0ea8 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2885 0eac 0A4A     		ldr	r2, .L162
 2886 0eae 1344     		add	r3, r3, r2
 2887 0eb0 9B7A     		ldrb	r3, [r3, #10]
 2888 0eb2 87F86B30 		strb	r3, [r7, #107]
 840:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (comandParam_8 == 1) {
 2889              		.loc 1 840 0
 2890 0eb6 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2891 0eba 012B     		cmp	r3, #1
 2892 0ebc 03D1     		bne	.L153
 841:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 icmpv6echo_setIsReplyEnabled(TRUE);
 2893              		.loc 1 841 0
 2894 0ebe 0120     		movs	r0, #1
 2895 0ec0 FFF7FEFF 		bl	icmpv6echo_setIsReplyEnabled
 842:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             } else {
 843:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 if (comandParam_8 == 0) {
 844:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     icmpv6echo_setIsReplyEnabled(FALSE);
 845:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 846:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     // ack reply
 847:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     break;
 848:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 849:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 850:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2896              		.loc 1 850 0
 2897 0ec4 21E0     		b	.L148
 2898              	.L153:
 843:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                     icmpv6echo_setIsReplyEnabled(FALSE);
 2899              		.loc 1 843 0
 2900 0ec6 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 2901 0eca 002B     		cmp	r3, #0
 2902 0ecc 1AD1     		bne	.L160
 844:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 } else {
 2903              		.loc 1 844 0
 2904 0ece 0020     		movs	r0, #0
 2905 0ed0 FFF7FEFF 		bl	icmpv6echo_setIsReplyEnabled
 2906              		.loc 1 850 0
 2907 0ed4 19E0     		b	.L148
 2908              	.L163:
 2909 0ed6 00BF     		.align	2
 2910              	.L162:
 2911 0ed8 00000000 		.word	openserial_vars
 2912              	.L147:
 851:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         case COMMAND_SET_JOIN_KEY:
 852:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             if (commandLen != 16) { break; }
 2913              		.loc 1 852 0
 2914 0edc 97F86C30 		ldrb	r3, [r7, #108]	@ zero_extendqisi2
 2915 0ee0 102B     		cmp	r3, #16
 2916 0ee2 11D1     		bne	.L161
 853:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             idmanager_setJoinKey(&openserial_vars.inputBuf[ptr]);
 2917              		.loc 1 853 0
 2918 0ee4 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2919 0ee8 0833     		adds	r3, r3, #8
 2920 0eea 0A4A     		ldr	r2, .L164
 2921 0eec 1344     		add	r3, r3, r2
 2922 0eee 0233     		adds	r3, r3, #2
 2923 0ef0 1846     		mov	r0, r3
 2924 0ef2 FFF7FEFF 		bl	idmanager_setJoinKey
 854:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2925              		.loc 1 854 0
 2926 0ef6 08E0     		b	.L148
 2927              	.L157:
 855:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         default:
 856:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // wrong command ID
 857:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             break;
 2928              		.loc 1 857 0
 2929 0ef8 00BF     		nop
 2930 0efa 06E0     		b	.L148
 2931              	.L158:
 800:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             }
 2932              		.loc 1 800 0
 2933 0efc 00BF     		nop
 2934 0efe 04E0     		b	.L148
 2935              	.L159:
 830:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 2936              		.loc 1 830 0
 2937 0f00 00BF     		nop
 2938 0f02 02E0     		b	.L148
 2939              	.L160:
 847:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****                 }
 2940              		.loc 1 847 0
 2941 0f04 00BF     		nop
 2942 0f06 00E0     		b	.L148
 2943              	.L161:
 852:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             idmanager_setJoinKey(&openserial_vars.inputBuf[ptr]);
 2944              		.loc 1 852 0
 2945 0f08 00BF     		nop
 2946              	.L148:
 858:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****    }
 859:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2947              		.loc 1 859 0 discriminator 1
 2948 0f0a 00BF     		nop
 2949 0f0c 7437     		adds	r7, r7, #116
 2950              		.cfi_def_cfa_offset 20
 2951 0f0e BD46     		mov	sp, r7
 2952              		.cfi_def_cfa_register 13
 2953              		@ sp needed
 2954 0f10 F0BD     		pop	{r4, r5, r6, r7, pc}
 2955              	.L165:
 2956 0f12 00BF     		.align	2
 2957              	.L164:
 2958 0f14 00000000 		.word	openserial_vars
 2959              		.cfi_endproc
 2960              	.LFE24:
 2962              		.align	1
 2963              		.global	openserial_debugPrint_timer_cb
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2967              		.fpu softvfp
 2969              	openserial_debugPrint_timer_cb:
 2970              	.LFB25:
 860:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 861:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== misc
 862:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 863:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_debugPrint_timer_cb(opentimers_id_t id){
 2971              		.loc 1 863 0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 8
 2974              		@ frame_needed = 1, uses_anonymous_args = 0
 2975 0f18 80B5     		push	{r7, lr}
 2976              		.cfi_def_cfa_offset 8
 2977              		.cfi_offset 7, -8
 2978              		.cfi_offset 14, -4
 2979 0f1a 82B0     		sub	sp, sp, #8
 2980              		.cfi_def_cfa_offset 16
 2981 0f1c 00AF     		add	r7, sp, #0
 2982              		.cfi_def_cfa_register 7
 2983 0f1e 0346     		mov	r3, r0
 2984 0f20 FB71     		strb	r3, [r7, #7]
 864:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // calling the task directly as the timer_cb function is executed in
 865:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // task mode by opentimer already
 866:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     task_openserial_debugPrint();
 2985              		.loc 1 866 0
 2986 0f22 FFF7FEFF 		bl	task_openserial_debugPrint
 867:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 2987              		.loc 1 867 0
 2988 0f26 00BF     		nop
 2989 0f28 0837     		adds	r7, r7, #8
 2990              		.cfi_def_cfa_offset 8
 2991 0f2a BD46     		mov	sp, r7
 2992              		.cfi_def_cfa_register 13
 2993              		@ sp needed
 2994 0f2c 80BD     		pop	{r7, pc}
 2995              		.cfi_endproc
 2996              	.LFE25:
 2998              		.align	1
 2999              		.global	openserial_board_reset_cb
 3000              		.syntax unified
 3001              		.thumb
 3002              		.thumb_func
 3003              		.fpu softvfp
 3005              	openserial_board_reset_cb:
 3006              	.LFB26:
 868:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 869:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void openserial_board_reset_cb(opentimers_id_t id) {
 3007              		.loc 1 869 0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 8
 3010              		@ frame_needed = 1, uses_anonymous_args = 0
 3011 0f2e 80B5     		push	{r7, lr}
 3012              		.cfi_def_cfa_offset 8
 3013              		.cfi_offset 7, -8
 3014              		.cfi_offset 14, -4
 3015 0f30 82B0     		sub	sp, sp, #8
 3016              		.cfi_def_cfa_offset 16
 3017 0f32 00AF     		add	r7, sp, #0
 3018              		.cfi_def_cfa_register 7
 3019 0f34 0346     		mov	r3, r0
 3020 0f36 FB71     		strb	r3, [r7, #7]
 870:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     (void)id;
 871:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     board_reset();
 3021              		.loc 1 871 0
 3022 0f38 FFF7FEFF 		bl	board_reset
 872:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3023              		.loc 1 872 0
 3024 0f3c 00BF     		nop
 3025 0f3e 0837     		adds	r7, r7, #8
 3026              		.cfi_def_cfa_offset 8
 3027 0f40 BD46     		mov	sp, r7
 3028              		.cfi_def_cfa_register 13
 3029              		@ sp needed
 3030 0f42 80BD     		pop	{r7, pc}
 3031              		.cfi_endproc
 3032              	.LFE26:
 3034              		.align	1
 3035              		.global	outputHdlcOpen
 3036              		.syntax unified
 3037              		.thumb
 3038              		.thumb_func
 3039              		.fpu softvfp
 3041              	outputHdlcOpen:
 3042              	.LFB27:
 873:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 874:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== hdlc (output)
 875:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 876:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 877:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Start an HDLC frame in the output buffer.
 878:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 879:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void outputHdlcOpen(void) {
 3043              		.loc 1 879 0
 3044              		.cfi_startproc
 3045              		@ args = 0, pretend = 0, frame = 0
 3046              		@ frame_needed = 1, uses_anonymous_args = 0
 3047 0f44 80B5     		push	{r7, lr}
 3048              		.cfi_def_cfa_offset 8
 3049              		.cfi_offset 7, -8
 3050              		.cfi_offset 14, -4
 3051 0f46 00AF     		add	r7, sp, #0
 3052              		.cfi_def_cfa_register 7
 880:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 881:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 882:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 883:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 3053              		.loc 1 883 0
 3054 0f48 FFF7FEFF 		bl	IntMasterDisable
 884:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 885:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // initialize the value of the CRC
 886:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 887:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcOutputCrc                                    = HDLC_CRCINIT;
 3055              		.loc 1 887 0
 3056 0f4c 0B4B     		ldr	r3, .L169
 3057 0f4e 4FF6FF72 		movw	r2, #65535
 3058 0f52 A3F8E024 		strh	r2, [r3, #1248]	@ movhi
 888:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 889:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // write the opening HDLC flag
 890:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]       = HDLC_
 3059              		.loc 1 890 0
 3060 0f56 094B     		ldr	r3, .L169
 3061 0f58 B3F8DA34 		ldrh	r3, [r3, #1242]
 3062 0f5c 5A1C     		adds	r2, r3, #1
 3063 0f5e 91B2     		uxth	r1, r2
 3064 0f60 064A     		ldr	r2, .L169
 3065 0f62 A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3066 0f66 C3F30903 		ubfx	r3, r3, #0, #10
 3067 0f6a 044A     		ldr	r2, .L169
 3068 0f6c 1344     		add	r3, r3, r2
 3069 0f6e 7E22     		movs	r2, #126
 3070 0f70 83F8D920 		strb	r2, [r3, #217]
 891:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 892:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 3071              		.loc 1 892 0
 3072 0f74 FFF7FEFF 		bl	IntMasterEnable
 893:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 894:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3073              		.loc 1 894 0
 3074 0f78 00BF     		nop
 3075 0f7a 80BD     		pop	{r7, pc}
 3076              	.L170:
 3077              		.align	2
 3078              	.L169:
 3079 0f7c 00000000 		.word	openserial_vars
 3080              		.cfi_endproc
 3081              	.LFE27:
 3083              		.align	1
 3084              		.global	outputHdlcWrite
 3085              		.syntax unified
 3086              		.thumb
 3087              		.thumb_func
 3088              		.fpu softvfp
 3090              	outputHdlcWrite:
 3091              	.LFB28:
 895:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 896:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Add a byte to the outgoing HDLC frame being built.
 897:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 898:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void outputHdlcWrite(uint8_t b) {
 3092              		.loc 1 898 0
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 8
 3095              		@ frame_needed = 1, uses_anonymous_args = 0
 3096 0f80 80B5     		push	{r7, lr}
 3097              		.cfi_def_cfa_offset 8
 3098              		.cfi_offset 7, -8
 3099              		.cfi_offset 14, -4
 3100 0f82 82B0     		sub	sp, sp, #8
 3101              		.cfi_def_cfa_offset 16
 3102 0f84 00AF     		add	r7, sp, #0
 3103              		.cfi_def_cfa_register 7
 3104 0f86 0346     		mov	r3, r0
 3105 0f88 FB71     		strb	r3, [r7, #7]
 899:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 900:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 901:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 902:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 3106              		.loc 1 902 0
 3107 0f8a FFF7FEFF 		bl	IntMasterDisable
 903:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 904:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // iterate through CRC calculator
 905:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcOutputCrc = crcIteration(openserial_vars.hdlcOutputCrc,b);
 3108              		.loc 1 905 0
 3109 0f8e 1D4B     		ldr	r3, .L174
 3110 0f90 B3F8E034 		ldrh	r3, [r3, #1248]
 3111 0f94 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3112 0f96 1146     		mov	r1, r2
 3113 0f98 1846     		mov	r0, r3
 3114 0f9a FFF7FEFF 		bl	crcIteration
 3115 0f9e 0346     		mov	r3, r0
 3116 0fa0 1A46     		mov	r2, r3
 3117 0fa2 184B     		ldr	r3, .L174
 3118 0fa4 A3F8E024 		strh	r2, [r3, #1248]	@ movhi
 906:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 907:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // add byte to buffer
 908:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (b==HDLC_FLAG || b==HDLC_ESCAPE) {
 3119              		.loc 1 908 0
 3120 0fa8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3121 0faa 7E2B     		cmp	r3, #126
 3122 0fac 02D0     		beq	.L172
 3123              		.loc 1 908 0 is_stmt 0 discriminator 1
 3124 0fae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3125 0fb0 7D2B     		cmp	r3, #125
 3126 0fb2 12D1     		bne	.L173
 3127              	.L172:
 909:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]   = HDLC_
 3128              		.loc 1 909 0 is_stmt 1
 3129 0fb4 134B     		ldr	r3, .L174
 3130 0fb6 B3F8DA34 		ldrh	r3, [r3, #1242]
 3131 0fba 5A1C     		adds	r2, r3, #1
 3132 0fbc 91B2     		uxth	r1, r2
 3133 0fbe 114A     		ldr	r2, .L174
 3134 0fc0 A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3135 0fc4 C3F30903 		ubfx	r3, r3, #0, #10
 3136 0fc8 0E4A     		ldr	r2, .L174
 3137 0fca 1344     		add	r3, r3, r2
 3138 0fcc 7D22     		movs	r2, #125
 3139 0fce 83F8D920 		strb	r2, [r3, #217]
 910:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         b                                                            = b^HDLC_ESCAPE_MASK;
 3140              		.loc 1 910 0
 3141 0fd2 FB79     		ldrb	r3, [r7, #7]
 3142 0fd4 83F02003 		eor	r3, r3, #32
 3143 0fd8 FB71     		strb	r3, [r7, #7]
 3144              	.L173:
 911:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 912:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]       = b;
 3145              		.loc 1 912 0
 3146 0fda 0A4B     		ldr	r3, .L174
 3147 0fdc B3F8DA34 		ldrh	r3, [r3, #1242]
 3148 0fe0 5A1C     		adds	r2, r3, #1
 3149 0fe2 91B2     		uxth	r1, r2
 3150 0fe4 074A     		ldr	r2, .L174
 3151 0fe6 A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3152 0fea C3F30903 		ubfx	r3, r3, #0, #10
 3153 0fee 054A     		ldr	r2, .L174
 3154 0ff0 1344     		add	r3, r3, r2
 3155 0ff2 FA79     		ldrb	r2, [r7, #7]
 3156 0ff4 83F8D920 		strb	r2, [r3, #217]
 913:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 914:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 3157              		.loc 1 914 0
 3158 0ff8 FFF7FEFF 		bl	IntMasterEnable
 915:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 916:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3159              		.loc 1 916 0
 3160 0ffc 00BF     		nop
 3161 0ffe 0837     		adds	r7, r7, #8
 3162              		.cfi_def_cfa_offset 8
 3163 1000 BD46     		mov	sp, r7
 3164              		.cfi_def_cfa_register 13
 3165              		@ sp needed
 3166 1002 80BD     		pop	{r7, pc}
 3167              	.L175:
 3168              		.align	2
 3169              	.L174:
 3170 1004 00000000 		.word	openserial_vars
 3171              		.cfi_endproc
 3172              	.LFE28:
 3174              		.align	1
 3175              		.global	outputHdlcClose
 3176              		.syntax unified
 3177              		.thumb
 3178              		.thumb_func
 3179              		.fpu softvfp
 3181              	outputHdlcClose:
 3182              	.LFB29:
 917:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 918:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Finalize the outgoing HDLC frame.
 919:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 920:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void outputHdlcClose(void) {
 3183              		.loc 1 920 0
 3184              		.cfi_startproc
 3185              		@ args = 0, pretend = 0, frame = 8
 3186              		@ frame_needed = 1, uses_anonymous_args = 0
 3187 1008 80B5     		push	{r7, lr}
 3188              		.cfi_def_cfa_offset 8
 3189              		.cfi_offset 7, -8
 3190              		.cfi_offset 14, -4
 3191 100a 82B0     		sub	sp, sp, #8
 3192              		.cfi_def_cfa_offset 16
 3193 100c 00AF     		add	r7, sp, #0
 3194              		.cfi_def_cfa_register 7
 921:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint16_t   finalCrc;
 922:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     INTERRUPT_DECLARATION();
 923:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 924:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //<<<<<<<<<<<<<<<<<<<<<<<
 925:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     DISABLE_INTERRUPTS();
 3195              		.loc 1 925 0
 3196 100e FFF7FEFF 		bl	IntMasterDisable
 926:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 927:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // finalize the calculation of the CRC
 928:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     finalCrc   = ~openserial_vars.hdlcOutputCrc;
 3197              		.loc 1 928 0
 3198 1012 134B     		ldr	r3, .L177
 3199 1014 B3F8E034 		ldrh	r3, [r3, #1248]
 3200 1018 DB43     		mvns	r3, r3
 3201 101a FB80     		strh	r3, [r7, #6]	@ movhi
 929:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 930:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // write the CRC value
 931:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((finalCrc>>0)&0xff);
 3202              		.loc 1 931 0
 3203 101c FB88     		ldrh	r3, [r7, #6]	@ movhi
 3204 101e DBB2     		uxtb	r3, r3
 3205 1020 1846     		mov	r0, r3
 3206 1022 FFF7FEFF 		bl	outputHdlcWrite
 932:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     outputHdlcWrite((finalCrc>>8)&0xff);
 3207              		.loc 1 932 0
 3208 1026 FB88     		ldrh	r3, [r7, #6]
 3209 1028 1B0A     		lsrs	r3, r3, #8
 3210 102a 9BB2     		uxth	r3, r3
 3211 102c DBB2     		uxtb	r3, r3
 3212 102e 1846     		mov	r0, r3
 3213 1030 FFF7FEFF 		bl	outputHdlcWrite
 933:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 934:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // write the closing HDLC flag
 935:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBufIdxW++)]       = HDLC_
 3214              		.loc 1 935 0
 3215 1034 0A4B     		ldr	r3, .L177
 3216 1036 B3F8DA34 		ldrh	r3, [r3, #1242]
 3217 103a 5A1C     		adds	r2, r3, #1
 3218 103c 91B2     		uxth	r1, r2
 3219 103e 084A     		ldr	r2, .L177
 3220 1040 A2F8DA14 		strh	r1, [r2, #1242]	@ movhi
 3221 1044 C3F30903 		ubfx	r3, r3, #0, #10
 3222 1048 054A     		ldr	r2, .L177
 3223 104a 1344     		add	r3, r3, r2
 3224 104c 7E22     		movs	r2, #126
 3225 104e 83F8D920 		strb	r2, [r3, #217]
 936:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 937:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ENABLE_INTERRUPTS();
 3226              		.loc 1 937 0
 3227 1052 FFF7FEFF 		bl	IntMasterEnable
 938:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     //>>>>>>>>>>>>>>>>>>>>>>>
 939:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3228              		.loc 1 939 0
 3229 1056 00BF     		nop
 3230 1058 0837     		adds	r7, r7, #8
 3231              		.cfi_def_cfa_offset 8
 3232 105a BD46     		mov	sp, r7
 3233              		.cfi_def_cfa_register 13
 3234              		@ sp needed
 3235 105c 80BD     		pop	{r7, pc}
 3236              	.L178:
 3237 105e 00BF     		.align	2
 3238              	.L177:
 3239 1060 00000000 		.word	openserial_vars
 3240              		.cfi_endproc
 3241              	.LFE29:
 3243              		.align	1
 3244              		.global	inputHdlcOpen
 3245              		.syntax unified
 3246              		.thumb
 3247              		.thumb_func
 3248              		.fpu softvfp
 3250              	inputHdlcOpen:
 3251              	.LFB30:
 940:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 941:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //===== hdlc (input)
 942:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 943:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 944:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Start an HDLC frame in the input buffer.
 945:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 946:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void inputHdlcOpen(void) {
 3252              		.loc 1 946 0
 3253              		.cfi_startproc
 3254              		@ args = 0, pretend = 0, frame = 0
 3255              		@ frame_needed = 1, uses_anonymous_args = 0
 3256              		@ link register save eliminated.
 3257 1064 80B4     		push	{r7}
 3258              		.cfi_def_cfa_offset 4
 3259              		.cfi_offset 7, -4
 3260 1066 00AF     		add	r7, sp, #0
 3261              		.cfi_def_cfa_register 7
 947:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // reset the input buffer index
 948:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.inputBufFillLevel                                = 0;
 3262              		.loc 1 948 0
 3263 1068 064B     		ldr	r3, .L180
 3264 106a 0022     		movs	r2, #0
 3265 106c 83F8D220 		strb	r2, [r3, #210]
 949:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 950:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // initialize the value of the CRC
 951:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcInputCrc                                     = HDLC_CRCINIT;
 3266              		.loc 1 951 0
 3267 1070 044B     		ldr	r3, .L180
 3268 1072 4FF6FF72 		movw	r2, #65535
 3269 1076 A3F8D620 		strh	r2, [r3, #214]	@ movhi
 952:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3270              		.loc 1 952 0
 3271 107a 00BF     		nop
 3272 107c BD46     		mov	sp, r7
 3273              		.cfi_def_cfa_register 13
 3274              		@ sp needed
 3275 107e 80BC     		pop	{r7}
 3276              		.cfi_restore 7
 3277              		.cfi_def_cfa_offset 0
 3278 1080 7047     		bx	lr
 3279              	.L181:
 3280 1082 00BF     		.align	2
 3281              	.L180:
 3282 1084 00000000 		.word	openserial_vars
 3283              		.cfi_endproc
 3284              	.LFE30:
 3286              		.align	1
 3287              		.global	inputHdlcWrite
 3288              		.syntax unified
 3289              		.thumb
 3290              		.thumb_func
 3291              		.fpu softvfp
 3293              	inputHdlcWrite:
 3294              	.LFB31:
 953:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 954:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Add a byte to the incoming HDLC frame.
 955:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 956:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void inputHdlcWrite(uint8_t b) {
 3295              		.loc 1 956 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 8
 3298              		@ frame_needed = 1, uses_anonymous_args = 0
 3299 1088 80B5     		push	{r7, lr}
 3300              		.cfi_def_cfa_offset 8
 3301              		.cfi_offset 7, -8
 3302              		.cfi_offset 14, -4
 3303 108a 82B0     		sub	sp, sp, #8
 3304              		.cfi_def_cfa_offset 16
 3305 108c 00AF     		add	r7, sp, #0
 3306              		.cfi_def_cfa_register 7
 3307 108e 0346     		mov	r3, r0
 3308 1090 FB71     		strb	r3, [r7, #7]
 957:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (b==HDLC_ESCAPE) {
 3309              		.loc 1 957 0
 3310 1092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3311 1094 7D2B     		cmp	r3, #125
 3312 1096 04D1     		bne	.L183
 958:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcInputEscaping = TRUE;
 3313              		.loc 1 958 0
 3314 1098 194B     		ldr	r3, .L187
 3315 109a 0122     		movs	r2, #1
 3316 109c 83F8D820 		strb	r2, [r3, #216]
 959:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 960:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.hdlcInputEscaping==TRUE) {
 961:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             b                             = b^HDLC_ESCAPE_MASK;
 962:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.hdlcInputEscaping = FALSE;
 963:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 964:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 965:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // add byte to input buffer
 966:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBuf[openserial_vars.inputBufFillLevel] = b;
 967:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel++;
 968:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 969:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // iterate through CRC calculator
 970:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcInputCrc = crcIteration(openserial_vars.hdlcInputCrc,b);
 971:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 972:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3317              		.loc 1 972 0
 3318 10a0 29E0     		b	.L186
 3319              	.L183:
 960:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             b                             = b^HDLC_ESCAPE_MASK;
 3320              		.loc 1 960 0
 3321 10a2 174B     		ldr	r3, .L187
 3322 10a4 93F8D830 		ldrb	r3, [r3, #216]	@ zero_extendqisi2
 3323 10a8 002B     		cmp	r3, #0
 3324 10aa 07D0     		beq	.L185
 961:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.hdlcInputEscaping = FALSE;
 3325              		.loc 1 961 0
 3326 10ac FB79     		ldrb	r3, [r7, #7]
 3327 10ae 83F02003 		eor	r3, r3, #32
 3328 10b2 FB71     		strb	r3, [r7, #7]
 962:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 3329              		.loc 1 962 0
 3330 10b4 124B     		ldr	r3, .L187
 3331 10b6 0022     		movs	r2, #0
 3332 10b8 83F8D820 		strb	r2, [r3, #216]
 3333              	.L185:
 966:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel++;
 3334              		.loc 1 966 0
 3335 10bc 104B     		ldr	r3, .L187
 3336 10be 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3337 10c2 1A46     		mov	r2, r3
 3338 10c4 0E4B     		ldr	r3, .L187
 3339 10c6 1344     		add	r3, r3, r2
 3340 10c8 FA79     		ldrb	r2, [r7, #7]
 3341 10ca 9A72     		strb	r2, [r3, #10]
 967:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 3342              		.loc 1 967 0
 3343 10cc 0C4B     		ldr	r3, .L187
 3344 10ce 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3345 10d2 0133     		adds	r3, r3, #1
 3346 10d4 DAB2     		uxtb	r2, r3
 3347 10d6 0A4B     		ldr	r3, .L187
 3348 10d8 83F8D220 		strb	r2, [r3, #210]
 970:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 3349              		.loc 1 970 0
 3350 10dc 084B     		ldr	r3, .L187
 3351 10de B3F8D630 		ldrh	r3, [r3, #214]
 3352 10e2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3353 10e4 1146     		mov	r1, r2
 3354 10e6 1846     		mov	r0, r3
 3355 10e8 FFF7FEFF 		bl	crcIteration
 3356 10ec 0346     		mov	r3, r0
 3357 10ee 1A46     		mov	r2, r3
 3358 10f0 034B     		ldr	r3, .L187
 3359 10f2 A3F8D620 		strh	r2, [r3, #214]	@ movhi
 3360              	.L186:
 3361              		.loc 1 972 0
 3362 10f6 00BF     		nop
 3363 10f8 0837     		adds	r7, r7, #8
 3364              		.cfi_def_cfa_offset 8
 3365 10fa BD46     		mov	sp, r7
 3366              		.cfi_def_cfa_register 13
 3367              		@ sp needed
 3368 10fc 80BD     		pop	{r7, pc}
 3369              	.L188:
 3370 10fe 00BF     		.align	2
 3371              	.L187:
 3372 1100 00000000 		.word	openserial_vars
 3373              		.cfi_endproc
 3374              	.LFE31:
 3376              		.align	1
 3377              		.global	inputHdlcClose
 3378              		.syntax unified
 3379              		.thumb
 3380              		.thumb_func
 3381              		.fpu softvfp
 3383              	inputHdlcClose:
 3384              	.LFB32:
 973:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
 974:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \brief Finalize the incoming HDLC frame.
 975:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
 976:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** port_INLINE void inputHdlcClose(void) {
 3385              		.loc 1 976 0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 1, uses_anonymous_args = 0
 3389              		@ link register save eliminated.
 3390 1104 80B4     		push	{r7}
 3391              		.cfi_def_cfa_offset 4
 3392              		.cfi_offset 7, -4
 3393 1106 00AF     		add	r7, sp, #0
 3394              		.cfi_def_cfa_register 7
 977:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 978:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // verify the validity of the frame
 979:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.hdlcInputCrc==HDLC_CRCGOOD) {
 3395              		.loc 1 979 0
 3396 1108 0B4B     		ldr	r3, .L193
 3397 110a B3F8D630 		ldrh	r3, [r3, #214]
 3398 110e 4FF2B802 		movw	r2, #61624
 3399 1112 9342     		cmp	r3, r2
 3400 1114 08D1     		bne	.L190
 980:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // the CRC is correct
 981:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 982:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // remove the CRC from the input buffer
 983:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel    -= 2;
 3401              		.loc 1 983 0
 3402 1116 084B     		ldr	r3, .L193
 3403 1118 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3404 111c 023B     		subs	r3, r3, #2
 3405 111e DAB2     		uxtb	r2, r3
 3406 1120 054B     		ldr	r3, .L193
 3407 1122 83F8D220 		strb	r2, [r3, #210]
 984:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 985:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // the CRC is incorrect
 986:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 987:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // drop the incoming frame
 988:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.inputBufFillLevel     = 0;
 989:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 990:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3408              		.loc 1 990 0
 3409 1126 03E0     		b	.L192
 3410              	.L190:
 988:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
 3411              		.loc 1 988 0
 3412 1128 034B     		ldr	r3, .L193
 3413 112a 0022     		movs	r2, #0
 3414 112c 83F8D220 		strb	r2, [r3, #210]
 3415              	.L192:
 3416              		.loc 1 990 0
 3417 1130 00BF     		nop
 3418 1132 BD46     		mov	sp, r7
 3419              		.cfi_def_cfa_register 13
 3420              		@ sp needed
 3421 1134 80BC     		pop	{r7}
 3422              		.cfi_restore 7
 3423              		.cfi_def_cfa_offset 0
 3424 1136 7047     		bx	lr
 3425              	.L194:
 3426              		.align	2
 3427              	.L193:
 3428 1138 00000000 		.word	openserial_vars
 3429              		.cfi_endproc
 3430              	.LFE32:
 3432              		.align	1
 3433              		.global	task_printInputBufferOverflow
 3434              		.syntax unified
 3435              		.thumb
 3436              		.thumb_func
 3437              		.fpu softvfp
 3439              	task_printInputBufferOverflow:
 3440              	.LFB33:
 991:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 992:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== task ============================================
 993:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
 994:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printInputBufferOverflow(void){
 3441              		.loc 1 994 0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 1, uses_anonymous_args = 0
 3445 113c 80B5     		push	{r7, lr}
 3446              		.cfi_def_cfa_offset 8
 3447              		.cfi_offset 7, -8
 3448              		.cfi_offset 14, -4
 3449 113e 00AF     		add	r7, sp, #0
 3450              		.cfi_def_cfa_register 7
 995:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // input buffer overflow
 996:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printError(
 3451              		.loc 1 996 0
 3452 1140 0023     		movs	r3, #0
 3453 1142 0022     		movs	r2, #0
 3454 1144 0421     		movs	r1, #4
 3455 1146 0420     		movs	r0, #4
 3456 1148 FFF7FEFF 		bl	openserial_printError
 997:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         COMPONENT_OPENSERIAL,
 998:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ERR_INPUT_BUFFER_OVERFLOW,
 999:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0,
1000:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0
1001:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
1002:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3457              		.loc 1 1002 0
 3458 114c 00BF     		nop
 3459 114e 80BD     		pop	{r7, pc}
 3460              		.cfi_endproc
 3461              	.LFE33:
 3463              		.align	1
 3464              		.global	task_printWrongCRCInput
 3465              		.syntax unified
 3466              		.thumb
 3467              		.thumb_func
 3468              		.fpu softvfp
 3470              	task_printWrongCRCInput:
 3471              	.LFB34:
1003:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1004:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void task_printWrongCRCInput(void){
 3472              		.loc 1 1004 0
 3473              		.cfi_startproc
 3474              		@ args = 0, pretend = 0, frame = 0
 3475              		@ frame_needed = 1, uses_anonymous_args = 0
 3476 1150 80B5     		push	{r7, lr}
 3477              		.cfi_def_cfa_offset 8
 3478              		.cfi_offset 7, -8
 3479              		.cfi_offset 14, -4
 3480 1152 00AF     		add	r7, sp, #0
 3481              		.cfi_def_cfa_register 7
1005:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // invalid HDLC frame
1006:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_printError(
 3482              		.loc 1 1006 0
 3483 1154 0023     		movs	r3, #0
 3484 1156 0022     		movs	r2, #0
 3485 1158 3A21     		movs	r1, #58
 3486 115a 0420     		movs	r0, #4
 3487 115c FFF7FEFF 		bl	openserial_printError
1007:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         COMPONENT_OPENSERIAL,
1008:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         ERR_WRONG_CRC_INPUT,
1009:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0,
1010:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         (errorparameter_t)0
1011:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     );
1012:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3488              		.loc 1 1012 0
 3489 1160 00BF     		nop
 3490 1162 80BD     		pop	{r7, pc}
 3491              		.cfi_endproc
 3492              	.LFE34:
 3494              		.align	1
 3495              		.global	isr_openserial_tx
 3496              		.syntax unified
 3497              		.thumb
 3498              		.thumb_func
 3499              		.fpu softvfp
 3501              	isr_openserial_tx:
 3502              	.LFB35:
1013:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1014:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** //=========================== interrupt handlers ==============================
1015:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1016:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** // executed in ISR, called from scheduler.c
1017:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** void isr_openserial_tx(void) {
 3503              		.loc 1 1017 0
 3504              		.cfi_startproc
 3505              		@ args = 0, pretend = 0, frame = 0
 3506              		@ frame_needed = 1, uses_anonymous_args = 0
 3507 1164 80B5     		push	{r7, lr}
 3508              		.cfi_def_cfa_offset 8
 3509              		.cfi_offset 7, -8
 3510              		.cfi_offset 14, -4
 3511 1166 00AF     		add	r7, sp, #0
 3512              		.cfi_def_cfa_register 7
1018:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (openserial_vars.ctsStateChanged==TRUE) {
 3513              		.loc 1 1018 0
 3514 1168 214B     		ldr	r3, .L205
 3515 116a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3516 116c 012B     		cmp	r3, #1
 3517 116e 12D1     		bne	.L198
1019:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // set CTS
1020:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1021:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.fInhibited==TRUE) {
 3518              		.loc 1 1021 0
 3519 1170 1F4B     		ldr	r3, .L205
 3520 1172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3521 1174 012B     		cmp	r3, #1
 3522 1176 07D1     		bne	.L199
1022:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             uart_setCTS(FALSE);
 3523              		.loc 1 1022 0
 3524 1178 0020     		movs	r0, #0
 3525 117a FFF7FEFF 		bl	uart_setCTS
1023:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = FALSE;
 3526              		.loc 1 1023 0
 3527 117e 1C4B     		ldr	r3, .L205
 3528 1180 0022     		movs	r2, #0
 3529 1182 83F8DE24 		strb	r2, [r3, #1246]
 3530 1186 02E0     		b	.L200
 3531              	.L199:
1024:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
1025:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             uart_setCTS(TRUE);
 3532              		.loc 1 1025 0
 3533 1188 0120     		movs	r0, #1
 3534 118a FFF7FEFF 		bl	uart_setCTS
 3535              	.L200:
1026:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1027:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.ctsStateChanged = FALSE;
 3536              		.loc 1 1027 0
 3537 118e 184B     		ldr	r3, .L205
 3538 1190 0022     		movs	r2, #0
 3539 1192 5A70     		strb	r2, [r3, #1]
1028:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (openserial_vars.fInhibited==TRUE) {
1029:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // currently inhibited
1030:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1031:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.fBusyFlushing = FALSE;
1032:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
1033:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // not inhibited
1034:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1035:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.outputBufIdxW!=openserial_vars.outputBufIdxR) {
1036:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // I have some bytes to transmit
1037:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1038:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             uart_writeByte(openserial_vars.outputBuf[OUTPUT_BUFFER_MASK & (openserial_vars.outputBu
1039:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = TRUE;
1040:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
1041:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // I'm done sending bytes
1042:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1043:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = FALSE;
1044:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1045:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
1046:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3540              		.loc 1 1046 0
 3541 1194 2AE0     		b	.L204
 3542              	.L198:
1028:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (openserial_vars.fInhibited==TRUE) {
 3543              		.loc 1 1028 0
 3544 1196 164B     		ldr	r3, .L205
 3545 1198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 119a 012B     		cmp	r3, #1
 3547 119c 04D1     		bne	.L202
1031:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else {
 3548              		.loc 1 1031 0
 3549 119e 144B     		ldr	r3, .L205
 3550 11a0 0022     		movs	r2, #0
 3551 11a2 83F8DE24 		strb	r2, [r3, #1246]
 3552              		.loc 1 1046 0
 3553 11a6 21E0     		b	.L204
 3554              	.L202:
1035:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // I have some bytes to transmit
 3555              		.loc 1 1035 0
 3556 11a8 114B     		ldr	r3, .L205
 3557 11aa B3F8DA24 		ldrh	r2, [r3, #1242]
 3558 11ae 104B     		ldr	r3, .L205
 3559 11b0 B3F8DC34 		ldrh	r3, [r3, #1244]
 3560 11b4 9A42     		cmp	r2, r3
 3561 11b6 15D0     		beq	.L203
1038:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.fBusyFlushing = TRUE;
 3562              		.loc 1 1038 0
 3563 11b8 0D4B     		ldr	r3, .L205
 3564 11ba B3F8DC34 		ldrh	r3, [r3, #1244]
 3565 11be 5A1C     		adds	r2, r3, #1
 3566 11c0 91B2     		uxth	r1, r2
 3567 11c2 0B4A     		ldr	r2, .L205
 3568 11c4 A2F8DC14 		strh	r1, [r2, #1244]	@ movhi
 3569 11c8 C3F30903 		ubfx	r3, r3, #0, #10
 3570 11cc 084A     		ldr	r2, .L205
 3571 11ce 1344     		add	r3, r3, r2
 3572 11d0 93F8D930 		ldrb	r3, [r3, #217]	@ zero_extendqisi2
 3573 11d4 1846     		mov	r0, r3
 3574 11d6 FFF7FEFF 		bl	uart_writeByte
1039:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
 3575              		.loc 1 1039 0
 3576 11da 054B     		ldr	r3, .L205
 3577 11dc 0122     		movs	r2, #1
 3578 11de 83F8DE24 		strb	r2, [r3, #1246]
 3579              		.loc 1 1046 0
 3580 11e2 03E0     		b	.L204
 3581              	.L203:
1043:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
 3582              		.loc 1 1043 0
 3583 11e4 024B     		ldr	r3, .L205
 3584 11e6 0022     		movs	r2, #0
 3585 11e8 83F8DE24 		strb	r2, [r3, #1246]
 3586              	.L204:
 3587              		.loc 1 1046 0
 3588 11ec 00BF     		nop
 3589 11ee 80BD     		pop	{r7, pc}
 3590              	.L206:
 3591              		.align	2
 3592              	.L205:
 3593 11f0 00000000 		.word	openserial_vars
 3594              		.cfi_endproc
 3595              	.LFE35:
 3597              		.align	1
 3598              		.global	isr_openserial_rx
 3599              		.syntax unified
 3600              		.thumb
 3601              		.thumb_func
 3602              		.fpu softvfp
 3604              	isr_openserial_rx:
 3605              	.LFB36:
1047:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1048:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** /**
1049:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \pre executed in ISR, called from scheduler.c
1050:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1051:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** \returns 1 if don't receiving frame, 0 if not
1052:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** */
1053:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1054:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** uint8_t isr_openserial_rx(void) {
 3606              		.loc 1 1054 0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 8
 3609              		@ frame_needed = 1, uses_anonymous_args = 0
 3610 11f4 80B5     		push	{r7, lr}
 3611              		.cfi_def_cfa_offset 8
 3612              		.cfi_offset 7, -8
 3613              		.cfi_offset 14, -4
 3614 11f6 82B0     		sub	sp, sp, #8
 3615              		.cfi_def_cfa_offset 16
 3616 11f8 00AF     		add	r7, sp, #0
 3617              		.cfi_def_cfa_register 7
1055:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t rxbyte;
1056:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     uint8_t returnVal;
1057:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1058:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     returnVal = 0;
 3618              		.loc 1 1058 0
 3619 11fa 0023     		movs	r3, #0
 3620 11fc FB71     		strb	r3, [r7, #7]
1059:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1060:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     // read byte just received
1061:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     rxbyte = uart_readByte();
 3621              		.loc 1 1061 0
 3622 11fe FFF7FEFF 		bl	uart_readByte
 3623 1202 0346     		mov	r3, r0
 3624 1204 BB71     		strb	r3, [r7, #6]
1062:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1063:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     if (
1064:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==FALSE  &&
 3625              		.loc 1 1064 0
 3626 1206 314B     		ldr	r3, .L214
 3627 1208 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
 3628 120c 83F00103 		eor	r3, r3, #1
 3629 1210 DBB2     		uxtb	r3, r3
1063:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==FALSE  &&
 3630              		.loc 1 1063 0
 3631 1212 002B     		cmp	r3, #0
 3632 1214 12D0     		beq	.L208
1065:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcLastRxByte==HDLC_FLAG &&
 3633              		.loc 1 1065 0
 3634 1216 2D4B     		ldr	r3, .L214
 3635 1218 93F8D330 		ldrb	r3, [r3, #211]	@ zero_extendqisi2
1064:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcLastRxByte==HDLC_FLAG &&
 3636              		.loc 1 1064 0
 3637 121c 7E2B     		cmp	r3, #126
 3638 121e 0DD1     		bne	.L208
 3639              		.loc 1 1065 0
 3640 1220 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3641 1222 7E2B     		cmp	r3, #126
 3642 1224 0AD0     		beq	.L208
1066:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         rxbyte!=HDLC_FLAG
1067:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ) {
1068:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // start of frame
1069:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1070:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // I'm now receiving
1071:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving         = TRUE;
 3643              		.loc 1 1071 0
 3644 1226 294B     		ldr	r3, .L214
 3645 1228 0122     		movs	r2, #1
 3646 122a 83F8D420 		strb	r2, [r3, #212]
1072:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1073:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // create the HDLC frame
1074:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcOpen();
 3647              		.loc 1 1074 0
 3648 122e FFF7FEFF 		bl	inputHdlcOpen
1075:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1076:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // add the byte just received
1077:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcWrite(rxbyte);
 3649              		.loc 1 1077 0
 3650 1232 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3651 1234 1846     		mov	r0, r3
 3652 1236 FFF7FEFF 		bl	inputHdlcWrite
 3653 123a 3EE0     		b	.L209
 3654              	.L208:
1078:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (
1079:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==TRUE   &&
 3655              		.loc 1 1079 0
 3656 123c 234B     		ldr	r3, .L214
 3657 123e 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
1078:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (
 3658              		.loc 1 1078 0
 3659 1242 002B     		cmp	r3, #0
 3660 1244 19D0     		beq	.L210
 3661              		.loc 1 1079 0
 3662 1246 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3663 1248 7E2B     		cmp	r3, #126
 3664 124a 16D0     		beq	.L210
1080:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         rxbyte!=HDLC_FLAG
1081:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ) {
1082:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // middle of frame
1083:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1084:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // add the byte just received
1085:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcWrite(rxbyte);
 3665              		.loc 1 1085 0
 3666 124c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3667 124e 1846     		mov	r0, r3
 3668 1250 FFF7FEFF 		bl	inputHdlcWrite
1086:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.inputBufFillLevel+1>SERIAL_INPUT_BUFFER_SIZE){
 3669              		.loc 1 1086 0
 3670 1254 1D4B     		ldr	r3, .L214
 3671 1256 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3672 125a 0133     		adds	r3, r3, #1
 3673 125c C82B     		cmp	r3, #200
 3674 125e 2CDD     		ble	.L209
1087:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // push task
1088:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             scheduler_push_task(task_printInputBufferOverflow,TASKPRIO_OPENSERIAL);
 3675              		.loc 1 1088 0
 3676 1260 0E21     		movs	r1, #14
 3677 1262 1B48     		ldr	r0, .L214+4
 3678 1264 FFF7FEFF 		bl	scheduler_push_task
1089:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.inputBufFillLevel      = 0;
 3679              		.loc 1 1089 0
 3680 1268 184B     		ldr	r3, .L214
 3681 126a 0022     		movs	r2, #0
 3682 126c 83F8D220 		strb	r2, [r3, #210]
1090:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.hdlcBusyReceiving      = FALSE;
 3683              		.loc 1 1090 0
 3684 1270 164B     		ldr	r3, .L214
 3685 1272 0022     		movs	r2, #0
 3686 1274 83F8D420 		strb	r2, [r3, #212]
1086:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // push task
 3687              		.loc 1 1086 0
 3688 1278 1FE0     		b	.L209
 3689              	.L210:
1091:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1092:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     } else if (
1093:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==TRUE   &&
 3690              		.loc 1 1093 0
 3691 127a 144B     		ldr	r3, .L214
 3692 127c 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
1092:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving==TRUE   &&
 3693              		.loc 1 1092 0
 3694 1280 002B     		cmp	r3, #0
 3695 1282 1AD0     		beq	.L209
 3696              		.loc 1 1093 0
 3697 1284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3698 1286 7E2B     		cmp	r3, #126
 3699 1288 17D1     		bne	.L209
1094:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         rxbyte==HDLC_FLAG
1095:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     ) {
1096:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // end of frame
1097:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1098:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         // finalize the HDLC frame
1099:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         inputHdlcClose();
 3700              		.loc 1 1099 0
 3701 128a FFF7FEFF 		bl	inputHdlcClose
1100:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         openserial_vars.hdlcBusyReceiving      = FALSE;
 3702              		.loc 1 1100 0
 3703 128e 0F4B     		ldr	r3, .L214
 3704 1290 0022     		movs	r2, #0
 3705 1292 83F8D420 		strb	r2, [r3, #212]
1101:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1102:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         if (openserial_vars.inputBufFillLevel==0){
 3706              		.loc 1 1102 0
 3707 1296 0D4B     		ldr	r3, .L214
 3708 1298 93F8D230 		ldrb	r3, [r3, #210]	@ zero_extendqisi2
 3709 129c 002B     		cmp	r3, #0
 3710 129e 04D1     		bne	.L212
1103:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             // push task
1104:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             scheduler_push_task(task_printWrongCRCInput,TASKPRIO_OPENSERIAL);
 3711              		.loc 1 1104 0
 3712 12a0 0E21     		movs	r1, #14
 3713 12a2 0C48     		ldr	r0, .L214+8
 3714 12a4 FFF7FEFF 		bl	scheduler_push_task
 3715 12a8 07E0     		b	.L209
 3716              	.L212:
1105:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         } else {
1106:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_handleRxFrame();
 3717              		.loc 1 1106 0
 3718 12aa FFF7FEFF 		bl	openserial_handleRxFrame
1107:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             openserial_vars.inputBufFillLevel = 0;
 3719              		.loc 1 1107 0
 3720 12ae 074B     		ldr	r3, .L214
 3721 12b0 0022     		movs	r2, #0
 3722 12b2 83F8D220 		strb	r2, [r3, #210]
1108:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****             returnVal = 1;
 3723              		.loc 1 1108 0
 3724 12b6 0123     		movs	r3, #1
 3725 12b8 FB71     		strb	r3, [r7, #7]
 3726              	.L209:
1109:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****         }
1110:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     }
1111:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1112:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     openserial_vars.hdlcLastRxByte = rxbyte;
 3727              		.loc 1 1112 0
 3728 12ba 044A     		ldr	r2, .L214
 3729 12bc BB79     		ldrb	r3, [r7, #6]
 3730 12be 82F8D330 		strb	r3, [r2, #211]
1113:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** 
1114:build\openmote-cc2538_armgcc\drivers\common/openserial.c ****     return returnVal;
 3731              		.loc 1 1114 0
 3732 12c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1115:build\openmote-cc2538_armgcc\drivers\common/openserial.c **** }
 3733              		.loc 1 1115 0
 3734 12c4 1846     		mov	r0, r3
 3735 12c6 0837     		adds	r7, r7, #8
 3736              		.cfi_def_cfa_offset 8
 3737 12c8 BD46     		mov	sp, r7
 3738              		.cfi_def_cfa_register 13
 3739              		@ sp needed
 3740 12ca 80BD     		pop	{r7, pc}
 3741              	.L215:
 3742              		.align	2
 3743              	.L214:
 3744 12cc 00000000 		.word	openserial_vars
 3745 12d0 00000000 		.word	task_printInputBufferOverflow
 3746 12d4 00000000 		.word	task_printWrongCRCInput
 3747              		.cfi_endproc
 3748              	.LFE36:
 3750              	.Letext0:
 3751              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3752              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3753              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3754              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 3755              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3756              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3757              		.file 8 "bsp\\boards\\openmote-cc2538/board_info.h"
 3758              		.file 9 "inc/opendefs.h"
 3759              		.file 10 "build\\openmote-cc2538_armgcc\\drivers\\common\\openserial.h"
 3760              		.file 11 "kernel/scheduler.h"
 3761              		.file 12 "drivers\\common/opentimers.h"
 3762              		.file 13 "openstack\\02a-MAClow/IEEE802154E.h"
 3763              		.file 14 "openstack\\03b-IPv6/icmpv6rpl.h"
 3764              		.file 15 "openstack\\cross-layers/idmanager.h"
 3765              		.file 16 "build\\openmote-cc2538_armgcc\\drivers\\common\\openhdlc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 openserial.c
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:16     .rodata:00000000 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:19     .rodata:00000000 rreg_uriquery
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:24     .rodata:00000008 infoBoardname
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:29     .rodata:00000010 infouCName
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:34     .rodata:00000018 infoRadioName
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:39     .rodata:00000024 infoStackName
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:44     .rodata:00000030 chTemplate_default
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:64     .rodata:00000040 ebIEsBytestream
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:96     .rodata:0000005c all_routers_multicast
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:116    .rodata:0000006c linklocalprefix
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:128    .rodata:00000074 fcstab
                            *COM*:000004e4 openserial_vars
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:387    .text:00000000 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:394    .text:00000000 openserial_init
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:490    .text:00000098 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2969   .text:00000f18 openserial_debugPrint_timer_cb
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3604   .text:000011f4 isr_openserial_rx
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3501   .text:00001164 isr_openserial_tx
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:497    .text:000000a8 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:504    .text:000000a8 openserial_register
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:537    .text:000000c0 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:541    .text:000000c4 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:548    .text:000000c4 openserial_printStatus
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3041   .text:00000f44 outputHdlcOpen
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3090   .text:00000f80 outputHdlcWrite
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3181   .text:00001008 outputHdlcClose
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1552   .text:000005e4 openserial_flush
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:636    .text:0000013a openserial_printInfo
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1785   .text:000006e8 openserial_printInfoErrorCritical
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:691    .text:00000174 openserial_printError
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:748    .text:000001b2 openserial_printCritical
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:810    .text:0000020c $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3005   .text:00000f2e openserial_board_reset_cb
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:815    .text:00000214 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:822    .text:00000214 openserial_printData
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:928    .text:000002b0 openserial_printSniffedPacket
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1016   .text:00000326 openserial_print_uint32_t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1087   .text:00000378 openserial_print_str
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1197   .text:00000416 task_openserial_debugPrint
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1246   .text:00000458 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1258   .text:00000488 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1729   .text:000006b0 debugPrint_outBufferIndexes
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1407   .text:0000054c $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1411   .text:00000550 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1418   .text:00000550 openserial_getInputBufferFillLevel
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1455   .text:00000574 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1459   .text:00000578 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1466   .text:00000578 openserial_getInputBuffer
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1540   .text:000005dc $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1545   .text:000005e4 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1636   .text:0000066c $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1640   .text:00000670 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1647   .text:00000670 openserial_inhibitStart
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1675   .text:00000688 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1679   .text:0000068c $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1686   .text:0000068c openserial_inhibitStop
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1718   .text:000006ac $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1722   .text:000006b0 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1774   .text:000006e4 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1778   .text:000006e8 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1888   .text:00000784 openserial_handleRxFrame
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1915   .text:000007a0 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1932   .text:000007e4 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2008   .text:0000083c openserial_handleEcho
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2477   .text:00000b48 openserial_handleCommands
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:1996   .text:00000834 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2001   .text:0000083c $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2048   .text:0000085a openserial_get6pInfo
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2466   .text:00000b44 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2470   .text:00000b48 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2553   .text:00000bdc $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2573   .text:00000c2c $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2911   .text:00000ed8 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2914   .text:00000edc $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2958   .text:00000f14 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:2962   .text:00000f18 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3079   .text:00000f7c $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3083   .text:00000f80 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3170   .text:00001004 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3174   .text:00001008 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3239   .text:00001060 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3243   .text:00001064 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3250   .text:00001064 inputHdlcOpen
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3282   .text:00001084 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3286   .text:00001088 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3293   .text:00001088 inputHdlcWrite
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3372   .text:00001100 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3376   .text:00001104 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3383   .text:00001104 inputHdlcClose
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3428   .text:00001138 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3432   .text:0000113c $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3439   .text:0000113c task_printInputBufferOverflow
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3470   .text:00001150 task_printWrongCRCInput
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3593   .text:000011f0 $d
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3597   .text:000011f4 $t
C:\Users\Lee\AppData\Local\Temp\cccC8gXi.s:3744   .text:000012cc $d
                           .group:00000000 wm4.0.93d65e4ff05d5af51629690e5b534e57
                           .group:00000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:00000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:00000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdarg.h.31.3fa7b8f6daaa31edd1696c08c77f2a73
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.22.34c159473b0affd9f1a6f5aa8cf576c9
                           .group:00000000 wm4.opendefs.h.23.3a22b672f37c862344b7aef3ebe35451
                           .group:00000000 wm4.openserial.h.9.54cba76416a433dd83d4dbee26225c4c
                           .group:00000000 wm4.scheduler.h.2.eb68556b8ec5a9773a999c64d41ac76c
                           .group:00000000 wm4.opentimers.h.8.eb1cab84a6e82ba9569a1990291c92ba
                           .group:00000000 wm4.schedule.h.2.655275e038307b96d02df4174b9f26be
                           .group:00000000 wm4.IEEE802154E.h.31.0ae4fc33f8fea842f27863b9e73e066e
                           .group:00000000 wm4.icmpv6rpl.h.2.f31802bcce2a0808bf5db39ce34f4322
                           .group:00000000 wm4.neighbors.h.15.7d3ab5965b5b1193d3498491ae404451
                           .group:00000000 wm4.sixtop.h.2.ee4bd0b70b528bdc38891cf2a16bad67
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69
                           .group:00000000 wm4.uart.h.20.8d188df69602f1858db1ebd9c6160fb8
                           .group:00000000 wm4.openhdlc.h.9.2ec935be854fadcc84e19db4fe730cfa
                           .group:00000000 wm4.msf.h.2.f85db7704dc29e6182d0ed30c629097b

UNDEFINED SYMBOLS
memset
opentimers_create
opentimers_scheduleIn
uart_setCallbacks
uart_enableInterrupts
idmanager_getMyID
leds_error_toggle
leds_error_blink
opentimers_getValue
opentimers_scheduleAbsolute
ieee154e_getAsn
IntMasterDisable
IntMasterEnable
debugPrint_isSync
debugPrint_id
debugPrint_myDAGrank
debugPrint_asn
debugPrint_macStats
debugPrint_schedule
debugPrint_backoff
debugPrint_queue
debugPrint_neighbors
debugPrint_kaPeriod
debugPrint_joined
memcpy
uart_setCTS
uart_writeByte
idmanager_triggerAboutRoot
board_reset
openbridge_triggerData
sixtop_setEBPeriod
ieee154e_setSingleChannel
sixtop_setKaPeriod
icmpv6rpl_setDIOPeriod
icmpv6rpl_setDAOPeriod
icmpv6rpl_setMyDAGrank
ieee154e_setIsSecurityEnabled
schedule_setFrameLength
ieee154e_setIsAckEnabled
icmpv6rpl_getPreferredParentEui64
msf_getsfid
sixtop_request
ieee154e_setSlotDuration
sixtop_setIsResponseEnabled
msf_appPktPeriod
icmpv6echo_setIsReplyEnabled
idmanager_setJoinKey
crcIteration
uart_readByte
scheduler_push_task
